#------------------------------------------------------------------------------
#
# GENERIC WORDS, sorted alphabetically
#
#------------------------------------------------------------------------------

action=动作
actions=动作
active=激活
activate=激活
add_verb=添加
admin=管理
after=之后
apply=应用
all=所有
and=并
anonymous=匿名
any=任何
ascending=正序
assignee=分配人
author=作者
billion=十亿
bitbucket=Bitbucket
back=返回
backup=备份
backup_verb=备份
best=最好
beta=公测
blocker=阻断
bold=粗体
branch=分支
by_=由
calendar=日历
cancel=取消
category=目录
changelog=修改日志
change_verb=修改
check_all=全选
class=类
classes=类
close=关闭
closed=已关闭
code=代码
color=颜色
collapse_all=全部折叠
compare=比较
component=组件
configure=配置
confirm=确认
continue=继续
copy=复制
create=创建
create_new_element=创建新元素
created=已创建
created_on=创建于
critical=严重
current=当前
current_noun=当前
customize=自定义
date=日期
days=天数
default=默认
delete=删除
deprecated=废弃
descending=倒序
description=描述
directories=目录
directory=目录
dismiss=清除
dismiss_permanently=永久清除
display=显示
documentation=文档
download_verb=下载
duplications=重复
end_date=结束时间
edit=编辑
error=错误
events=事件
example=示例
expand_all=全部展开
explore=浏览
extend=展开
false=否
favorite=关注
field_required=必填字段
fields_marked_with_x_required=所有标有 {star} 的字段都是必填的
file=文件
files=文件
filters=过滤器
follow=跟踪
format=格式化
from=从
global=全局
github=GitHub
help=帮助
here=此处
hide=隐藏
inactive=未激活
info=信息
issue=问题
issues=问题
inheritance=集成
internal=内部
key=标识
language=语言
last_analysis=最近分析
learn_more=了解更多
library=库
line_number=行号
links=链接
list_of_issues=问题列表
list_of_projects=项目列表
load_more=加载更多
load_verb=加载
loading=加载中
login=登录
major=主要
manual=手工
max=最大
max_results_reached=只显示前 {0} 条结果
me=我
members=成员
min=最小
minor=次要
more=更多
more_x={0} 更多
more_actions=更多动作
my_issues=更多问题
my_favorite=我的收藏
my_favorites=我的收藏
my_projects=我的项目
name=名称
navigation=导航
never=尚未
new=新建
new_name=新名称
none=没有
no_tags=无标签
not_now=非实时
off=关闭
on=打开
or=或
open=打开
optional=可选
order=排序
owner=负责人
parameters=参数
password=密码
path=路径
permalink=永久链接
plugin=插件
project=项目
project_x=项目：{0}
projects=项目
projects_=项目
x_projects_={0} 个项目
project_plural=项目
projects_management=项目管理
quality_profile=质量配置
raw=原代码
recent_history=最新历史
recently_browsed=最近浏览
recommended=推荐
refresh=刷新
reload=刷新
remove=删除
rename=改名
replaces=替换
reset_verb=重置
reset_to_default=重置回默认
resolution=解决
restart=重启
restore=恢复
result=结果
results=结果
x_results={0} 个结果
review=评审
rule=规则
rules=规则
save=保存
search_results=搜索结果
search_verb=搜索
secondary=第二
see_all=查看全部
see_x=查看 {0}
select_verb=选择
selected=选中
select_tags=添加或删除标签
set=设置
set_up=设置
severity=严重
shared=分享
show_all=显示全部
start_date=开始时间
x_show={0} 显示
x_selected=选中 {0}
x_of_y_shown=显示 {1} 中的 {0}
size=大小
skip=跳过
skip_to_content=跳至主要内容
status=状态
support=支持
success=成功
table=表格
tags=标签
tags_list_x=标签列表：{0}
technical_debt=技术债务
template=模板
title=标题
to=至
to_=至
total=总数
treemap=树形
true=是
type=类型
unassigned=未分配
uncheck_all=取消
unit_test=单元测试
unit_tests=单元测试
unknown=未知
unresolved=未处理
updated=已更新
updated_on=更新于
update_verb=更新
updating=更新
unselected=取消
user=用户
value=值
variation=变动
version=版本
view=视图
views=视图
violations=违规
visibility=可见
warnings=警告
with=和
worst=最坏
yes=是
no=否
valid_input=有效输入



#------------------------------------------------------------------------------
#
# GENERIC EXPRESSIONS, sorted alphabetically
#
#------------------------------------------------------------------------------

404_not_found=404 未找到
address_mistyped_or_page_moved=可能输入了错误的地址或页面被移动了。
and_worse=以及更差
are_you_sure=是否确认？
as_explained_here=可以解释为
assigned_to=分配给
bulk_change=批量修改
bulleted_point=符号点
clear=清空
clear_x_filter=清空 {0} 条件
clear_all_filters=清空所有条件
coding_rules=代码规则
copy_to_clipboard=单击复制至剪切板
copied_action=复制
created_by=创建者
default_error_message=无法处理请求。请稍后重试。
default_severity=默认严重性
edit_permissions=修改权限
facet_might_have_more_results=可能还有更多结果，可以尝试其他搜索方式。
false_positive=误判
go_back_to_homepage=返回首页
last_analysis_before=最后一次分析之前
less_than_1_hour_ago=少于一小时
logging_out=正在注销，请稍候。。。
manage=管理
management=管理
more_information=更多信息
new_violations=新问题
new_window=新窗口
no_data=无数据
no_results=无结果
no_results_for_x=没有符合 "{0}" 的结果
no_results_search=无结果。尝试修改搜索条件获取结果。
no_results_search.favorites=根据收藏中的条件，找不到任何匹配的结果。
no_results_search.2=尝试修改条件获得一些结果。
no_results_search.favorites.2=是否搜索 {url} 项目？
opens_in_new_window=在新窗口打开
page_extension_failed=页面扩展失败。
page_not_found=页面不存在。
please_contact_administrator=请联系管理员。
set_as_default=设为默认
short_number_suffix.g=G
short_number_suffix.k=K
short_number_suffix.m=M
show_less=更少
show_more=更多
show_all=全部
show_them=显示
should_be_unique=应该唯一
since_x=自 {0}
since_version=自版本 {0}
since_version.short={0}
since_version_detailed=自版本 {0} ({1})
since_version_detailed.short={0} ({1})
since_previous_version=自上个版本
since_previous_version.short=\u0394 版本
since_previous_version_detailed=自上个版本 ({0})
since_previous_version_with_only_date=自上个版本 ({0})
since_previous_version_detailed.short=\u0394 版本 ({0})
this_name_is_already_taken=名称已被占用。
update_details=更新详情
work_duration.x_days={0} 天
work_duration.x_hours={0} 小时
work_duration.x_minutes={0} 分钟
work_duration.about=~ {0}


#------------------------------------------------------------------------------
#
# CALENDAR
#
#------------------------------------------------------------------------------

Done=完成
Prev=前一个
Next=后一个
Today=今天
January=一月
February=二月
March=三月
April=四月
May=五月
June=六月
July=七月
August=八月
September=九月
October=十月
November=十一月
December=十二月
Jan=1
Feb=2
Mar=3
Apr=4
Jun=6
Jul=7
Aug=8
Sep=9
Oct=10
Nov=11
Dec=12
Sunday=周日
Monday=周一
Tuesday=周二
Wednesday=周三
Thursday=周四
Friday=周五
Saturday=周六
Sun=日
Mon=一
Tue=二
Wed=三
Thu=四
Fri=五
Sat=六
Su=日
Mo=1
Tu=2
We=3
Th=4
Fr=5
Sa=6
select_month=选一个月
select_year=选一年

#------------------------------------------------------------------------------
#
# ALM
#
#------------------------------------------------------------------------------

alm.azure=Azure Devops 服务器
alm.azure.short=Azure DevOps
alm.bitbucket=Bitbucket 服务器
alm.bitbucket.short=Bitbucket
alm.bitbucket.long=Bitbucket 服务器
alm.bitbucketcloud=Bitbucket
alm.bitbucketcloud.short=Bitbucket
alm.bitbucketcloud.long=Bitbucket Cloud
alm.github=Github
alm.github.short=GitHub
alm.gitlab=GitLab
alm.gitlab.short=GitLab

#------------------------------------------------------------------------------
#
# RESOURCE QUALIFIERS
#
#------------------------------------------------------------------------------

qualifier.TRK=项目
qualifier.DIR=目录
qualifier.PAC=包
qualifier.VW=视图
qualifier.SVW=子视图
qualifier.APP=应用
qualifier.FIL=文件
qualifier.CLA=文件
qualifier.UTS=单元测试文件
qualifier.DEV=开发者

qualifier.configuration.TRK=项目配置
qualifier.configuration.VW=视图配置
qualifier.configuration.SVW=子视图配置
qualifier.configuration.APP=应用配置

qualifiers.TRK=项目
qualifiers.DIR=目录
qualifiers.PAC=包
qualifiers.VW=视图
qualifiers.SVW=子视图
qualifiers.APP=应用
qualifiers.FIL=文件
qualifiers.CLA=文件
qualifiers.UTS=单元测试文件
qualifiers.DEV=开发者

qualifiers.all.TRK=所有项目
qualifiers.all.VW=所有视图
qualifiers.all.DEV=所有开发者
qualifiers.all.APP=所有应用

qualifiers.new.TRK=新项目
qualifiers.new.VW=新视图
qualifiers.new.DEV=新开发者
qualifiers.new.APP=新应用

qualifier.delete.TRK=删除项目
qualifier.delete.VW=删除视图
qualifier.delete.APP=删除应用

qualifiers.delete.TRK=删除项目
qualifiers.delete.VW=删除视图
qualifiers.delete.APP=删除应用

qualifier.delete_confirm.TRK=是否确认删除项目？
qualifier.delete_confirm.VW=是否确认删除视图？
qualifier.delete_confirm.APP=是否确认删除应用？

qualifiers.delete_confirm.TRK=确认删除项目吗？
qualifiers.delete_confirm.VW=确认删除视图吗？
qualifiers.delete_confirm.APP=确认删除应用吗？

qualifiers.create.TRK=创建项目
qualifiers.create.VW=创建视图
qualifiers.create.DEV=创建开发者
qualifiers.create.APP=创建应用

qualifiers.update.VW=更新视图
qualifiers.update.DEV=更新开发者
qualifiers.update.APP=更新应用

qualifier.description.VW=潜在多层级，面向管理的总览聚合。
qualifier.description.SVW=潜在多层级，面向管理的总览聚合。
qualifier.description.APP=单层级聚合，针对某个技术和类似一个项目的首页。


#------------------------------------------------------------------------------
#
# Admin notification
#
#------------------------------------------------------------------------------
admin_notification.update.new_minor_version=新版本的 SonarQube 可用。更新获取最新功能吧。
admin_notification.update.new_patch=SonarQube 发布了一个更新。修复了最新的安全问题和 Bug。
admin_notification.update.pre_lts=当前使用的 SonarQube 生命周期即将结束。请在方便时更新至最新的支持版本。
admin_notification.update.previous_lts=当前使用的 SonarQube 生命周期已结束。请尽快更新至最新的支持版本。

#------------------------------------------------------------------------------
#
# PROJECT LINKS
#
#------------------------------------------------------------------------------

project_links.homepage=首页
project_links.ci=持续集成
project_links.issue=问题
project_links.scm=源码
project_links.scm_ro=只读链接
project_links.scm_dev=开发链接

project_links.create_new_project_link=创建新项目链接
project_links.delete_project_link=删除项目链接
project_links.are_you_sure_to_delete_x_link=是否确认删除链接 "{0}"？
project_links.name=名称
project_links.url=网址


#------------------------------------------------------------------------------
#
# EVENT CATEGORIES
#
#------------------------------------------------------------------------------

event.category.All=全部
event.category.VERSION=版本
event.category.QUALITY_GATE=质量阈
event.category.QUALITY_PROFILE=质量配置
event.category.DEFINITION_CHANGE=修改定义
event.category.OTHER=其他
event.quality_gate.still_x=依旧为 {status}
event.definition_change.added={project} 已添加
event.definition_change.removed={project} 已删除
event.definition_change.branch_added={project} {branch} 已添加
event.definition_change.branch_removed={project} {branch} 已删除
event.definition_change.branch_replaced={project} {oldBranch} 修改为 {newBranch}


#------------------------------------------------------------------------------
#
# LAYOUT
#
#------------------------------------------------------------------------------

layout.home=首页
layout.login=登录
layout.logout=注销
layout.measures=指标
layout.settings=配置
layout.security_hotspots=安全热点
layout.settings.TRK=项目配置
layout.settings.APP=应用配置
layout.settings.VW=视图配置
layout.settings.SVW=视图配置
layout.security_reports=安全报告
layout.sonar.slogan=质量标准
layout.must_be_configured=会在项目配置并分析后生效
layout.all_project_must_be_accessible=需要访问 {0} 其中所有的项目。

sidebar.projects=项目
sidebar.project_settings=配置
sidebar.security=权限
sidebar.system=系统
sidebar.tools=工具


#------------------------------------------------------------------------------
#
# VISIBILITY
#
#------------------------------------------------------------------------------

visibility.both=公开，私有
visibility.public=公开
visibility.public.description.TRK=公开项目。所有人都可以浏览并查看源码。
visibility.public.description.VW=公开文件夹。所有人都可以浏览。
visibility.public.description.APP=公开应用。所有人都可以浏览。
visibility.public.description.short=所有人都可以浏览并查看源码。
visibility.public.description.long=所有人都可以浏览源码，并查看分析结果。
visibility.private=私有
visibility.private.description.TRK=私有项目。只有授权用户可以浏览并查看源码。
visibility.private.description.VW=私有文件夹。只有授权用户可以浏览。
visibility.private.description.APP=私有应用。只有授权用户可以浏览。
visibility.private.description.short=只有授权用户可以浏览并查看源码。
visibility.private.description.long=只有组织成员可以浏览源码并查看分析结果。


#------------------------------------------------------------------------------
#
# ADMIN PAGE TITLES and descriptions
#
#------------------------------------------------------------------------------

coding_rules.page=代码规则
global_permissions.page=全局权限
global_permissions.page.description=在全局层次上进行授予和回收权限。这些权限包含修改质量配置，分享仪表盘，和进行全局系统管理。
roles.page=项目权限
roles.page.description2=授予和收回项目级别的权限。权限可以授予群组或单独用户。
roles.page.description_portfolio=授权和收回文件夹级别的权限。权限可以授予群组或单独用户。
roles.page.description_application=授予和回收应用级别的权限。权限可以授予群组或单独用户。
project_settings.page=设置
project_settings.page.description=编辑项目设置。
project_links.page=链接
project_links.page.description=编辑项目相关的一些链接。
projects_management.page.description=一次删除多个项目，或者在首次分析之前对项目进行配置。一旦配置了项目，你就可以进行所有的项目配置。
settings.page=通用设置
settings.page.description=编辑 SonarQube 实例的全局设置。
system_info.page=系统信息
project_quality_profiles.page=质量配置
project_quality_profiles.page.description=基于语言选择项目分配哪个配置（注意你只需要为多语言项目选择配置）。
project_quality_gate.page=质量阈
project_quality_gate.page.description=选择者项目分配哪个质量阈。
update_key.page=更新标识
update_key.page.description=编辑项目的标识。必须在使用新标识分析项目之前进行修改，否则分析会使用新标识创建另一个项目，而不会更新已有项目。
deletion.page=删除
project_deletion.page.description=从 SonarQube 数据库删除这个项目。
portfolio_deletion.page.description=删除文件夹。组件级项目和本地引用的文件夹都不会删除，组件标准文件夹会被删除。此操作无法撤销。
application_deletion.page.description=删除应用。应用项目不会删除。此操作无法撤销。
application.branches.help=在应用中非常便利的创建应用分支，实现项目分支的组合。
application.branches.link=创建分支
project_branch_pull_request.page=分支 & 拉取请求
project_branch_pull_request.lifetime_information=分支和拉取请求会在没有执行分析后的 {days} 天后删除。
project_branch_pull_request.lifetime_information.admin=可以在 {settings} 中修改此项全局配置。
project_branch_pull_request.branch.rename=重命名分支
project_branch_pull_request.branch.delete=删除分支
project_branch_pull_request.branch.delete.are_you_sure=是否确认删除分支 "{0}"？
project_branch_pull_request.branch.auto_deletion.keep_when_inactive=非激活状态下也需要保留
project_branch_pull_request.branch.auto_deletion.keep_when_inactive.tooltip=启用时，非激活状态的分支也不会自动删除。
project_branch_pull_request.branch.auto_deletion.main_branch_tooltip=主分支不会自动删除。
project_branch_pull_request.pull_request.delete=删除拉去请求
project_branch_pull_request.pull_request.delete.are_you_sure=是否确认删除拉取请求 "{0}"？
project_branch_pull_request.tabs.branches=分支
project_branch_pull_request.tabs.pull_requests=拉取请求
project_branch_pull_request.table.branch=分支
project_branch_pull_request.table.pull_request=拉取请求
project_branch_pull_request.last_analysis_date=最后分析时间

project_baseline.page=新代码周期
project_baseline.page.description=管理项目的新代码周期。{link}
project_baseline.page.description.link=更多
project_baseline.page.description2=可以对全局配置进行调整 {link}
project_baseline.page.description2.link=通用配置
project_baseline.default_setting=项目配置
project_baseline.general_setting=使用通用配置
project_baseline.specific_setting=为项目设置指定配置
project_baseline.configure_branches=为分支设指定用配置

baseline.previous_version=上个版本
baseline.previous_version.description=新代码周期会从上个版本的分析开始计算
baseline.number_days=天数
baseline.number_days.description=使用指定天数作为新代码周期的浮动窗口。
baseline.specific_analysis=指定分析
baseline.specific_analysis.description=为新代码周期选择一次分析，作为基线。
baseline.reference_branch=引用分支

baseline.reference_branch.description=为新代码选择引用分支
baseline.reference_branch.description2=选择的引用分支需要定义自己的新代码定义，避免把自己当做一个引用。

baseline.specify_days=指定天数
baseline.last_analysis_before=上次分析之前
baseline.next_analysis_notice=修改会再下次分析之后生效

baseline.reference_branch.choose=选择分支
baseline.reference_branch.does_not_exist=SonarQube 中找不到分支 {0}。
baseline.reference_branch.cannot_be_itself=分支不能引用自己
baseline.reference_branch.invalid_branch_setting=分支 {0} 不能引用自己。使用指定配置代替项目级配置。
baseline.edit_branch_setting=编辑分支配置

branch_list.branch=分支
branch_list.current_setting=配置
branch_list.current_baseline=当前基线
branch_list.actions=动作
branch_list.default_setting=项目配置

baseline.new_code_period_for_branch_x=新代码周期 {0}

baseline.analysis_from=开始分析：
baseline.branch_analyses.ranges.30days=近 30 天
baseline.branch_analyses.ranges.allTime=所有时间
baseline.no_analyses=无分析

regulatory_report.page=监管报告
regulatory_report.description1=监管报表会导出一个 zip 文件，包含选择分支的快照。包含：
regulatory_report.bullet_point1=项目选择的分支的概览。
regulatory_report.bullet_point2=项目量相关的配置（质量配置，质量阈，排除的分析）。
regulatory_report.bullet_point3=选择分支的新代码和全部代码列表。
regulatory_report.description2=生成并下载报告会花费几分钟时间。
regulatory_page.download_start.sentence=稍后开始下载，可能花费一些时间。
regulatory_page.select_branch=选择分支

#------------------------------------------------------------------------------
#
# OTHER PAGE TITLES
#
#------------------------------------------------------------------------------

overview.page=总览
code.page=代码
permissions.page=权限
quality_profiles.page=质量配置
quality_gates.page=质量阈
issues.page=问题
issues.skip_to_filters=跳至问题搜索
issues.skip_to_list=跳至问题列表
view_projects.page=项目
portfolios.page=文件夹
portfolio_breakdown.page=文件夹崩溃页
project_activity.page=活动

#------------------------------------------------------------------------------
#
# ASYNC PROCESS
#
#------------------------------------------------------------------------------

process.still_working=正在处理...
process.fail=失败


#------------------------------------------------------------------------------
#
# SESSION
#
#------------------------------------------------------------------------------

sessions.log_in=登录
#------------------------------------------------------------------------------
#
# Audit Logs
#
#------------------------------------------------------------------------------

audit_logs.page=审计日志
audit_logs.page.description.1=审计日志可以帮助管理员对平台进行控制，保持对高风险操作的跟踪。
audit_logs.page.description.2=实例设置为对 {housekeeping} 记录审计日志。可以通过 {link} 修改天数。
audit_logs.page.description.link=管家策略

audit_logs.housekeeping_policy.Weekly=7 天
audit_logs.housekeeping_policy.Monthly=30 天
audit_logs.housekeeping_policy.Trimestrial=90 天
audit_logs.housekeeping_policy.Yearly=1 年

audit_logs.download=下载审计日志
audit_logs.download_start.try_again=重试
audit_logs.download_start.sentence.1=很快会启动下载。如果周期较长可能会耗费一段时间。
audit_logs.download_start.sentence.2=如果下载没有开始，可以尝试缩短获取审计日志的时间区间。
audit_logs.download_start.sentence.3=修改以上配置下载更多审计日志。

audit_logs.range_option.today=今天
audit_logs.range_option.7days=7 天
audit_logs.range_option.30days=30 天
audit_logs.range_option.90days=90 天
audit_logs.range_option.custom=子定义

#------------------------------------------------------------------------------
#
# HOTSPOTS
#
#------------------------------------------------------------------------------

risk_exposure.HIGH=高
risk_exposure.MEDIUM=中
risk_exposure.LOW=低

hotspots.page=安全热点
hotspots.no_hotspots.title=没有需要审查的安全热点。
hotspots.no_hotspots.description=如果下次分析代码时出现潜在安全风险，风险会显示在此处。
hotspots.no_hotspots_for_file.title=选择的文件没有热点。
hotspots.no_hotspots_for_file.description=返回选择其他文件，或点击“显示所有安全热点”。
hotspots.no_hotspots_for_filters.title=指定搜索条件下没有匹配的结果。
hotspots.no_hotspots_for_filters.description=可以修改搜索条件获取结果。
hotspots.no_hotspots_for_keys.title=请求的热点已不存在。
hotspots.no_hotspots_for_keys.description=因对应代码已修改或删除，信息已经关闭。
hotspots.learn_more=了解更多安全热点的信息
hotspots.list_title={0} 安全热点
hotspots.list_title.TO_REVIEW=待审查的安全热点 {0}
hotspots.list_title.ACKNOWLEDGED={0} 安全热点被审查为已确认
hotspots.list_title.FIXED={0} 安全热点被审查为已修复
hotspots.list_title.SAFE={0} 安全热点被审查为安全
hotspots.risk_exposure=审查优先级

hotspots.tabs.code=风险在哪儿？
hotspots.tabs.risk_description=有什么风险？
hotspots.tabs.vulnerability_description=对风险进行评估
hotspots.tabs.fix_recommendations=如何修复？
hotspots.review_history.created=安全热点已创建
hotspots.review_history.comment_added=添加了一条评论
hotspots.comment.field=评论：
hotspots.comment.open=评论
hotspots.comment.submit=评论
hotspots.open_in_ide.open=用 IDE 打开
hotspots.open_in_ide.success=成功。切换到 IDE 查看安全热点。
hotspots.open_in_ide.failure=无法连接到你的 IDE 以打开安全热点。请确认使用了最新版本的 SonarLint。

hotspots.assignee.select_user=选择用户...
hotspots.assignee.change_user=修改负责人
hotspots.status.cannot_change_status=修改热点的状态需要权限。
hotspots.status.select_status=选择状态
hotspots.status.add_comment=添加评论（可选）
hotspots.status.change_status=修改状态
hotspots.status_option.TO_REVIEW=需要审查
hotspots.status_option.TO_REVIEW.description=需要审查此安全热点以评估代码是否存在风险。
hotspots.status_option.ACKNOWLEDGED=已确认
hotspots.status_option.ACKNOWLEDGED.description=代码已经过审查，确实存在风险，需要修复。
hotspots.status_option.FIXED=已修复
hotspots.status_option.FIXED.description=代码已经过审查和修改，已遵循推荐的安全编码实践。
hotspots.status_option.SAFE=安全
hotspots.status_option.SAFE.description=代码已经过审查，不构成风险。它不需要修改。
hotspots.get_permalink=永久链接
hotspots.no_associated_lines=安全热点来自以下文件：
hotspots.congratulations=祝贺你！
hotspots.find_in_status_filter_x=你可以修改状态过滤条件为 {status_label} 来再次找到此数据。
hotspots.successful_status_change_to_x=成功修改为 "{0}"
hotspots.x_done_keep_going={percentage} 的安全热点已经过审查。
hotspots.see_x_hotspots=审查 "{0}" 安全热点
hotspots.continue_to_next_hotspot=继续审查

hotspot.filters.title=条件
hotspot.filters.assignee.assigned_to_me=分配给我
hotspot.filters.assignee.all=全部
hotspot.filters.status=状态条件
hotspot.filters.status.to_review=需要审查
hotspot.filters.status.acknowledged=已确认
hotspot.filters.status.fixed=已修复
hotspot.filters.period=周期过滤器
hotspot.filters.period.since_leak_period=新代码
hotspot.filters.period.overall=全部代码
hotspot.filters.status.safe=安全
hotspot.filters.show_all=显示所有热点
hotspot.section.activity=近期活动：

hotspots.reviewed.tooltip=所有未关闭安全热点中，已经过审查（已确认，已修复或安全）的比率。
hotspots.review_hotspot=审查热点

hotspots.assign.success=安全热点已经成功分配给 {0}
hotspots.assign.unassign.success=安全热点已成功释放
hotspots.update.success=安全热点状态已成功修改为 {0}

#------------------------------------------------------------------------------
#
# ISSUES
#
#------------------------------------------------------------------------------

issues.on_file_x=文件的问题 {0}
issue.add_tags=添加标签
issue.remove_tags=删除标签
issue.no_tag=无标签
issue.create_tag_x=新建标签 '{0}'
issue.assign.assigned_to_x_click_to_change=分配给 {0}，点击修改
issue.assign.unassigned_click_to_assign=未分配，点击分配问题
issue.assign.formlink=分配
issue.assign.to_me=分配给我
issue.quick_fix_available_with_sonarlint=参考 {link} 来进行快速修复
issue.comment.add_comment=添加评论
issue.comment.add_comment.cancel=取消添加评论
issue.comment.enter_comment=输入评论
issue.comment.formlink=评论
issue.comment.formlink.plural=评论
issue.comment.submit=评论
issue.comment.explain_why=请解释原因
issue.comment.posted_on=评论时间
issue.comment.edit=修改评论
issue.comment.edit.cancel=取消修改评论
issue.comment.delete=删除评论
issue.comment.delete_confirm_message=是否确认删除此评论？
issue.comment.empty.list=问题尚无评论。
issue.rule_details=规则详情
issue.send_notifications=发送提醒
issue.why_this_issue=为何是问题？
issue.why_this_issue.long=为何是问题？在页面底部显示规则详情。
issue.type.type_x_click_to_change=类型： {0}，点击修改
issue.severity.severity_x_click_to_change=严重性： {0}，点击修改
issue.transition.community_plug_link=SonarSource 社区
issue.transition.status_x_click_to_change=问题状态： {0}，点击修改
issue.transition=转移
issue.transition.confirm=确认
issue.transition.confirm.description=此问题已经审查需要进行最后的处理。
issue.transition.unconfirm=取消
issue.transition.unconfirm.description=此问题需要再次审查，以决定如何处理。
issue.transition.resolve=解决
issue.transition.resolve.description=此问题已在代码中修复，等待下次分析时关闭 - 或者如果没有修复，可以重开。
issue.transition.falsepositive=误判
issue.transition.falsepositive.description=此问题可以忽略，这属于分析引擎的问题。不会计算技术债务。
issue.transition.reopen=重开
issue.transition.reopen.description=此问题尚未解决，应该再次审查。
issue.transition.close=关闭
issue.transition.close.description=关闭
issue.transition.wontfix=标记为不会修复
issue.transition.wontfix.description=此问题可以忽略，因为规则与环境不匹配。不会计算技术债务。
issue.transition.setinreview=设为审核中
issue.transition.setinreview.description=正在进行安全漏洞审核
issue.transition.openasvulnerability=设为安全漏洞
issue.transition.openasvulnerability.description=代码中存在安全漏洞，必须修复
issue.transition.resolveasreviewed=设为已审核
issue.transition.resolveasreviewed.description=代码中无安全漏洞
issue.transition.resetastoreview=重置为审核
issue.transition.resetastoreview.description=需要重新分析安全热点
issue.tabs.code=问题的位置
issue.x_data_flows={0} 数据流
issue.execution_flow=完整执行流程

issues.action_select=选择问题
issues.action_select.label=选择问题 {0}
issue.set_severity=修改严重性
issue.set_type=修改类型

issue.type.CODE_SMELL=异味
issue.type.BUG=Bug
issue.type.VULNERABILITY=漏洞
issue.type.SECURITY_HOTSPOT=安全热点
issue.type.CODE_SMELL.plural=异味
issue.type.BUG.plural=Bug
issue.type.VULNERABILITY.plural=漏洞
issue.type.SECURITY_HOTSPOT.plural=安全热点

issue.status.REOPENED=重开
issue.status.RESOLVED=解决
issue.status.OPEN=打开
issue.status.CONFIRMED=确认
issue.status.CLOSED=关闭
issue.status.TO_REVIEW=需要审核
issue.status.IN_REVIEW=审核中
issue.status.REVIEWED=已审核

issue.scope.MAIN=主要代码
issue.scope.TEST=测试代码

issue.resolution.FALSE-POSITIVE=误判
issue.resolution.FALSE-POSITIVE.description=手工确认此问题为误判。不会计算技术债务。
issue.resolution.FIXED=解决
issue.resolution.FIXED.description=代码中已修复此问题，并已重新分析。
issue.resolution.WONTFIX=不会修复
issue.resolution.WONTFIX.description=当前环境允许此问题出现。不会计算技术债务。
issue.resolution.REMOVED=删除
issue.resolution.REMOVED.description=规则或资源已变更（删除，移动，参数变化等等），导致找不到这些问题。
issue.resolution.badge.REMOVED=已删除规则
issue.resolution.badge.DEPRECATED=废弃规则
issue.unresolved.description=不会显示未处理的问题。

issue.action.permalink=获取永久链接
issue.effort=工作：
issue.x_effort={0} 工作
issue.filter_similar_issues=过滤类似问题
issue.this_issue_involves_x_code_locations=此问题对应 {0} 代码位置
issue.this_flow_involves_x_code_locations=此流程对应 {0} 代码位置
issue.from_external_rule_engine=外部规则引擎检测到的问题： {0}
issue.external_issue_description=此处为外部规则 {0}。没有详情。
issues.cannot_open_issue_max_initial_X_fetched=无法打开选择问题，因为它未包含在初始加载的 {0} 个问题中。
issues.loading_issues=加载问题
issues.return_to_list=返回列表
issues.bulk_change_X_issues=批量修改 {0} 个问题
issues.select_all_issues=选择所有问题
issues.issues=问题
issues.to_select_issues=选择问题
issues.to_navigate=浏览
issues.to_navigate_back=返回
issues.to_navigate_issue_locations=定位问题
issues.to_switch_flows=切换流程
issues.new_code=新代码
issues.new_code_period=新代码区间
issues.max_new_code_period=最大新代码区间
issues.my_issues=我的问题
issues.no_my_issues=没有分配给你的问题。
issues.no_issues=没有问题。赞。
issues.x_more_locations=+ {0} 更多位置
issues.not_all_issue_show=未包含所有问题
issues.not_all_issue_show_why=没有权限访问文件夹中的所有项目

#------------------------------------------------------------------------------
#
# ISSUE CHANGELOG
#
#------------------------------------------------------------------------------
issue.changelog.changed_to={0} 改为 {1}
issue.changelog.was=是 {0}
issue.changelog.webhook_source=（由 {0} Webhook 触发的变更）
issue.change.file_move=文件已经由 {0} 移动至 {1}
issue.change.from_branch=此问题由分支 '{0}' 复制到分支 '{1}'
issue.change.from_non_branch=此问题由分支 '{0}' 合并到分支 '{1}'
issue.changelog.removed={0} 删除
issue.changelog.line_removed_X=删除的行数 ({0})
issue.changelog.field.severity=严重性
issue.changelog.field.actionPlan=活动计划
issue.changelog.field.assignee=分配人
issue.changelog.field.author=作者
issue.changelog.field.resolution=解决方法
issue.changelog.field.effort=工作
issue.changelog.field.status=状态
issue.changelog.field.tags=标签
issue.changelog.field.type=类型
issue.changelog.field.file=文件

#------------------------------------------------------------------------------
#
# ISSUES FACETS
#
#------------------------------------------------------------------------------
issues.facet.period=周期
issues.facet.types=类型
issues.facet.severities=严重程度
issues.facet.scopes=范围
issues.facet.projects=项目
issues.facet.statuses=状态
issues.facet.hotspotStatuses=热点状态
issues.facet.assignees=负责人
issues.facet.files=文件
issues.facet.modules=模块
issues.facet.directories=目录
issues.facet.tags=标签
issues.facet.rules=规则
issues.facet.resolutions=处理方式
issues.facet.languages=语言
issues.facet.createdAt=新问题
issues.facet.createdAt.all=全部
issues.facet.createdAt.last_week=上周
issues.facet.createdAt.last_month=上个月
issues.facet.createdAt.last_year=去年
issues.facet.createdAt.bar_description={0} 问题，从 {1} 至 {2}
issues.facet.authors=作者
issues.facet.issues=问题标识
issues.facet.mode=显示模式
issues.facet.mode.count=问题
issues.facet.mode.effort=工作
issues.facet.standards=标准
issues.facet.owaspTop10=2017 年度 OWASP 前 10 名
issues.facet.owaspTop10_2021=2021 年度 OWASP 前 10 名
issues.facet.sansTop25=SANS 前 25 名
issues.facet.sonarsourceSecurity=SonarSource
issues.facet.cwe=CWE

#------------------------------------------------------------------------------
#
# ISSUE BULK CHANGE
#
#------------------------------------------------------------------------------

issue_bulk_change.form.title=修改 {0} 条问题
issue_bulk_change.comment.help=此评论只会使用在有效修改问题的情况下。
issue_bulk_change.max_issues_reached=因为选择了太多问题，只会更新前 {0} 条。
issue_bulk_change.x_issues={0} 条问题
issue_bulk_change.no_match=没有匹配搜索条件的问题
issue_bulk_change.no_change_selected=对选中的问题至少进行一项修改（比如，修改负责人）


#------------------------------------------------------------------------------
#
# PROJECTS PAGE
#
#------------------------------------------------------------------------------

projects.page=项目
projects.add=新增项目
projects.create_application=创建应用
projects.no_projects.empty_instance=分析过的项目会显示在这里。
projects.no_projects.empty_instance.new_project=分析过的项目会显示在这里。
projects.no_projects.empty_instance.how_to_add_projects=如何分析新项目
projects.no_favorite_projects=你没有收藏项目。
projects.no_favorite_projects.engagement=搜索并收藏感兴趣的项目，就可以在这里快速看到收藏的项目的。
projects.explore_projects=浏览项目
projects.not_analyzed.TRK=尚未分析项目
projects.not_analyzed.APP=尚未分析应用
projects.no_new_code_period.TRK=项目尚无新代码
projects.no_new_code_period.APP=应用尚无新代码
projects.new_code_period_x=新代码：最新 {0}
projects.configure_analysis=配置分析器
projects.last_analysis_on_x=最近一次分析：{date}
projects.search=搜索项目名或标识
projects.perspective=透视图
projects.skip_to_filters=跳至项目搜索
projects.sort_by=排序
projects.sort_ascending=正序排列
projects.sort_descending=倒序排列
projects.sorting.default=默认
projects.sorting.name=名称
projects.sorting.analysis_date=最后分析日期
projects.sorting.reliability=可靠性
projects.sorting.security=安全性
projects.sorting.security_review=安全审核
projects.sorting.maintainability=可维护性
projects.sorting.coverage=覆盖率
projects.sorting.duplications=重复度
projects.sorting.size=大小
projects.sorting.new_reliability=可靠性
projects.sorting.new_security=安全性
projects.sorting.new_security_review=安全审核
projects.sorting.new_maintainability=可维护性
projects.sorting.new_coverage=覆盖率
projects.sorting.new_duplications=重复度
projects.sorting.new_lines=新代码行数
projects.view.overall=总体状态
projects.view.overall_code=总体代码
projects.view.new_code=新代码
projects.worse_of_reliablity_and_security=可靠性和安全性变得更差了
projects.limited_set_of_projects=限制只显示前 {0} 个项目，基于的排序条件为 {1}。
projects.facets.quality_gate=质量阈
projects.facets.quality_gate.warning_help=告警状态已被废弃。过滤器会在没有质量阈高警时消失。
projects.facets.rating_x={0} 率
projects.facets.languages=语言
projects.facets.search.languages=搜索语音
projects.facets.new_lines=新代码行
projects.facets.tags=标签
projects.facets.search.tags=搜索标签
projects.facets.qualifier=类型
projects.facets.qualitygate_label_x=搜索 {0} 质量阈的项目
projects.facets.rating_label_single_x=搜索 {1} 的 {0} 比率的项目
projects.facets.rating_label_multi_x=搜索 {1} 的 {0} 或更差的比例的项目
projects.facets.label_no_data_x=搜索没有 {0} 数据的项目
projects.facets.label_text_x=搜索 {0}：{1} 的项目
projects.facets.size.label.1=搜索低于 1k 行代码的项目
projects.facets.size.label.2=搜索 1k 或更多行代码的项目
projects.facets.size.label.3=搜索 10k 或更多行代码的项目
projects.facets.size.label.4=搜索 100k 或更多行代码的项目
projects.facets.size.label.5=搜索 500k 或更多行代码的项目
projects.facets.new_lines.label.1=搜索低于 1k 行新代码的项目
projects.facets.new_lines.label.2=搜索 1k 或更多行新代码的项目
projects.facets.new_lines.label.3=搜索 10k 或更多行新代码的项目
projects.facets.new_lines.label.4=搜索 100k 或更多行新代码的项目
projects.facets.new_lines.label.5=搜索 500k 或更多行新代码的项目
projects.facets.coverage.label.1=搜索超过 80% 覆盖率的项目
projects.facets.coverage.label.2=搜索低于 80% 覆盖率的项目
projects.facets.coverage.label.3=搜索低于 70% 覆盖率的项目
projects.facets.coverage.label.4=搜索低于 50% 覆盖率的项目
projects.facets.coverage.label.5=搜索低于 30% 覆盖率的项目
projects.facets.duplication.label.1=搜索重复率不足 3% 的项目
projects.facets.duplication.label.2=搜索重复率超过 3% 的项目
projects.facets.duplication.label.3=搜索重复率超过 5% 的项目
projects.facets.duplication.label.4=搜索重复率超过 10% 的项目
projects.facets.duplication.label.5=搜索重复率超过 20% 的项目
projects.facets.no_available_filters_clear_others=无可用条件。清除其他条件查看选项。
projects.sort.disabled=禁用排序，因为排序不会影响当前项目的显示结果。
projects.sort.analysis_date=最后分析时间排序（最老优先）
projects.sort.-analysis_date=最后分析时间排序（最新优先）
projects.sort.name=名称
projects.sort.-name=名称
projects.sort.reliability=可靠性（高分优先）
projects.sort.-reliability=可靠性（低分优先）
projects.sort.security=安全性（高分优先）
projects.sort.-security=安全性（低分优先）
projects.sort.maintainability=可维护性（高分优先）
projects.sort.-maintainability=可维护性（低分优先）
projects.sort.coverage=覆盖率（高分优先）
projects.sort.-coverage=覆盖率（低分优先）
projects.sort.duplications=重复度（高分优先）
projects.sort.-duplications=重复度（低分优先）
projects.sort.size=大小（小优先）
projects.sort.-size=大小（大优先）
projects.show_more=显示更多项目
projects.security_hotspots_reviewed=热点已审查

#------------------------------------------------------------------------------
#
# DASHBOARD
#
#------------------------------------------------------------------------------

dashboard.project_not_found=找不到请求的项目。
dashboard.project_not_found.2=要么它从没有成功分析过，要么它已经被删除了。


#------------------------------------------------------------------------------
#
# SETTINGS
#
#------------------------------------------------------------------------------
settings.key_x=标识：{0}
settings.default_x=默认：{0}
settings.not_set=（未设置）
settings.state.saving=保存中...
settings.state.saved=已保存！
settings.state.validation_failed=校验失败。{0}
settings.state.value_cant_be_empty=填写一个值或使用“重置”恢复默认值。
settings.state.value_cant_be_empty_no_default=填写一个值。
settings.state.url_not_valid={0} 不是合法 URL
settings._default=（默认）
settings.boolean.true=真
settings.boolean.false=假
settings.default.no_value=<未赋值>
settings.default.complex_value=<复杂数值>
settings.default.password=<密码>
settings.reset_confirm.title=重置设置
settings.reset_confirm.description=是否确定重置设置？

settings.search.placeholder=搜索设置

settings.json.format=格式化 JSON
settings.json.format_error=JSON 格式有问题，请修改重试。

settings.analysis_scope.wildcards.introduction=可以使用以下通配符。
settings.analysis_scope.wildcards.zero_more_char=匹配 0 或多个字符
settings.analysis_scope.wildcards.zero_more_dir=匹配 0 或多个目录
settings.analysis_scope.wildcards.single_char=匹配一个字符

settings.new_code_period.category=新代码
settings.new_code_period.title=默认新代码行为
settings.new_code_period.description=新代码用来比较指标和跟踪新问题。{link}
settings.new_code_period.description2=此配置默认用于所有项目。也可以为项目单独指定新代码。

settings.languages.select_a_language_placeholder=选择语言

settings.projects.default_visibility_of_new_projects=新项目默认可见性：
settings.projects.change_visibility_form.header=设置新项目默认可见性：
settings.projects.change_visibility_form.warning=不会修改已存在的项目的可见性。
settings.projects.change_visibility_form.submit=修改默认可见性

settings.almintegration.title=集成配置
settings.almintegration.description=DevOps 平台集成允许 SonarQube 与你的 DevOps 平台一起交互。可以直接在你的 DevOps 平台接口中启用认证，为拉取请求提供分析详情和质量阈。
settings.almintegration.github.info=需要安装一个拥有特定设置和权限的账号，来启用你的组织或仓库的拉取请求装饰。{link}
settings.almintegration.github.additional_permission=如果私有项目报告了质量阈失败，可能需要增加额外的权限来访问 GitHub App。{link}
settings.almintegration.bitbucketcloud.info=需要在 Bitbucket Cloud 工作台创建一个 OAuth 消费者来装饰拉取请求。这个拉取请求的私有消费者需要拥有读取权限。Bitbucket 还需要设置一个 OAuth 回调 URL，但是 SonarQube 不用设置 URL 也能正常运行。{link}
settings.almintegration.bitbucketcloud.oauth=OAuth 消费者
settings.almintegration.empty.azure=创建第一个 Azure DevOps 配置，开始 SonarQube 上的代码分析。
settings.almintegration.empty.bitbucket=创建第一个 Bitbucket 配置，开始 SonarQube 上的代码分析。
settings.almintegration.empty.bitbucketcloud=创建第一个 Bitbucket Cloud 配置，开始 SonarQube 上的代码分析。
settings.almintegration.empty.github=创建第一个 GitHub 配置，开始 SonarQube 上的代码分析。
settings.almintegration.empty.gitlab=创建第一个 GitLab 配置，开始 SonarQube 上的代码分析。
settings.almintegration.create=创建配置
settings.almintegration.create.tooltip=升级到 {link} 可以继承多实例 {alm}。
settings.almintegration.create.tooltip.link=企业版
settings.almintegration.check_configuration=检查配置
settings.almintegration.checking_configuration=正在检查配置
settings.almintegration.configuration_valid=配置正确
settings.almintegration.configuration_invalid=配置中存在如下错误：
settings.almintegration.could_not_validate=无法校验配置
settings.almintegration.delete.header=删除配置
settings.almintegration.delete.message=是否确认删除 {id} 配置？
settings.almintegration.delete.info={0} 项目将不再启用拉取请求装饰功能。
settings.almintegration.delete.no_info=一些项目将不再启用拉取请求装饰功能。
settings.almintegration.form.app_id.github.help=可以在 GitHub App 页面找到 App ID。设置 > 开发者设置 > Github Apps
settings.almintegration.form.header.create=创建配置
settings.almintegration.form.header.edit=修改配置
settings.almintegration.form.second_instance_warning=绑定多个 ALM 实例，会导致从 ALM 导入的仓库被禁用。
settings.almintegration.form.name.azure=配置名称
settings.almintegration.form.name.azure.help=配置一个清晰简洁的名称。使用这个名称为项目配置正确的 Azure 实例。
settings.almintegration.form.choose_bitbucket_variant=选择希望配置的变量
settings.almintegration.form.name.bitbucket=配置名称
settings.almintegration.form.name.bitbucket.help=配置一个清晰简洁的名称。使用这个名称为项目配置正确的 Bitbucket 实例。
settings.almintegration.form.name.bitbucketcloud=配置名称
settings.almintegration.form.name.bitbucketcloud.help=设置一个清晰简洁的名称。这个名称会用来为项目指定配置好的 Bitbucket Cloud 实例。
settings.almintegration.form.name.github=配置名称
settings.almintegration.form.name.github.help=配置一个清晰简洁的名称。使用这个名称为项目配置正确的 GitHub App。
settings.almintegration.form.name.gitlab=配置名称
settings.almintegration.form.name.gitlab.help=配置一个清晰简洁的名称。使用这个名称为项目配置正确的 GitLab 实例。
settings.almintegration.form.workspace.bitbucketcloud=工作区 ID
settings.almintegration.form.workspace.bitbucketcloud.error=工作区 ID 只能使用小写字母，数字，破折号和下划线。
settings.almintegration.form.workspace.bitbucketcloud.help=工作区 ID
settings.almintegration.form.oauth_key.bitbucketcloud.help=在 Bitbucket 中创建 OAuth 消费者时会自动创建 OAuth 标识。在 OAuth 消费者的 Bitbucket Cloud 工作台设置下。
settings.almintegration.form.oauth_secret.bitbucketcloud.help=在 Bitbucket 中创建 OAuth 消费者时会自动创建 OAuth 密钥。在 OAuth 消费者的 Bitbucket Cloud 工作台设置下。
settings.almintegration.form.url.azure=Azure DevOps 服务器 URL
settings.almintegration.form.url.azure.help1=对应 Azure DevOps 服务器，提供完整 URL：
settings.almintegration.form.url.azure.help2=对应 Azure DevOps 服务，提供完整组织 URL：
settings.almintegration.form.url.bitbucket=Bitbucket 服务器网址
settings.almintegration.form.url.bitbucket.help=示例：{example}
settings.almintegration.form.url.github=GitHub 网址
settings.almintegration.form.url.github.help1=Github 企业版示例：
settings.almintegration.form.url.github.help2=如果使用 GitHub.com：
settings.almintegration.form.url.gitlab=GitLab 网址
settings.almintegration.form.url.gitlab.help=提供 GitLab API 网址。比如：
settings.almintegration.form.app_id=GitHub 应用 ID
settings.almintegration.form.client_id.github=客户端 ID
settings.almintegration.form.client_id.github.help=客户端 ID 位于 GitHub App 页面。
settings.almintegration.form.client_secret.github=客户端秘钥
settings.almintegration.form.client_secret.github.help=客户端秘钥位于 GitHub App 页面。
settings.almintegration.form.client_id.bitbucketcloud=OAuth 标识
settings.almintegration.form.client_secret.bitbucketcloud=OAuth 秘钥
settings.almintegration.form.private_key=私钥
settings.almintegration.form.private_key.github.help=GitHub App 私有密钥。可以在 GitHub App 页面的私有密钥下创建一个.pem 文件。把文件的内容复制粘贴到这里。
settings.almintegration.form.webhook_secret.github=Webhook 秘钥
settings.almintegration.form.webhook_secret.github.help=此项请留空，除非使用了 GitHub 代码扫描告警功能。详情请参考文档。
settings.almintegration.form.personal_access_token=个人访问令牌
settings.almintegration.form.personal_access_token.azure.help=用户令牌将用来装饰拉取请求。需要权限："代码（读写）"
settings.almintegration.form.personal_access_token.azure.help.url=个人访问令牌
settings.almintegration.form.personal_access_token.gitlab.help=用户令牌将用来装饰合并请求。需要 API 权限。
settings.almintegration.form.personal_access_token.gitlab.help.url=个人访问令牌
settings.almintegration.form.personal_access_token.bitbucket.help=Bitbucket 服务器用户帐号用来装饰拉取请求。建议使用拥有管理员权限的专门 Bitbucket 服务器帐号。需要一个拥有被分析仓库的读取权限的帐号的 {pat}。使用这个访问令牌在拉取请求中报告质量阈的状态。
settings.almintegration.form.personal_access_token.bitbucket.help.url=个人访问令牌
settings.almintegration.form.save=保存配置
settings.almintegration.form.cancel=取消
settings.almintegration.form.secret.field=因安全原因隐藏此字段。
settings.almintegration.form.secret.update_field=更新字段值
settings.almintegration.form.secret.can_encrypt=可以加密当前值。{learn_more}
settings.almintegration.feature.status_reporting.title=质量阈状态报告
settings.almintegration.feature.status_reporting.description_pr=通过 ALM 供应商接口，为拉取请求添加分析和质量阈信息。
settings.almintegration.feature.status_reporting.description_pr_and_commits=通过 ALM 供应商接口，为拉取请求和分析提交奥添加质量阈信息。
settings.almintegration.feature.status_reporting.description_mr=通过 ALM 供应商接口，为合并请求添加分析和质量阈信息。
settings.almintegration.feature.pr_decoration.disabled=禁用
settings.almintegration.feature.pr_decoration.disabled.no_branches=升级至 {link} 以启用此功能
settings.almintegration.feature.pr_decoration.disabled.no_branches.link=开发者版本
settings.almintegration.feature.alm_repo_import.title=由 ALM 导入仓库
settings.almintegration.feature.alm_repo_import.description=从 ALM 中选择仓库，把它们导入 SonarQube。
settings.almintegration.feature.alm_repo_import.disabled=禁用
settings.almintegration.feature.alm_repo_import.disabled.multiple=功能已即用，因为配置了多个实例。
settings.almintegration.feature.alm_repo_import.disabled.no_url=功能已禁用，因为未配置 URL。
settings.almintegration.tabs.authentication_moved=可以集成 DevOps 平台的代理认证。相关配置在 {link} 部分。

settings.authentication.title=认证
settings.authentication.description=以下配置可以使用 SAML 实现代理认证，支持以下 DevOps 平台：GitHub，GitLab，Bitbucket。
settings.authentication.help=如果需要认证配置相关的支持，请参考 {link}。
settings.authentication.help.link=文档
settings.authentication.saml.form.save=保存配置
settings.authentication.saml.form.test=测试配置
settings.authentication.saml.form.test.help.dirty=请保存配置
settings.authentication.saml.form.test.help.incomplete=请完善必填信息
settings.authentication.saml.form.save_success=保存成功
settings.authentication.saml.form.save_partial=部分保存成功
settings.authentication.saml.form.save_warn=请参考上面表单的错误信息，{0} 字段保存失败。
settings.authentication.saml.tooltip.required_fields=请为以下必须字段填写信息：{0}

settings.pr_decoration.binding.category=拉取请求装饰
settings.pr_decoration.binding.no_bindings=此项功能需要首先在全局配置中启用。{link}
settings.pr_decoration.binding.no_bindings.admin=在启用拉取请求装饰之前设置 {link}
settings.pr_decoration.binding.no_bindings.link=全局配置
settings.pr_decoration.binding.title=拉取请求装饰
settings.pr_decoration.binding.description=为此项目启用拉取请求装饰。
settings.pr_decoration.binding.check_configuration=检查配置
settings.pr_decoration.binding.check_configuration.failure=配置存在错误：
settings.pr_decoration.binding.check_configuration.failure.check_global_settings=请检查 {link}。
settings.pr_decoration.binding.check_configuration.failure.check_global_settings.link=全局配置
settings.pr_decoration.binding.check_configuration.contact_admin=请联系系统管理员。
settings.pr_decoration.binding.check_configuration.success=配置正确。
settings.pr_decoration.binding.form.name=配置名称
settings.pr_decoration.binding.form.name.help=需要先给每个 DevOps 平台实例进行权限配置，分配唯一名称。然后选择项目对应的宿主。
settings.pr_decoration.binding.form.monorepo=启用独立仓库支持
settings.pr_decoration.binding.form.monorepo.help=如果你的项目属于一个独立仓库，需要启用此功能。{doc_link}
settings.pr_decoration.binding.form.monorepo.warning=此配置需要对所有属于独立仓库的 SonarQube 项目启用。
settings.pr_decoration.binding.form.azure.project=项目名称
settings.pr_decoration.binding.form.azure.project.help=包含项目的 Azure DevOps 服务器的名称。
settings.pr_decoration.binding.form.azure.repository=仓库名称
settings.pr_decoration.binding.form.azure.repository.help=Azure DevOps 服务器仓库的名称
settings.pr_decoration.binding.form.github.repository=仓库 ID
settings.pr_decoration.binding.form.github.repository.help=仓库网址路径。示例：{example}
settings.pr_decoration.binding.form.github.summary_comment_setting=在 GitHub 沟通标签下启用分析简介
settings.pr_decoration.binding.form.github.summary_comment_setting.help=启用后，拉取请求分析简介会显示在 GitHub 沟通标签下。会根据 GitHub 中的设置发送提醒。
settings.pr_decoration.binding.form.bitbucket.repository=项目 Key
settings.pr_decoration.binding.form.bitbucket.repository.help=项目标识是 Bitbucket 服务器仓库网址的一部分。示例：({example})
settings.pr_decoration.binding.form.bitbucket.slug=仓库 SLUG
settings.pr_decoration.binding.form.bitbucket.slug.help=仓库 Slug 是 Bitbucket 服务器仓库网址的一部分。示例：({example})
settings.pr_decoration.binding.form.bitbucketcloud.repository=仓库 SLUG
settings.pr_decoration.binding.form.bitbucketcloud.repository.help=仓库 SLUG 是你的 Bitbucket Cloud URL 的一部分。实例：{example}

settings.pr_decoration.binding.form.gitlab.repository=项目 ID
settings.pr_decoration.binding.form.gitlab.repository.help=项目 ID 是数字型唯一标识。可以在项目概述中找到。

property.category.announcement=通知
property.category.general=通用
property.category.general.email=邮件
property.category.general.duplications=重复
property.category.general.differentialViews=对比视图
property.category.general.localization=本地化
property.category.general.databaseCleaner=数据库清理器
property.category.general.looknfeel=界面外观
property.category.general.issues=问题
property.category.general.qualityGate=质量阈
property.category.general.subProjects=子项目
property.category.almintegration=ALM 集成
property.category.authentication=认证
property.category.organizations=组织
property.category.security=权限
property.category.security.encryption=加密
property.category.java=Java
property.category.differentialViews=比较视图
property.category.codeCoverage=代码覆盖率
property.category.duplications=重复
property.category.localization=本地化
property.category.exclusions=排除
property.category.webhooks=Webhook
property.category.languages=语言
property.sonar.inclusions.name=包含的源文件
property.sonar.inclusions.description=包含源文件的模式，只分析这些文件。
property.sonar.test.inclusions.name=包含的测试文件
property.sonar.test.inclusions.description=包含测试文件的模式，只分析这些文件。
property.sonar.exclusions.name=排除的源文件
property.sonar.exclusions.description=排除源文件的模式。
property.sonar.test.exclusions.name=排除的测试文件
property.sonar.test.exclusions.description=排除测试文件的模式。
property.sonar.global.exclusions.name=全局源码排除
property.sonar.global.exclusions.description=从代码分析中排除源码。作用到所有项目。无法在项目级别重新设置。下次代码分析时修改才会生效。
property.sonar.global.test.exclusions.name=全局测试排除
property.sonar.global.test.exclusions.description=从代码分析中排除测试。作用到所有项目。无法在项目级别重新设置。下次代码分析时修改才会生效。
property.category.exclusions.files=文件
property.category.exclusions.files.description=你可以配置应用中不需要进行哪些分析，每个单独项目的配置中也有类似的配置。
property.sonar.skippedModules.name=从代码分析中排除项目模块
property.sonar.skippedModules.description=这个参数已经在 4.3 中废弃，不应该再使用
property.sonar.includedModules.name=包含的模块
property.sonar.includedModules.description=这个参数已经在 4.3 中废弃，不应该再使用
property.category.exclusions.issues=问题
property.category.exclusions.issues.description=配置哪些问题不要应该被报告的条件。
property.category.exclusions.duplications=重复
property.category.exclusions.duplications.description=配置不需要检测重复代码的文件。
property.category.exclusions.coverage=代码覆盖率
property.category.exclusions.coverage.description=配置不应该检测代码覆盖率的文件。
property.sonar.coverage.exclusions.name=排除的覆盖率
property.sonar.coverage.exclusions.description=用来从覆盖率报告中排除的匹配方式。
property.category.technicalDebt=技术债务
property.error.notBoolean=只能选择 "true" 和 "false"
property.error.notInteger=只允许数字
property.error.notFloat=只允许浮点数字
property.error.notRegexp=错误的 Java 正则表达式
property.error.notInOptions=不是一个合法选项
property.category.scm=SCM
property.category.housekeeping=整理
property.category.housekeeping.general=通用
property.category.housekeeping.branchesAndPullRequests=分支和拉取请求
property.category.housekeeping.auditLogs=审计日志


#------------------------------------------------------------------------------
#
# SEARCH ENGINE FOR RESOURCES
#
#------------------------------------------------------------------------------
search.shortcut_hint=提示：点击 {0} 随时打开搜索条。
search.show_more.hint=点击 {0} 显示
search.placeholder=搜索项目，子项目和文件
search.search_for_projects=搜索项目...
search.search_for_members=搜索成员...
search.search_for_users=搜索用户...
search.search_for_users_or_groups=搜索用户或群组...
search.search_by_login_or_name=根据登录名或姓名搜索...
search.search_by_name=根据姓名搜索...
search.search_by_name_or_key=根据姓名或标识搜索...
search.search_for_tags=搜索标签...
search.search_for_repositories=搜索仓库...
search.search_for_rules=搜索规则...
search.search_for_languages=搜索语言...
search.search_for_cwe=搜索 CWEs...
search.search_for_authors=搜索作者...
search.search_for_directories=搜索目录...
search.search_for_files=搜索文件...
search.search_for_modules=搜索模块...
search.search_for_metrics=搜索指标...


#------------------------------------------------------------------------------
#
# GLOBAL HELP
#
#------------------------------------------------------------------------------
help.section.links=连接
help.section.shortcuts=快捷方式
help.section.tutorials=教程

shortcuts.section.global=全局
shortcuts.section.global.search=快速打开搜索条
shortcuts.section.global.shortcuts=打开窗口
shortcuts.section.global.facets.multiselection=Ctrl + 鼠标左键添加选择
shortcuts.section.global.facets.multiselection.mac=Cmd + 鼠标左键添加选择

shortcuts.section.issues=问题页
shortcuts.section.issues.navigate_between_issues=问题导航
shortcuts.section.issues.open_details=由问题列表进入源码
shortcuts.section.issues.return_to_list=返回列表

shortcuts.section.issue.do_transition=转移问题
shortcuts.section.issue.assign=分配问题
shortcuts.section.issue.assign_to_me=把问题分配给当前用户
shortcuts.section.issue.change_severity=修改问题严重性
shortcuts.section.issue.comment=评论问题
shortcuts.section.issue.submit_comment=提交评论
shortcuts.section.issue.change_tags=修改问题标签

shortcuts.section.rules=规则页
shortcuts.section.rules.navigate_between_rules=规则导航
shortcuts.section.rules.open_details=由规则列表进入规则详情
shortcuts.section.rules.return_to_list=返回规则列表
shortcuts.section.rules.activate=激活规则
shortcuts.section.rules.deactivate=禁用规则

shortcuts.on_page.intro=本业允许使用以下快捷键：
shortcuts.on_page.left_x=左箭头：{0}
shortcuts.on_page.left_right_x=左右箭头：{0}
shortcuts.on_page.up_down_x=上下箭头：{0}
shortcuts.on_page.meta_x=Alt + 箭头键：{0}

tutorials.onboarding=分析新项目
tutorials.skip=跳过教程
tutorials.finish=完成教程
tutorials.find_tutorial_back_in_help=随时在帮助里找到它
tutorials.find_tutorial_back_in_plus=任何时候在 "+" 菜单中可以找到它


#------------------------------------------------------------------------------
#
# SELECT2.js
#
#------------------------------------------------------------------------------
select2.noMatches=没有匹配结果
select2.searching=搜索中...
select2.tooShort=请至少输入 {0} 个字符


#------------------------------------------------------------------------------
#
# DUPLICATION VIEWER
#
#------------------------------------------------------------------------------
duplications.dups_found_on_deleted_resource=这个文件包含了一些已删除的重复代码。项目应该重新分析移除这些过期的重复代码。


#------------------------------------------------------------------------------
#
# GENERIC CODE VIEWER
#
#------------------------------------------------------------------------------
code_viewer.no_source_code_displayed_due_to_empty_analysis.TRK=分析未找到代码。
code_viewer.no_source_code_displayed_due_to_empty_analysis.APP=当前应用下无项目。
code_viewer.no_source_code_displayed_due_to_empty_analysis.VW=当前目录下无项目，应用或目录。
code_viewer.no_source_code_displayed_due_to_empty_analysis.SVW=当前目录下无项目，应用或目录。
code_viewer.no_source_code_displayed_due_to_security=根据安全设置，不显示源代码。
code_viewer.no_source_code_displayed_due_to_source_removed=文件已删除，无法显示源代码。
code_viewer.not_all_measures_are_shown=未包含所有项目和应用
code_viewer.not_all_measures_are_shown.help=无权访问所有项目或应用。
code_viewer.portfolio_code_toggle_disabled.help=搜索项目或应用时，无法查看新代码和总代码指标。
code_viewer.loading=正在加载代码

#------------------------------------------------------------------------------
#
# CUSTOM MEASURES
#
#------------------------------------------------------------------------------
custom_measures.page=自定义指标
custom_measures.page.description=更新这个项目的自定义指标。修改后下次分析才会起作用。必须在全局范围创建自定义指标。
custom_measures.deprecated=自定义指标已废弃，不久会删除。
custom_measures.pending=待定
custom_measures.pending_tooltip=配置会在下次分析时集成到项目中。
custom_measures.all_metrics_taken=已存在对于自定义指标的描述。
custom_measures.delete_custom_measure=删除自定义指标
custom_measures.delete_custom_measure.confirmation=是否确认删除自定义指标 "{0}"？
custom_measures.create_custom_measure=创建自定义指标
custom_measures.update_custom_measure=修改自定义指标
custom_measures.metric=指标


#------------------------------------------------------------------------------
#
# PROJECT ACTIVITY/HISTORY SERVICE
#
#------------------------------------------------------------------------------

project_activity.analysis=分析
project_activity.analysis_build_string_X=构建内容：{0}
project_activity.add_version=新建版本
project_activity.analyzed.TRK=已分析的项目
project_activity.analyzed.APP=已分析的应用
project_activity.remove_version=删除版本
project_activity.remove_version.question=是否确认删除这个版本？
project_activity.change_version=修改版本
project_activity.add_custom_event=新建自定义事件
project_activity.change_custom_event=修改事件
project_activity.remove_custom_event=删除事件
project_activity.remove_custom_event.question=是否确认删除这个事件？
project_activity.reset_dates=重置时间
project_activity.delete_analysis=删除分析
project_activity.delete_analysis.question=是否确认从项目历史中删除这次分析？
project_activity.filter_events=过滤事件
project_activity.events.tooltip.edit=修改事件
project_activity.events.tooltip.delete=删除事件
project_activity.new_code_period_start=新代码周期由此开始
project_activity.new_code_period_start.help=此处之前的分析将作为新代码比较的基线

project_activity.graphs.choose_type=选择图表类型
project_activity.graphs.explanation_x=交互图为以下项目显示随时间变化的指标：{0}
project_activity.graphs.new_code=新代码
project_activity.graphs.new_code_long=新代码在途中显示为黄色。
project_activity.graphs.issues=问题
project_activity.graphs.coverage=覆盖率
project_activity.graphs.duplications=重复度
project_activity.graphs.custom=自定义
project_activity.graphs.custom.add=添加指标
project_activity.graphs.custom.add_metric=添加一个指标
project_activity.graphs.custom.select_metric=选择显示指标
project_activity.graphs.custom.add_metric_info=图表中只能显示相同类型的三个指标。
project_activity.graphs.custom.remove_metric=从图表中删除 {0} 指标
project_activity.graphs.custom.no_history=没有可显示的历史数据，请为图形添加更多指标。
project_activity.graphs.custom.metric_no_history=这个指标没有可供显示的历史数据。
project_activity.graphs.custom.search=根据名称搜索指标
project_activity.graphs.custom.type_x_message=当前的选择只有 "{0}" 个有效指标。
project_activity.graphs.open_in_table=把图表中的数据显示到表格中
project_activity.graphs.data_table.title=表格格式显示图表数据
project_activity.graphs.data_table.max_lines_warning=只显示最近 {0} 数据。如果想看其他数据，可以在主页修改日期范围。
project_activity.graphs.data_table.no_data_warning=选中序列没有数据
project_activity.graphs.data_table.no_data_warning_check_dates_x=选择时间范围没有数据（{start} 之后），可以在主页修改时间范围。
project_activity.graphs.data_table.no_data_warning_check_dates_y=选择时间范围没有数据（{end} 之前），可以在主页修改时间范围。
project_activity.graphs.data_table.no_data_warning_check_dates_x_y=选择时间范围没有数据（{sart} 至 {end}），可以在主页修改时间范围。

project_activity.custom_metric.covered_lines=覆盖行


#------------------------------------------------------------------------------
#
# PROJECT "UPDATE KEY" PAGE
#
#------------------------------------------------------------------------------
update_key.old_key=旧标识
update_key.new_key=新标识
update_key.are_you_sure_to_change_key=是否确认修改 "{0}" 的标识，包含所有的模块和资源？


#------------------------------------------------------------------------------
#
# PROJECT QUALITY PROFILE PAGE
#
#------------------------------------------------------------------------------
project_quality_profile.instance_default=实例默认
project_quality_profile.successfully_updated={0} 质量配置更新成功。
project_quality_profile.subtitle=管理项目质量配置
project_quality_profile.always_use_default=使用实例默认质量配置
project_quality_profile.current=当前质量配置
project_quality_profile.always_use_specific=指定一个质量配置
project_quality_profile.change_lang_X_profile=修改 {0} 质量配置
project_quality_profile.requires_new_analysis=下次分析后生效。
project_quality_profile.add_language.title=添加新语言
project_quality_profile.add_language.description=在下次分析前，为新语言手工指定一个配置
project_quality_profile.add_language.action=添加语言
project_quality_profile.add_language_modal.title=添加一门语言
project_quality_profile.add_language_modal.choose_language=选择语言
project_quality_profile.add_language_modal.choose_profile=选择配置
project_quality_profile.add_language_modal.no_active_rules=配置没有启用任何规则
project_quality_profile.add_language_modal.profile_unavailable_no_active_rules=配置没有启用任何规则，无法使用。请在配置中至少启用一条规则。
project_quality_profile.add_language_modal.go_to_profile=进入质量阈
project_quality_profile.change_profile=修改配置

#------------------------------------------------------------------------------
#
# PROJECT QUALITY GATE PAGE
#
#------------------------------------------------------------------------------
project_quality_gate.default_qgate=默认
project_quality_gate.successfully_updated=已更新质量阈。
project_quality_gate.subtitle=管理项目质量阈
project_quality_gate.always_use_default=使用实例默认质量阈
project_quality_gate.always_use_specific=使用指定质量阈
project_quality_gate.requires_new_analysis=修改会在下次分析后生效
project_quality_gate.no_condition=质量阈为空。如需使用，请添加条件 {link}。
project_quality_gate.no_condition_on_new_code=质量阈的条件指定为全部代码，但不对新代码生效。它不会出现在拉取请求中。如需用于拉取请求，请添加条件 {link}。
project_quality_gate.no_condition.link=质量阈定义
project_quality_gate.no_condition.reason=无条件

#------------------------------------------------------------------------------
#
# PROJECT (RESOURCE) DELETION PAGE
#
#------------------------------------------------------------------------------

project_deletion.delete_resource_confirmation=确认删除 {0}？
project_deletion.resource_deleted=项目 "{0}" 已删除。
projects_management.delete_resource_confirmation=确认删除 "{0}"？
projects_management.delete_selected_warning=将删除 {0} 条选中信息。
projects_management.delete_all_warning=将删除所有 {0} 信息。
projects_management.project_has_been_successfully_created=项目 {project} 创建成功。

#------------------------------------------------------------------------------
#
# PROJECT INFORMATION DRAWER
#
#------------------------------------------------------------------------------

project.info.title=项目信息
application.info.title=应用信息
project.info.description=描述
project.info.quality_gate=使用的质量阈
project.info.to_notifications=设置提醒
project.info.notifications=设置提醒
project.info.main_branch=主分支
project.info.see_more_info_on_x_locs=显示 {0} 行代码的更多信息

#------------------------------------------------------------------------------
#
# QUALITY PROFILES
#
#------------------------------------------------------------------------------

quality_profiles.new_profile=新配置
quality_profiles.compare_with=比较
quality_profiles.filter_by=搜索配置
quality_profiles.restore_profile=恢复配置
quality_profiles.restore_profile.success="{0}" 配置的 {1} 个规则已恢复
quality_profiles.restore_profile.warning="{0}" 配置的 {1} 个规则已恢复，{2} 个会泽已忽略
quality_profiles.optional_configuration_file=可选配置文件
quality_profiles.new_name=新名称
quality_profiles.no_languages_available=没有可用语言。你不能创建新配置。
quality_profiles.delete_confirm_title=删除配置
quality_profiles.are_you_sure_want_delete_profile_x=确认删除配置 "{0}"？
quality_profiles.are_you_sure_want_delete_profile_x_and_descendants=确认删除配置 "{0}" 和它的所有子项？
quality_profiles.this_profile_has_descendants=配置存在子项。
quality_profiles.profile_inheritance=配置继承
quality_profiles.no_projects_associated_to_profile=这个配置下没有分配任何项目。
quality_profiles.cannot_associate_projects_no_rules=如需为项目启用配置，至少需要启用一条规则。
quality_profiles.cannot_set_default_no_rules=如需将配置设置为默认，至少需要启用一条规则。
quality_profiles.warning.used_by_projects_no_rules=当前配置已用于多个项目，但是没有启用规则。请为配置至少启用一条规则。
quality_profiles.warning.is_default_no_rules=当前配置为默认配置，但是没有启用规则。请为配置至少启用一条规则。
quality_profiles.parent=上级：
quality_profiles.parameter_set_to=参数 {0} 设置为 {1}
quality_profiles.x_rules_only_in={0} 规则只包含在
quality_profiles.x_rules_have_different_configuration={0} 规则存在不同配置
quality_profiles.copy_x_title=复制配置 {0}
quality_profiles.extend_x_title=扩展配置 "{0}" - {1}
quality_profiles.rename_x_title=重命名配置 {0} - {1}
quality_profiles.deprecated=废弃
quality_profiles.severity_set_to=严重性设置为
quality_profiles.changelog.ACTIVATED=激活
quality_profiles.changelog.DEACTIVATED=停用
quality_profiles.changelog.UPDATED=更新
quality_profiles.changelog.parameter_reset_to_default_value=参数 {0} 重置为默认值
quality_profiles.deleted_profile=配置 {0} 已不存在
quality_profiles.projects_for_default=没有指定质量配置的项目，默认会分配为这个配置。
quality_profile.x_rules={0} 条规则
quality_profile.x_active_rules={0} 激活规则
quality_profiles.x_overridden_rules={0} 覆盖规则
quality_profiles.change_parent=修改父类
quality_profiles.all_profiles=所有配置
quality_profiles.x_profiles={0} 配置
quality_profiles.x_Profiles={0} 配置
quality_profiles.projects.select_hint=点击为此项目分配质量配置
quality_profiles.projects.deselect_hint=点击取消此项目和质量配置的关联
quality_profile.empty_comparison=质量配置是相同的。
quality_profiles.activate_more=更多激活规则
quality_profiles.activate_more.help.built_in=内置质量配置，不能手工修改。如果想激活更多规则，可以通过继承创建一个新的配置，再添加规则。
quality_profiles.activate_more_rules=激活更多规则
quality_profiles.intro1=质量配置是在分析时使用的规则集合。
quality_profiles.intro2=每个语言都有默认配置。没有指定其他配置的项目会使用默认配置。
quality_profiles.list.projects=项目
quality_profiles.list.projects.help=分配了配置的项目会使用对应的语言进行分析，无论是否默认的配置。质量配置管理员会为项目分配配置。项目管理员会为每个语言选择非默认的配置。
quality_profiles.list.rules=规则
quality_profiles.list.updated=更新
quality_profiles.list.used=使用
quality_profiles.list.default.help=每个语言都会有一个默认配置。没有特别分配规则的项目会使用默认配置进行分析。
quality_profiles.x_updated_on_y={0}，更新于 {1}
quality_profiles.change_projects=修改项目
quality_profiles.not_found=找不到请求的质量配置。
quality_profiles.latest_new_rules=最近新规则
quality_profiles.latest_new_rules.activated={0} 已激活，配置 {1}
quality_profiles.latest_new_rules.not_activated={0} 未激活
quality_profiles.deprecated_rules=废弃规则
quality_profiles.deprecated_rules_description=被分期的规则最终都会消失。你应该主动研究一下如何替换它们。
quality_profiles.deprecated_rules_are_still_activated=废弃规则依然在被质量配置 {0} 使用。
quality_profiles.sonarway_missing_rules=未包含 Sonar way 规则
quality_profiles.sonarway_missing_rules_description=你的配置中缺少推荐的规则。
quality_profiles.stagnant_profiles=停滞的配置
quality_profiles.not_updated_more_than_year=下列配置已经超过一年未更新了：
quality_profiles.exporters=导出人
quality_profiles.exporters.deprecated=导出已废弃，会在未来版本中删除。
quality_profiles.updated_=更新：
quality_profiles.used_=使用：
quality_profiles.built_in=内置
quality_profiles.built_in.description=可能自动更新内置质量配置。
quality_profiles.extends_built_in=因为它继承自一个内置的质量配置，这个质量配置会根据对应的插件配置而自动更新。
quality_profiles.default_permissions=拥有“管理质量配置”权限的用户才能管理质量配置。
quality_profiles.grant_permissions_to_more_users=授权给更多用户
quality_profiles.grant_permissions_to_user_or_group=授权给一个用户或一个组
quality_profiles.additional_user_groups=更多用户/群组：
quality_profiles.search_description=根据登录或姓名搜索用户，根据名称搜索群组
quality_profiles.permissions.remove.user=删除用户权限
quality_profiles.permissions.remove.user.confirmation=是否确认删除用户 {user} 的质量配置权限？
quality_profiles.permissions.remove.group=删除群组权限
quality_profiles.permissions.remove.group.confirmation=是否确认删除群组 {user} 的质量配置权限？



#------------------------------------------------------------------------------
#
# QUALITY GATES
#
#------------------------------------------------------------------------------

quality_gates.create=创建质量阈
quality_gates.rename=重命名质量阈
quality_gates.delete=删除质量阈
quality_gates.copy=复制质量阈
quality_gates.cannot_set_default_no_conditions=如需设置为默认质量阈，需要至少配置一个条件。
quality_gates.is_default_no_conditions=当前为默认质量阈，当时没有配置条件。请为此质量阈至少配置一个条件。
quality_gates.conditions=条件
quality_gates.conditions.help=项目中的新代码和全部代码的条件都需要通过质量阈。
quality_gates.conditions.help.link=参考：清理代码
quality_gates.projects=项目
quality_gates.projects.help=没有特别指定质量阈的项目都会使用默认阈。质量配置和质量阈管理员可以为项目分配质量阈。项目管理员也可以选择非默认的质量阈。
quality_gates.add_condition=添加条件
quality_gates.condition.edit=为 {0} 修改条件
quality_gates.condition.delete=为 {0} 删除条件
quality_gates.condition_added=成功添加条件。
quality_gates.update_condition=修改条件
quality_gates.condition_updated=成功修改条件。
quality_gates.no_conditions=无条件
quality_gates.health_icons=项目健康度图标展示：
quality_gates.projects_for_default=没有指定质量阈值的项目默认都会分配到此。
quality_gates.projects.with=和
quality_gates.projects.without=非
quality_gates.projects.all=所有
quality_gates.projects.noResults=没有项目
quality_gates.projects.select_hint=点击关联项目和质量阈值
quality_gates.projects.deselect_hint=点击删除项目和质量阈值的关联
quality_gates.projects.cannot_associate_projects_no_conditions=如果为项目分配此质量阈，至少需要配置一个条件。
quality_gates.operator.LT=小于
quality_gates.operator.GT=大于
quality_gates.operator.EQ=相等
quality_gates.operator.NE=不是
quality_gates.operator.LT.short=<
quality_gates.operator.GT.short=>
quality_gates.operator.EQ.short==
quality_gates.operator.NE.short=\u2260
quality_gates.operator.LT.rating=优于
quality_gates.operator.GT.rating=劣于
quality_gates.operator.EQ.rating=相等
quality_gates.operator.NE.rating=不相等
quality_gates.delete.confirm.message=确认删除 "{0}" 质量阈值？
quality_gates.delete.confirm.default=确认删除 "{0}" 质量阈值，它是默认质量阈值？
quality_gates.delete_condition=删除条件
quality_gates.condition_deleted=成功删除条件
quality_gates.delete_condition.confirm.message=确认删除 "{0}" 条件？
quality_gates.conditions.fails_when=质量阈失败，原因
quality_gates.conditions.metric=指标
quality_gates.conditions.new_code=新代码
quality_gates.conditions.new_code.long=新代码的条件
quality_gates.conditions.new_code.description=应用于所有分支和拉请求的新代码条件
quality_gates.conditions.overall_code=所有代码
quality_gates.conditions.overall_code.long=所有代码条件
quality_gates.conditions.overall_code.description=只应用于长期分支的所有代码的条件
quality_gates.conditions.operator=操作
quality_gates.conditions.warning=警告
quality_gates.conditions.warning.tooltip=警告状态已经废弃，会在质量阈下次更新时消失
quality_gates.conditions.value=值
quality_gates.duplicated_conditions=质量阈存在重复条件：
quality_gates.intro.1=质量阈是一系列对项目指标进行评估的条件。项目必须达到所有条件才能算整体上通过了质量阈。
quality_gates.intro.2=可以为没有特别指定质量阈的项目设置一个默认的质量阈。
quality_gates.built_in=内置
quality_gates.built_in.help=内置，不变的质量阈是一种最佳实践。
quality_gates.built_in.description.1=这个质量阈是默认提供的。
quality_gates.built_in.description.2=它会随着最新推荐自动更新。
quality_gates.status=质量阈状态
quality_gates.help=质量阈是一系列基于指标的布尔表达式。它可以帮助我们实时了解项目是否已经满足生产要求了。理想情况下，所有项目使用相同的质量阈。每个项目的质量阈状态都会展示在首页。
quality_gates.permissions=权限
quality_gates.permissions.help=拥有全局“管理质量阈”权限，以及下列用户可以管理这个质量阈。
quality_gates.permissions.grant=为用户或群组授予权限
quality_gates.permissions.search=使用帐号或姓名搜索用户，使用名称搜索群组：
quality_gates.permissions.remove.user=删除用户权限
quality_gates.permissions.remove.user.confirmation=是否确认为用户 {user} 删除质量阈权限？
quality_gates.permissions.remove.group=删除群组权限
quality_gates.permissions.remove.group.confirmation=是否确认为群组 {user} 删除质量阈权限？

#------------------------------------------------------------------------------
#
# RULES DOCUMENTATION PAGE
#
#------------------------------------------------------------------------------
rules.parameters=参数
rules.status.beta=Beta
rules.status.BETA=Beta
rules.status.deprecated=废弃
rules.status.DEPRECATED=废弃
rules.status.DEPRECATED.help=生成此问题的规则已废弃，即将删除。一旦删除规则，问题也会消失。
rules.status.ready=准备
rules.status.READY=准备
rules.status.REMOVED=删除
rules.status.REMOVED.help=生成此问题的规则已删除。下次分析，问题就会消失。


#------------------------------------------------------------------------------
#
# CODING RULES
#
#------------------------------------------------------------------------------
coding_rules.active_in_all_profiles=此配置已经对所有有效的质量配置进行了激活。
coding_rules.activate=激活
coding_rules.activate_in=激活
coding_rules.activate_in_quality_profile=质量配置中激活
coding_rules.activation_severity=激活严重性
coding_rules.available_since=生效时间
coding_rules.bulk_change=批量修改
coding_rules.bulk_change.success=修改了 {0} 条规则
coding_rules.bulk_change.warning=修改了 {0} 条规则，忽略了 {1} 条规则
coding_rules.bulk_change.no_quality_profile=无质量阈
coding_rules.can_not_bulk_change=设置了自定义质量配置之后才能使用批量修改。可以从一个现有的内置配置复制新的质量配置，或者在质量配置列表中进行扩展。
coding_rules.can_not_deactivate=这条是继承的规则，不能忽略。
coding_rules.change_details=修改质量配置
coding_rules.context.others.title=如何在其他组件或框架中修复该问题？
coding_rules.context.others.description.first=虽然上面没有列出项目使用的主要框架或组件，你可以再我们提供的教程中获取帮助信息。
coding_rules.context.others.description.second=注意：教程中提及的第三方库不一定适合你的代码。
coding_rules.context.others.description.do=第三方库可以用于使用的框架。
coding_rules.context.others.description.dont=不要直接把修复方法复制粘贴到代码里。
coding_rules.context.others.title_feedback=反馈建议
coding_rules.context.others.feedback_description_1=如果教程未生效，请反馈给我们。比如使用了什么框架，为什么解决方法未生效，把这些提交到 SonarQube 产品板块。
coding_rules.context.others.feedback_description_2=我们会尽快给出合适的方案。
coding_rules.context.others.feedback_description.link=提交想法
coding_rules.create=创建
coding_rules.create_custom_rule=创建自定义规则
coding_rules.custom_rule=自定义规则
coding_rules.custom_rule.help=自定义规则是由管理员通过模板创建的，是可以自由修改的规则。
coding_rules.custom_rule.activation_notice=注意：自定义规则的参数不会在激活时配置，只会在创建/编辑阶段配置。
coding_rules.custom_rule.removal=需要注意的是自定义规则可能被删除。如果删除了自定义规则，它不会从 SonarQube 实例中消失，而是状态标记为 "已删除"，相关的问题可以继续正常显示。
coding_rules.custom_rules=自定义规则
coding_rules.deactivate_in_quality_profile=质量配置中的禁用项
coding_rules.delete_rule=删除规则
coding_rules.delete.custom.confirm=是否确认删除自定义规则 "{0}"？
coding_rules.extend_description=扩展描述
coding_rules.deactivate_in=停用
coding_rules.deactivate=停用
coding_rules.deactivate.confirm=是否要在配置文件中停用此规则吗？
coding_rules.deactivate_in_all_quality_profiles=在所有 {0} 个配置文件中停用
coding_rules.inherits="{0}" 继承自 "{1}"
coding_rules.issues=问题
coding_rules.issues.only_main_branches=只包含项目主分支的问题。
coding_rules.most_violating_projects=违反规则最多的项目
coding_rules.need_extend_or_copy=内置质量配置中的规则是无法禁用的。可以从一个现有的内置配置复制新的质量配置，或者在质量配置列表中进行扩展。
coding_rules.no_results=无代码规则
coding_rules.no_issue_detected_for_projects=主项目分支下检测不到对应规则的任何问题。
coding_rules.no_tags=无标签
coding_rules.original=原始：
coding_rules.overrides="{0}" 覆盖了 "{1}"
coding_rules.parameter.empty=（无）
coding_rules.parameters=参数
coding_rules.parameters.default_value=默认值：
coding_rules.quality_profiles=质量配置
coding_rules.quality_profiles.template_caption=这个规则模板在老版本的 SonarQube 的下列配置中是激活的。以后不能这样使用了。请创建一个自定义规则。
coding_rules.quality_profile=质量配置
coding_rules.reactivate=重新激活
coding_rules.reactivate.help=之前删除了一个编码相同的规则。请重新激活已存在的规则，或修改编码创建一个新规则。
coding_rules.return_to_list=返回列表
coding_rules.see_all=查看所有规则
coding_rules.remove_extended_description=删除扩展描述
coding_rules.remove_extended_description.confirm=是否确认删除这条扩展描述？
coding_rules.repository_language=规则仓库（语言）
coding_rules.revert_to_parent_definition=回滚到上级定义
coding_rules.revert_to_parent_definition.confirm=这个规则会回滚到配置 {0} 中定义的参数。是否继续？
coding_rules.rule_template=规则模板
coding_rules.rule_template.help=规则模板可以让用户很容易的创建自己的规则。它们就像饼干工具一样，可以快速制作“自定义规则”。同一模板创建的规则会显示在规则详情页中。
coding_rules.rule_template.title=这个规则可以使用一个模板来创建自定义规则，它不能在配置中激活。
coding_rules._rules=规则
coding_rules.show_template=显示模板
coding_rules.skip_to_filters=跳至规则搜索
coding_rules.to_select_rules=选择规则
coding_rules.type.tooltip.CODE_SMELL=异味检测规则
coding_rules.type.tooltip.BUG=Bug 检测规则
coding_rules.type.tooltip.VULNERABILITY=漏洞检测规则
coding_rules.type.tooltip.SECURITY_HOTSPOT=安全热点检测规则
coding_rules.update_custom_rule=更新自定义规则
coding_rules.filter_similar_rules=搜索类似问题

coding_rules.filters.activation=激活
coding_rules.filters.activation.active=激活
coding_rules.filters.activation.active_rules=启用规则
coding_rules.filters.activation.inactive=停用
coding_rules.filters.activation.help=选中一个质量配置后，就可以使用活动条件
coding_rules.filters.active_severity=活动严重程度
coding_rules.filters.active_severity.inactive=当选择了质量配置时，就可以配置活动严重程度条件
coding_rules.filters.availableSince=生效时间
coding_rules.filters.characteristic=特征
coding_rules.filters.description=描述
coding_rules.filters.quality_profile=质量配置
coding_rules.filters.inheritance=继承
coding_rules.filters.inheritance.inactive=选中一个继承的质量配置后，就可以使用继承条件
coding_rules.filters.inheritance.none=未继承
coding_rules.filters.inheritance.inherited=继承
coding_rules.filters.inheritance.x_inherited_from_y={0} 继承自 "{1}"
coding_rules.filters.inheritance.overrides=覆盖
coding_rules.filters.key=标识
coding_rules.filters.language=语言
coding_rules.filters.language.inactive=未选择质量配置时，才能使用语言选项
coding_rules.filters.name=名称
coding_rules.filters.repository=仓库
coding_rules.filters.severity=严重性
coding_rules.filters.status=状态
coding_rules.filters.tag=标签
coding_rules.filters.template=模板
coding_rules.filters.template.is_template=只显示模板
coding_rules.filters.template.is_not_template=隐藏模板

coding_rules.facet.languages=语言
coding_rules.facet.repositories=仓库
coding_rules.facet.tags=标签
coding_rules.facet.qprofile=质量配置
coding_rules.facet.qprofile.help=质量配置是在分析中使用的规则集合。
coding_rules.facet.qprofile.link=参考：质量配置
coding_rules.facet.debt_characteristics=特征
coding_rules.facet.severities=默认严重性
coding_rules.facet.statuses=状态
coding_rules.facet.available_since=有效起始期
coding_rules.facet.inheritance=继承
coding_rules.facet.activationSeverities=激活严重性
coding_rules.facet.template=模板
coding_rules.facet.rule_key=规则
coding_rules.facet.types=类型

coding_rules.facets.languages=语言
coding_rules.facets.tags=标签
coding_rules.facets.repositories=仓库
coding_rules.facets.top=前 {0}

coding_rules.remediation_function=修复功能
coding_rules.remediation_function.LINEAR=线性
coding_rules.remediation_function.LINEAR_OFFSET=拥有偏移的线性
coding_rules.remediation_function.CONSTANT_ISSUE=常量/任务
coding_rules.remediation_function.coeff=加速系数
coding_rules.remediation_function.offset=偏移
coding_rules.remediation_function.constant=常量

coding_rules.external_rule.engine=外部规则引擎提供的规则： {0}

coding_rules.description_section.title.introduction=间接
coding_rules.description_section.title.root_cause=问题原因
coding_rules.description_section.title.root_cause.SECURITY_HOTSPOT=风险原因
coding_rules.description_section.title.assess_the_problem=评估风险
coding_rules.description_section.title.how_to_fix=修复方法
coding_rules.description_section.title.more_info=更多信息

coding_rules.description_context.title=哪个组件或框架含有这问题？
coding_rules.description_context.sub_title=如何修复 {0}？
coding_rules.description_context.default_information=与问题关联性最大的组件或框架是 {0}。
coding_rules.description_context.other=其他

coding_rules.more_info.education_principles.title=安全原则
coding_rules.more_info.resources.title=资源

coding_rules.more_info.notification_message=我们在下面增加了安全原则的新信息。安全原则是提升代码安全的通用指南。请花一些时间阅读。
coding_rules.more_info.scroll_message=滚动查看安全原则
#------------------------------------------------------------------------------
#
# EMAIL CONFIGURATION
#
#------------------------------------------------------------------------------
email_configuration.test.title=测试配置
email_configuration.test.to_address=送达地址
email_configuration.test.subject=主题
email_configuration.test.message=信息
email_configuration.test.message_text=这是来自 Sonar 的测试信息
email_configuration.test.send=发送测试邮件
email_configuration.test.email_was_sent_to_x=邮件已发送至 {0}


#------------------------------------------------------------------------------
#
# NOTIFICATIONS
#
#------------------------------------------------------------------------------
notification.channel.EmailNotificationChannel=邮件
notification.dispatcher.information=订阅下面的频道可以在相关的事件发生时收到提醒。事件的作者不会收到提醒。
notification.dispatcher.ChangesOnMyIssue=分配给我或我报告的问题的修改
notification.dispatcher.NewIssues=新问题
notification.dispatcher.NewAlerts=新警告
notification.dispatcher.NewAlerts.project=质量阈变更
notification.dispatcher.NewFalsePositiveIssue=问题标记为误判或不会修复
notification.dispatcher.SQ-MyNewIssues=新的问题
notification.dispatcher.CeReportTaskFailure=我管理的任务中失败的后台任务
notification.dispatcher.CeReportTaskFailure.project=失败的后台任务


#------------------------------------------------------------------------------
#
# ALERTS
#
#------------------------------------------------------------------------------

alerts.operator.<=小于
alerts.operator.>=大于
alerts.operator.\==等于
alerts.operator.!\==不等于


alert.tooltip.error=有一条错误信息。
alert.tooltip.warning=有一条警告信息。
alert.tooltip.success=有一条成功信息。
alert.tooltip.info=有一条提醒信息。

alert.dismiss=关闭消息


#------------------------------------------------------------------------------
#
# USER
#
#------------------------------------------------------------------------------
user.password_doesnt_match_confirmation=密码不匹配。
user.login_or_email_used_as_scm_account=登陆并且邮箱自动配置为 SCM 账号
user.x_deleted={0}（删除）

login.login_to_sonarqube=登录 SonarQube
login.login_with_x=通过 {0} 登录
login.more_options=更多选项
login.unauthorized_access_alert=未授权访问当前页面。请设置权限并重新登录。
login.with_x=通过 {0}
login.authentication_failed=认证失败
login.logout_failed=注销失败

unauthorized.message=无权访问此页。请联系管理员。
unauthorized.reason=原因



#------------------------------------------------------------------------------
#
# USERS & GROUPS PAGE
#
#------------------------------------------------------------------------------
users.update=更新用户

groups.users.edit=修改群组成员

#------------------------------------------------------------------------------
#
# MY PROFILE & MY ACCOUNT
#
#------------------------------------------------------------------------------
my_profile.login=登录
my_profile.email=邮件
my_profile.groups=组
my_profile.scm_accounts=SCM 账号
my_profile.scm_accounts.tooltip=SCM 账号用来实现问题自动分配。账号和邮箱会自动作为 SCM 账号。
my_profile.password.title=修改密码
my_profile.password.old=旧值
my_profile.password.new=新值
my_profile.password.confirm=确认新值
my_profile.password.changed=密码已变更
my_profile.notifications.submit=保存修改
my_profile.overall_notifications.title=总览提醒
my_profile.per_project_notifications.title=每个项目的提醒
my_profile.per_project_notifications.add=添加项目
my_profile.per_project_notifications.edit=设置提醒

my_account.page=我的账号
my_account.notifications=提醒
my_account.no_project_notifications=尚未设置项目提醒。
my_account.profile=配置
my_account.security=安全
my_account.tokens_description=如果想强化安全，不想在执行代码扫描或调用 Web Service 时使用真实 SonarQube 用户的密码，可以使用用户令牌来代替用户登录。这样可以通过避免把分析用户的密码在网络传输，从而提升安全性。
my_account.token_type=类型
my_account.project_name=项目
my_account.tokens_last_usage=最后使用
my_account.tokens.expiration=过期
my_account.tokens.expired=令牌已过期
my_account.projects=项目
my_account.projects.description=这些是你管理的项目。
my_account.projects.no_results=你尚未管理任何项目。
my_account.projects.analyzed_x=分析 {0}
my_account.projects.never_analyzed=未分析
my_account.search_project=选择项目
my_account.set_notifications_for=使用名称搜索项目
my_account.set_notifications_for.title=添加项目
my_account.create_new.TRK=添加项目
my_account.add_project=添加项目
my_account.add_project.manual=手工
my_account.add_project.azure=Azure DevOps
my_account.add_project.bitbucket=Bitbucket
my_account.add_project.bitbucketcloud=Bitbucket
my_account.add_project.github=GitHub
my_account.add_project.gitlab=GitLab
my_account.reset_password=修改密码
my_account.reset_password.explain=账号不应该使用默认密码。

my_account.create_new_project_portfolio_or_application=分析新项目/创建新视图或应用

my_account.preferences=偏好
my_account.preferences.keyboard_shortcuts=启用键盘快捷键
my_account.preferences.keyboard_shortcuts.description=一些操作可以使用快捷键。如果不想使用快捷键，可以禁用（不会禁用导航快捷键，比如箭头，Esc，回车）。可以使用问题标记快捷键（点击键盘上的 {questionMark}）获取可用的快捷键列表。
my_account.preferences.keyboard_shortcuts.enabled=键盘快捷键已启用
my_account.preferences.keyboard_shortcuts.disabled=键盘快捷键已禁用

#------------------------------------------------------------------------------
#
# PROJECT PROVISIONING
#
#------------------------------------------------------------------------------
provisioning.no_analysis=创建以来还没有进行过分析。目前只能进行配置。
provisioning.no_analysis.delete=你应该重新分析项目，或直接 {0}。
provisioning.no_analysis.delete_project=删除项目
provisioning.no_analysis_on_main_branch="{branchName}" 分支尚未分析。
provisioning.no_analysis_on_main_branch.bad_configuration="{branchName}" 尚未分析，你已经拥有多个分支。看起来它不是你的 {branchType}，请检查配置。
provisioning.only_provisioned=只显示预备
provisioning.only_provisioned.tooltip=预备项目是手工创建，尚未分析的项目。
provisioning.no_analysis.application=创建之后还未分析。分析项目之后可以在此查看信息。


#------------------------------------------------------------------------------
#
# RULE SEVERITIES
#
#------------------------------------------------------------------------------

severity.BLOCKER=阻断
severity.BLOCKER.description=必须立即修复。
severity.CRITICAL=严重
severity.CRITICAL.description=必须立即审查并尽快修复。
severity.MAJOR=主要
severity.MAJOR.description=潜在影响，影响大。
severity.MINOR=次要
severity.MINOR.description=潜在影响，影响小。
severity.INFO=提示
severity.INFO.description=并非 Bug 也不是质量问题。只是一个提醒。

#------------------------------------------------------------------------------
#
# METRIC DOMAINS
#
#------------------------------------------------------------------------------

metric_domain.Size=大小
metric_domain.Tests=测试
metric_domain.Integration Tests=集成测试
metric_domain.Complexity=复杂度
metric_domain.Documentation=文档
metric_domain.Rules=规则
metric_domain.General=常用
metric_domain.Duplication=重复
metric_domain.Design=设计
metric_domain.SCM=代码版本
metric_domain.Maintainability=可维护性
metric_domain.Releasability=可发布性
metric_domain.Reliability=可靠性
metric_domain.Security=安全性
metric_domain.SecurityReview=安全审查
metric_domain.Issues=问题
metric_domain.Duplications=重复
metric_domain.Coverage=覆盖率

#--------------------------------------------------------------------------------------------------------------------
#
# METRIC TYPES
#
#--------------------------------------------------------------------------------------------------------------------

metric.type.INT=整数
metric.type.FLOAT=浮点数
metric.type.PERCENT=百分比
metric.type.BOOL=布尔
metric.type.STRING=字符串
metric.type.MILLISEC=毫秒
metric.type.DATA=数值
metric.type.LEVEL=级别
metric.type.DISTRIB=分布
metric.type.RATING=比率
metric.type.WORK_DUR=工作持续时间

metric.level.ERROR=错误
metric.level.WARN=警告
metric.level.OK=正常
metric.level.NONE=无

#------------------------------------------------------------------------------
#
# METRICS
#
#------------------------------------------------------------------------------

metric.abstractness.description=抽象度
metric.abstractness.name=抽象度
metric.accessors.description=存取
metric.accessors.name=存取
metric.alert_status.description=警报
metric.alert_status.name=警报
metric.authors_by_line.description=作者，按行
metric.authors_by_line.name=作者，按行
metric.blocker_violations.description=阻断违规
metric.blocker_violations.name=阻断违规
metric.branch_coverage.description=分支覆盖率
metric.branch_coverage.name=分支覆盖率
metric.bugs.description=Bug
metric.bugs.name=Bug
metric.ca.description=传入接口
metric.ca.name=传入接口
metric.ce.description=传出接口
metric.ce.name=传出接口
metric.classes.description=类
metric.classes.name=类
metric.class_complexity.description=根据类平均的复杂度
metric.class_complexity.name=复杂度/类
metric.class_complexity_distribution.description=类分布/复杂度
metric.class_complexity_distribution.name=类分布/复杂度
metric.code_smells.description=代码异味
metric.code_smells.name=异味
metric.cognitive_complexity.description=认知复杂度
metric.cognitive_complexity.name=认知复杂度
metric.commented_out_code_lines.description=注释的代码行数
metric.commented_out_code_lines.name=注释的代码行数
metric.comment_blank_lines.description=没有包含内容的注释
metric.comment_blank_lines.name=空注释
metric.comment_lines.description=注释行数
metric.comment_lines.name=注释行
metric.comment_lines_density.description=注释行相对于未注释代码行 (ncloc) + 注释行的比例
metric.comment_lines_density.name=注释 (%)
metric.comment_lines_density.short_name=评论
metric.complexity.description=圈复杂度
metric.complexity.name=圈复杂度
metric.complexity_in_classes.description=类的圈复杂度
metric.complexity_in_classes.name=类的复杂度
metric.complexity_in_functions.description=方法的圈复杂度
metric.complexity_in_functions.name=方法的复杂度
metric.conditions_by_line.description=分支覆盖行
metric.conditions_by_line.name=分支覆盖行
metric.conditions_to_cover.description=可覆盖分支
metric.conditions_to_cover.name=可覆盖分支
metric.confirmed_issues.description=确认问题
metric.confirmed_issues.name=确认问题
metric.coverage.description=单元测试覆盖率
metric.coverage.name=覆盖率
metric.coverage_line_hits_data.description=行覆盖命中
metric.coverage_line_hits_data.name=行覆盖命中
metric.covered_conditions.description=覆盖分支
metric.covered_conditions.name=覆盖分支
metric.covered_conditions_by_line.description=覆盖的分支行
metric.covered_conditions_by_line.name=覆盖的分支行
metric.covered_lines.description=覆盖代码行
metric.covered_lines.name=覆盖代码行
metric.critical_violations.description=严重违规
metric.critical_violations.name=严重违规
metric.development_cost.description=开发成本
metric.development_cost.name=SQALE 开发成本
metric.directories.description=目录
metric.directories.name=目录
metric.distance.description=距离
metric.distance.name=距离
metric.dit.description=继承树深度
metric.dit.name=深度
metric.dsm.description=相关矩阵
metric.dsm.name=相关矩阵
metric.duplicated_blocks.description=重复块
metric.duplicated_blocks.name=重复块
metric.duplicated_files.description=重复文件
metric.duplicated_files.name=重复文件
metric.duplicated_lines.description=重复行
metric.duplicated_lines.name=重复行
metric.duplicated_lines_density.description=重复行根据语句的比例
metric.duplicated_lines_density.name=重复行 (%)
metric.duplicated_lines_density.short_name=重复
metric.duplicated_lines_density.extra_short_name=密度
metric.duplications_data.description=重复详情
metric.duplications_data.name=重复详情
metric.efficiency.description=效率
metric.efficiency.name=效率
metric.effort_to_reach_maintainability_rating_a.description=达到可维护性等级 A 所需的工作
metric.effort_to_reach_maintainability_rating_a.name=达到可维护性等级 A 所需的工作
metric.effort_to_reach_maintainability_rating_a.extra_short_name=达到等级 A 的工作
metric.false_positive_issues.description=误判问题
metric.false_positive_issues.name=误判问题
metric.files.description=文件数
metric.files.name=文件
metric.file_complexity.description=根据文件平均的复杂度
metric.file_complexity.name=复杂度/文件
metric.file_complexity_distribution.description=文件分布/复杂度
metric.file_complexity_distribution.name=文件分布/复杂度
metric.file_cycles.description=文件循环
metric.file_cycles.name=文件循环
metric.file_edges_weight.description=文件边界权重
metric.file_edges_weight.name=文件边界权重
metric.file_feedback_edges.description=怀疑文件依赖
metric.file_feedback_edges.name=怀疑文件依赖
metric.file_tangles.description=文件耦合
metric.file_tangles.name=文件耦合
metric.file_tangle_index.description=文件耦合数
metric.file_tangle_index.name=文件耦合数
metric.functions.description=方法
metric.functions.name=方法
metric.function_complexity.description=根据方法平均的复杂度
metric.function_complexity.name=复杂度/方法
metric.function_complexity_distribution.description=方法分布/复杂度
metric.function_complexity_distribution.name=方法分布/复杂度
metric.generated_lines.description=生成的行数
metric.generated_lines.name.suffix=自动生成行数
metric.generated_lines.name=生成的行数
metric.generated_ncloc.description=生成的非注释代码行数
metric.generated_ncloc.name.suffix=自动生成代码行数
metric.generated_ncloc.name=生成的代码行数
metric.has_rating_X=已评级：{0}
metric.no_rating=未评级
metric.info_violations.description=提示违规
metric.info_violations.name=提示违规
metric.instability.description=不稳定
metric.instability.name=不稳定
metric.it_branch_coverage.description=集成测试分支覆盖率
metric.it_branch_coverage.name=集成测试分支覆盖率
metric.it_conditions_by_line.description=集成测试分支覆盖行
metric.it_conditions_by_line.name=集成测试分支覆盖行
metric.it_conditions_to_cover.description=集成测试可覆盖分支
metric.it_conditions_to_cover.name=集成测试可覆盖分支
metric.it_coverage.description=集成测试覆盖
metric.it_coverage.name=集成测试覆盖
metric.it_coverage_line_hits_data.description=集成测试覆盖命中行
metric.it_coverage_line_hits_data.name=集成测试覆盖命中行
metric.it_covered_conditions_by_line.description=集成测试分支覆盖行
metric.it_covered_conditions_by_line.name=集成测试分支覆盖行
metric.it_lines_to_cover.description=集成测试可覆盖行
metric.it_lines_to_cover.name=集成测试可覆盖行
metric.it_line_coverage.description=集成测试覆盖行
metric.it_line_coverage.name=集成测试覆盖行
metric.it_uncovered_conditions.description=集成测试未覆盖分支
metric.it_uncovered_conditions.name=集成测试未覆盖分支
metric.it_uncovered_lines.description=集成测试未覆盖行
metric.it_uncovered_lines.name=集成测试未覆盖行
metric.last_commit_date.name=最新条件时间
metric.last_commit_datetimes_by_line.description=最新提交日期，按行
metric.last_commit_datetimes_by_line.name=最新提交日期，按行
metric.lcom4.description=LCOM4（缺乏凝聚指标）
metric.lcom4.name=LCOM4（缺乏凝聚指标）
metric.lcom4_blocks.description=LCOM4 块
metric.lcom4_blocks.name=LCOM4 块
metric.lcom4_distribution.description=Class 分布 / LCOM4
metric.lcom4_distribution.name=Class 分布 / LCOM4
metric.lines.description=行数
metric.lines.name=行数
metric.lines_to_cover.description=可覆盖行
metric.lines_to_cover.name=可覆盖行
metric.line_coverage.description=代码覆盖率
metric.line_coverage.name=代码覆盖率
metric.maintainability.description=可维护性
metric.maintainability.name=可维护性
metric.major_violations.description=主要违规
metric.major_violations.name=主要违规
metric.minor_violations.description=次要违规
metric.minor_violations.name=次要违规
metric.ncloc.name=代码行数
metric.ncloc.description=代码行数
metric.ncloc_language_distribution.description=按语言分布的未注释代码行数
metric.ncloc_language_distribution.name=每个语言的代码行数
metric.new_blocker_violations.description=新阻断违规
metric.new_blocker_violations.name=新阻断违规
metric.new_branch_coverage.description=新/修改代码的分支覆盖率
metric.new_branch_coverage.name=新代码的分支覆盖率
metric.new_branch_coverage.extra_short_name=条件覆盖率
metric.new_bugs.description=新增 Bug
metric.new_bugs.name=新增 Bug
metric.new_bugs.short_name=Bug
metric.new_code_smells.description=新增异味
metric.new_code_smells.name=新增异味
metric.new_code_smells.short_name=异味
metric.new_conditions_to_cover.description=新增可覆盖分支
metric.new_conditions_to_cover.name=新增可覆盖分支
metric.new_conditions_to_cover.extra_short_name=新增可覆盖分支
metric.new_coverage.description=新/修改的代码覆盖率
metric.new_coverage.name=新覆盖率
metric.new_coverage.short_name=覆盖率
metric.new_critical_violations.description=新严重违规
metric.new_critical_violations.name=新严重违规
metric.new_development_cost.description=新代码的开发成本
metric.new_development_cost.name=新代码的开发成本
metric.new_duplicated_blocks.name=新代码中的重复块
metric.new_duplicated_blocks.extra_short_name=重复代码块
metric.new_duplicated_blocks.description=新代码中的重复块
metric.new_duplicated_lines.name=新代码中的重复行
metric.new_duplicated_lines.extra_short_name=重复行
metric.new_duplicated_lines.description=新代码中的重复行
metric.new_duplicated_lines_density.description=根据语句计算的新代码中的重复行
metric.new_duplicated_lines_density.name=新代码中的重复行密度 (%)
metric.new_duplicated_lines_density.short_name=重复度
metric.new_duplicated_lines_density.extra_short_name=密度
metric.new_info_violations.description=新提示违规
metric.new_info_violations.name=新提示违规
metric.new_it_branch_coverage.description=新/修改的分支集成测试覆盖行
metric.new_it_branch_coverage.name=集成测试的新分支覆盖
metric.new_it_conditions_to_cover.description=集成测试的新增可覆盖分支
metric.new_it_conditions_to_cover.name=集成测试的新增可覆盖分支
metric.new_it_coverage.description=新/修改的代码集成测试分支覆盖率
metric.new_it_coverage.name=集成测试新增分支覆盖率
metric.new_it_lines_to_cover.description=集成测试的新增可覆盖行
metric.new_it_lines_to_cover.name=集成测试的新增可覆盖行
metric.new_it_line_coverage.description=新/修改的代码集成测试覆盖行
metric.new_it_line_coverage.name=集成测试的新行覆盖
metric.new_it_uncovered_conditions.description=集成测试未覆盖的新分支
metric.new_it_uncovered_conditions.name=集成测试未覆盖的新分支
metric.new_it_uncovered_lines.description=集成测试的未覆盖行
metric.new_it_uncovered_lines.name=集成测试未覆盖的行
metric.new_lines_to_cover.description=新增可覆盖行
metric.new_lines_to_cover.name=新增可覆盖行
metric.new_lines_to_cover.extra_short_name=新增覆盖行
metric.new_line_coverage.description=新/修改代码覆盖率
metric.new_line_coverage.name=新代码覆盖率
metric.new_line_coverage.extra_short_name=覆盖行
metric.new_maintainability_rating.description=新代码可维护率
metric.new_maintainability_rating.name=新代码可维护率
metric.new_maintainability_rating.extra_short_name=比率
metric.new_major_violations.description=新主要违规
metric.new_major_violations.name=新主要违规
metric.new_minor_violations.description=新次要违规
metric.new_minor_violations.name=新次要违规
metric.new_lines.name=新增代码行数
metric.new_lines.description=新代码中的非注释行数
metric.new_lines.short_name=行
metric.new_overall_branch_coverage.description=总体新/修改的分支覆盖率
metric.new_overall_branch_coverage.name=总体新分支覆盖率
metric.new_overall_conditions_to_cover.description=所有新增可覆盖分支
metric.new_overall_conditions_to_cover.name=所有新增可覆盖分支
metric.new_overall_coverage.description=总体新/修改代码的覆盖率
metric.new_overall_coverage.name=总体新覆盖率
metric.new_overall_lines_to_cover.description=所有覆盖的新行数
metric.new_overall_lines_to_cover.name=总体覆盖的新行数
metric.new_overall_line_coverage.description=总体新/修改的代码覆盖率
metric.new_overall_line_coverage.name=总体新代码覆盖率
metric.new_overall_uncovered_conditions.description=所有代码未覆盖的新分支
metric.new_overall_uncovered_conditions.name=总体未覆盖的新分支
metric.new_overall_uncovered_lines.description=所有测试未覆盖的新行数
metric.new_overall_uncovered_lines.name=总体未覆盖新行数
metric.new_reliability_rating.description=新代码可靠率
metric.new_reliability_rating.name=新代码可靠率
metric.new_reliability_rating.extra_short_name=比率
metric.new_reliability_remediation_effort.description=新代码的可靠性修复工作
metric.new_reliability_remediation_effort.name=新代码的可靠性修复工作
metric.new_reliability_remediation_effort.extra_short_name=修复工作
metric.new_security_hotspots.description=新安全热点
metric.new_security_hotspots.name=新安全热点
metric.new_security_hotspots.short_name=安全热点
metric.new_security_hotspots_reviewed.description=新代码安全热点审查比例
metric.new_security_hotspots_reviewed.name=新代码安全热点审查
metric.new_security_hotspots_reviewed.short_name=安全热点审查
metric.new_security_hotspots_reviewed_status.description=新代码安全热点已审查状态
metric.new_security_hotspots_reviewed_status.name=新代码安全已审查状态
metric.new_security_hotspots_to_review_status.description=新代码安全热点未审查状态
metric.new_security_hotspots_to_review_status.name=新代码安全未审查状态
metric.new_security_rating.description=新代码安全率
metric.new_security_rating.name=新代码安全率
metric.new_security_rating.extra_short_name=比率
metric.new_security_remediation_effort.description=新代码的安全修复工作
metric.new_security_remediation_effort.name=新代码的安全修复工作
metric.new_security_remediation_effort.extra_short_name=修复工作
metric.new_security_review_rating.description=新代码安全审查率
metric.new_security_review_rating.name=新代码安全审查率
metric.new_security_review_rating.extra_short_name=比率
metric.new_sqale_debt_ratio.description=新/修改代码的技术债务比率。
metric.new_sqale_debt_ratio.name=新代码技术债务比率
metric.new_sqale_debt_ratio.short_name=新债务率
metric.new_sqale_debt_ratio.extra_short_name=债务率
metric.new_technical_debt.description=新代码的技术债务
metric.new_technical_debt.name=新代码的技术债务
metric.new_technical_debt.short_name=新债
metric.new_technical_debt.extra_short_name=债
metric.new_uncovered_conditions.description=未覆盖新分支
metric.new_uncovered_conditions.name=未覆盖新分支
metric.new_uncovered_conditions.extra_short_name=未覆盖条件
metric.new_uncovered_lines.description=未覆盖的新代码
metric.new_uncovered_lines.name=未覆盖的新代码
metric.new_uncovered_lines.extra_short_name=未覆盖行
metric.new_violations.description=新违规
metric.new_violations.name=新违规
metric.new_vulnerabilities.description=新增漏洞
metric.new_vulnerabilities.name=新增漏洞
metric.new_vulnerabilities.short_name=漏洞
metric.noc.description=子类数
metric.noc.name=子类数
metric.open_issues.description=开启问题
metric.open_issues.name=开启问题
metric.overall_branch_coverage.description=所有测试的分支覆盖率
metric.overall_branch_coverage.name=总体分支覆盖率
metric.overall_conditions_by_line.description=所有测试的分支数
metric.overall_conditions_by_line.name=总体分支数
metric.overall_conditions_to_cover.description=所有可覆盖分支
metric.overall_conditions_to_cover.name=所有可覆盖分支
metric.overall_coverage.description=总体测试覆盖率
metric.overall_coverage.name=总体覆盖率
metric.overall_coverage_line_hits_data.description=所有测试的行数
metric.overall_coverage_line_hits_data.name=总体行数
metric.overall_covered_conditions_by_line.description=所有测试的覆盖分支数
metric.overall_covered_conditions_by_line.name=总体覆盖的分支数
metric.overall_lines_to_cover.description=所有测试可覆盖行
metric.overall_lines_to_cover.name=所有可覆盖行
metric.overall_line_coverage.description=所有测试的代码覆盖率
metric.overall_line_coverage.name=总体代码覆盖率
metric.overall_uncovered_conditions.description=所有测试未覆盖的分支
metric.overall_uncovered_conditions.name=总体未覆盖分支
metric.overall_uncovered_lines.description=所有测试未覆盖的代码
metric.overall_uncovered_lines.name=总体未覆盖代码
metric.packages.description=包
metric.packages.name=包
metric.package_cycles.description=包循环
metric.package_cycles.name=包循环
metric.package_edges_weight.description=包边界权重
metric.package_edges_weight.name=包边界权重
metric.package_feedback_edges.description=削减的包依赖
metric.package_feedback_edges.name=削减的包依赖
metric.package_tangles.description=削减的文件依赖
metric.package_tangles.name=削减的文件依赖
metric.package_tangle_index.description=包耦合数
metric.package_tangle_index.name=包耦合数
metric.portability.description=可移植性
metric.portability.name=可移植性
metric.profile.description=选中的质量配置
metric.profile.name=配置
metric.profile_version.description=选中的质量配置版本
metric.profile_version.name=配置版本
metric.projects.description=项目数
metric.projects.name=项目
metric.public_api.description=公共 API
metric.public_api.name=公共 API
metric.public_documented_api_density.description=有文档的公共类和方法，与未注释代码行 (ncloc) 的比例
metric.public_documented_api_density.name=有文档的公共 API (%)
metric.public_undocumented_api.description=无文档的公共类，方法和变量
metric.public_undocumented_api.name=无文档的公共 API
metric.quality_gate_details.description=与质量阈相关的项目详情
metric.quality_gate_details.name=质量阈详情
metric.quality_profiles.description=分析使用的质量配置详情
metric.quality_profiles.name=配置
metric.reliability.description=可靠性
metric.reliability.name=可靠性
metric.reliability_rating.description=可靠性等级
metric.reliability_rating.name=可靠性等级
metric.reliability_rating.extra_short_name=等级
metric.reliability_rating.tooltip.A=没有 Bug 时，可靠性等级为 A。
metric.reliability_rating.tooltip.B=至少有一个次要 Bug，可靠性等级为 B。
metric.reliability_rating.tooltip.C=至少有一个重要 Bug，可靠性等级为 C。
metric.reliability_rating.tooltip.D=至少有一个严重 Bug，可靠性等级为 D。
metric.reliability_rating.tooltip.E=至少有一个阻断 Bug，可靠性等级为 E。
metric.reliability_remediation_effort.description=可靠性修复工作
metric.reliability_remediation_effort.name=可靠性修复工作
metric.reliability_remediation_effort.extra_short_name=修复工作
metric.reopened_issues.description=重新问题
metric.reopened_issues.name=重开问题
metric.revisions_by_line.description=版本，按行
metric.revisions_by_line.name=版本，按行
metric.rfc.description=对类的响应（使用的方法数）
metric.rfc.name=类的响应
metric.rfc_distribution.description=类的分布 / RFC(Response for Class)
metric.rfc_distribution.name=类的分布 / RFC(Response for Class)
metric.security_hotspots.description=安全热点
metric.security_hotspots.full_description=安全敏感代码需要手工审核，以便判断是否存在安全漏洞。
metric.security_hotspots.name=安全热点
metric.security_hotspots_reviewed.description=安全热点审查比例
metric.security_hotspots_reviewed.name=安全热点审查
metric.security_hotspots_reviewed_status.description=安全已审查状态
metric.security_hotspots_reviewed_status.name=安全已审查状态
metric.security_hotspots_to_review_status.description=安全未审查状态
metric.security_hotspots_to_review_status.name=安全未审查状态
metric.security_rating.description=安全等级
metric.security_rating.name=安全等级
metric.security_rating.extra_short_name=等级
metric.security_rating.tooltip.A=没有漏洞时，安全等级为 A。
metric.security_rating.tooltip.B=至少有一个次要漏洞，安全等级为 A。
metric.security_rating.tooltip.C=至少有一个主要漏洞，安全等级为 B。
metric.security_rating.tooltip.D=至少有一个严重漏洞，安全等级为 C。
metric.security_rating.tooltip.E=至少有一个阻断漏洞，安全等级为 D。
metric.security_remediation_effort.description=安全修复工作
metric.security_remediation_effort.name=安全修复工作
metric.security_remediation_effort.extra_short_name=修复工作
metric.security_review_rating.description=安全审查评级
metric.security_review_rating.name=安全审查评级
metric.security_review_rating.extra_short_name=审查评级
metric.security_review_rating.tooltip.A=已审查安全热点超过 80%，安全审查评级为 A。
metric.security_review_rating.tooltip.B=已审查安全热点不足 80%，安全审查评级为 B。
metric.security_review_rating.tooltip.C=已审查安全热点不足 70%，安全审查评级为 C。
metric.security_review_rating.tooltip.D=已审查安全热点不足 50%，安全审查评级为 D。
metric.security_review_rating.tooltip.E=已审查安全热点不足 30%，安全审查评级为 E。
metric.skipped_tests.description=单元测试忽略数
metric.skipped_tests.name=单元测试忽略数
metric.skipped_tests.short_name=忽略
metric.sqale_debt_ratio.description=实际技术债务与从头开发全部源码的成本的比率。
metric.sqale_debt_ratio.name=技术债比率
metric.sqale_debt_ratio.short_name=债务率
metric.sqale_index.description=解决组件的所有问题并满足所有要求所需要的总工作量（以小时为单位）。
metric.sqale_index.name=技术债务
metric.sqale_index.short_name=负债
metric.sqale_rating.description=基于技术债务比率的 A 至 E 评级。
metric.sqale_rating.name=可维护性评级
metric.sqale_rating.extra_short_name=评级
metric.sqale_rating.tooltip=技术债比率大于 {1} 时，可维护性评级为 {0}。
metric.sqale_rating.tooltip.A=技术债比率小于 {0} 时，可维护性评级为 A。
metric.statements.description=语句数
metric.statements.name=语句
metric.suspect_lcom4_density.description=LCOM4(逻辑凝聚力) > 1 的类的密度
metric.suspect_lcom4_density.name=疑似 LCOM4 密度值
metric.tests.description=单元测试的数量
metric.tests.name=单元测试
metric.test_data.description=单元测试详情
metric.test_data.name=单元测试详情
metric.test_errors.description=单元测试错误数
metric.test_errors.name=单元测试错误数
metric.test_errors.short_name=错误
metric.test_execution_time.description=单元测试持续时间
metric.test_execution_time.name=单元测试持续时间
metric.test_execution_time.short_name=持续时间
metric.test_failures.description=单元测试失败数
metric.test_failures.name=单元测试失败数
metric.test_failures.short_name=失败
metric.test_success_density.description=单元测试成功比例
metric.test_success_density.name=单元测试成功 (%)
metric.test_success_density.short_name=成功
metric.uncovered_conditions.description=未覆盖分支
metric.uncovered_conditions.name=未覆盖分支
metric.uncovered_lines.description=未覆盖的代码
metric.uncovered_lines.name=未覆盖的代码
metric.usability.description=可用性
metric.usability.name=可用性
metric.violations.description=问题
metric.violations.name=问题
metric.violations.short_name=问题
metric.vulnerabilities.description=漏洞
metric.vulnerabilities.name=漏洞
metric.wont_fix_issues.description=不修复的问题
metric.wont_fix_issues.name=不修复的问题

#------------------------------------------------------------------------------
#
# GLOBAL PERMISSIONS
#
#------------------------------------------------------------------------------
global_permissions.permission=权限
global_permissions.users=用户
global_permissions.groups=组
global_permissions.administer=管理员
global_permissions.creator=创建人
global_permissions.admin=系统管理员
global_permissions.admin.desc=能执行所有管理功能，比如：全局配置和默认仪表盘的定制。
global_permissions.profileadmin=质量配置管理员
global_permissions.profileadmin.desc=能执行质量配置的任何功能。
global_permissions.gateadmin=管理质量阈
global_permissions.gateadmin.desc=可以在质量阈上执行所有操作。
global_permissions.scan=执行分析
global_permissions.scan.desc=能执行分析，进行执行分析所需的所有设置，包含 scm 账号密码，jira 账号密码，等等这类安全设置。
global_permissions.provisioning=置备项目
global_permissions.provisioning.desc=可以在第一次分析项目之前初始化项目的结构。
global_permissions.filter_by_x_permission=根据 "{0}" 权限搜索
global_permissions.restore_access=恢复访问
global_permissions.restore_access.message=你将获取这个项目的 {浏览} 和 {管理} 权限。是否继续？
global_permissions.applicationcreator=应用
global_permissions.applicationcreator.desc=允许创建应用。
global_permissions.portfoliocreator=视图
global_permissions.portfoliocreator.desc=允许创建视图。

#------------------------------------------------------------------------------
#
# PROJECTS PERMISSIONS
#
#------------------------------------------------------------------------------
projects_role.criteria.name=名称包含
projects_role.criteria.key=标识包含
projects_role.role=角色关系
projects_role.groups=群组
projects_role.admin=管理员
projects_role.admin.desc=查看项目配置，执行管理任务。（用户也需要“浏览”权限）
projects_role.issueadmin=问题管理员
projects_role.issueadmin.desc=对问题进行额外编辑：设置误判/不会修复，修改问题严重级别。（用户也需要“浏览”权限）
projects_role.securityhotspotadmin=管理安全热点
projects_role.securityhotspotadmin.desc=通过“安全热点”检测漏洞。驳回，清理，接受，重开“安全热点”（用户也需要“浏览”权限）
projects_role.user=浏览
projects_role.user.desc=访问一个项目，浏览它的指标，创建/编辑它的问题。
projects_role.codeviewer=查看源码
projects_role.codeviewer.desc=查看项目的源代码。（用户也需要“浏览”权限）
projects_role.scan=执行分析
projects_role.scan.desc=可以获取执行分析的所有配置（包含安全配置，比如密码），并可以将分析结果推送至 SonarQube 服务器。
projects_role.bulk_change=批量修改
projects_role.apply_template=应用权限模板
projects_role.apply_template_to_xxx=应用权限模板至 "{0}"
projects_role.apply_template.success=权限模板已成功应用。
projects_role.no_projects=这里尚未有应用了权限模板的项目。
projects_role.turn_x_to_public=将 "{0}" 改为公共
projects_role.turn_project_to_public.TRK=项目修改为公共
projects_role.turn_project_to_public.VW=视图修改为公共
projects_role.turn_project_to_public.APP=应用修改为公共
projects_role.are_you_sure_to_turn_project_to_public.TRK=确认把项目修改为公共？
projects_role.are_you_sure_to_turn_project_to_public.warning.TRK=所有人都可以浏览并看到项目源码。
projects_role.are_you_sure_to_turn_project_to_public.VW=确认把视图修改为公共？
projects_role.are_you_sure_to_turn_project_to_public.warning.VW=所有人都能浏览。
projects_role.are_you_sure_to_turn_project_to_public.APP=确认把应用修改为公共？
projects_role.are_you_sure_to_turn_project_to_public.warning.APP=所有人都能浏览。
projects_role.public_projects_warning=默认会给所有人授予这个公开项目的权限（游客和登录用户）。所以，这个选择只会作用于私人项目。
projects_role.applicationcreator=创建应用
projects_role.applicationcreator.desc=允许非系统管理员创建应用。
projects_role.portfoliocreator=创建视图
projects_role.portfoliocreator.desc=允许非系统管理员创建视图。



#------------------------------------------------------------------------------
#
# PERMISSION TEMPLATES
#
#------------------------------------------------------------------------------
permission_templates=权限模板
permission_templates.page=权限模板
permission_templates.page.description=管理项目模板的权限。默认模板会应用到所有新项目上。
permission_templates.set_default=设置默认
permission_templates.set_default_for=设置默认为
permission_template.new_template=新权限模板
permission_template.delete_confirm_title=删除权限模板
permission_template.do_you_want_to_delete_template_xxx=确认删除权限模板 "{0}" 吗？
permission_template.edit_template=修改权限模板
permission_template.edit_permissions=修改权限：{0}
permission_template.key_pattern=项目标识模式
permission_template.key_pattern.description=需要正确的正则表达式
permission_template.default_for=默认为 {0}
permission_templates.project_creators=项目创建人
permission_templates.project_creators.explanation=创建新项目时，项目创建者会获得此权限。
permission_templates.bulk_apply_permission_template=批量应用权限模板
permission_templates.bulk_apply_permission_template.apply_to_selected=即将把选中的权限赋予 {0} 条选中的数据。
permission_templates.bulk_apply_permission_template.apply_to_all=即将把选中的权限授予 {0} 条数据。
permission_templates.select_to_delete=至少选择一项
permission_templates.delete_selected=删除所有数据

#------------------------------------------------------------------------------
#
# Promotion
#
#------------------------------------------------------------------------------

promotion.sonarlint.title=充分利用 SonarQube！
promotion.sonarlint.content=使用 SonarLint 获得整个体系的优势，借助免费 IDE 插件尽早发现并解决问题。把 SonarLink 和 SonarQube 连接起来，自动同步规则配置和问题状态。

#------------------------------------------------------------------------------
#
# Sonarlint
#
#------------------------------------------------------------------------------

sonarlint-connection.request.title=允许 SonarLint 连接？
sonarlint-connection.request.description={0} SonarLint 请求访问 SonarQube.
sonarlint-connection.request.description2=是否允许 SonarLint 连接？将创建一个令牌并分享给 SonarLint。
sonarlint-connection.request.action=允许连接

sonarlint-connection.token-error.title=令牌创建失败
sonarlint-connection.token-error.description=SonarQube 无法创建令牌
sonarlint-connection.token-error.description2=返回 IDE 重试，或访问 SonarQube {link} 手工创建新用户令牌。
sonarlint-connection.token-error.description2.link=安全令牌

sonarlint-connection.connection-error.title=令牌创建成功
sonarlint-connection.connection-error.description=令牌已创建：
sonarlint-connection.connection-error.token-name=令牌名称
sonarlint-connection.connection-error.token-value=令牌值
sonarlint-connection.connection-error.next-steps=下一步
sonarlint-connection.connection-error.step1=复制上述令牌。
sonarlint-connection.connection-error.step2=返回 IDE，把令牌粘贴进 SonarLint。

sonarlint-connection.success.title=SonarLint 连接即将成功！
sonarlint-connection.success.description=新令牌 '{0}' 已创建，并发送给 IDE 中的 SonarLint。
sonarlint-connection.success.last-step=最后一步
sonarlint-connection.success.step=返回 IDE 完成设置。

sonarlint-connection.unspecified-ide=未指定 IDE

#------------------------------------------------------------------------------
#
# HELP
#
#------------------------------------------------------------------------------
formatting.helplink=格式化帮助

#------------------------------------------------------------------------------
#
# KEYBOARD SHORTCUTS
#
#------------------------------------------------------------------------------

keyboard_shortcuts.title=快捷键
keyboard_shortcuts.disable_link=禁用快捷键
keyboard_shortcuts.shortcut=快捷键
keyboard_shortcuts.action=操作
keyboard_shortcuts.global.title=全局
keyboard_shortcuts.global.search=打开搜索栏
keyboard_shortcuts.global.open_shortcuts=打开这个面板
keyboard_shortcuts.code_page.title=代码页
keyboard_shortcuts.code_page.select_files=选择文件
keyboard_shortcuts.code_page.open_file=打开文件
keyboard_shortcuts.code_page.back=返回列表
keyboard_shortcuts.issues_page.title=问题页
keyboard_shortcuts.issues_page.navigate=切换问题
keyboard_shortcuts.issues_page.source_code=从问题列表进入源代码
keyboard_shortcuts.issues_page.back=返回列表
keyboard_shortcuts.issues_page.navigate_locations=进入问题位置
keyboard_shortcuts.issues_page.switch_flows=切换流程
keyboard_shortcuts.issues_page.transition=进行问题转换
keyboard_shortcuts.issues_page.assign=分配问题
keyboard_shortcuts.issues_page.assign_to_me=分配给自己
keyboard_shortcuts.issues_page.severity=修改问题严重性
keyboard_shortcuts.issues_page.comment=评论问题
keyboard_shortcuts.issues_page.submit_comment=提交评论
keyboard_shortcuts.issues_page.tags=修改问题标签
keyboard_shortcuts.measures_page.title=指标页
keyboard_shortcuts.measures_page.select_files=选择文件
keyboard_shortcuts.measures_page.open_file=打开文件
keyboard_shortcuts.measures_page.back=返回列表
keyboard_shortcuts.rules_page.title=规则页
keyboard_shortcuts.rules_page.navigate=切换规则
keyboard_shortcuts.rules_page.rule_details=从规则列表进入规则详情
keyboard_shortcuts.rules_page.back=返回列表


#------------------------------------------------------------------------------
#
# DURATION
#
#------------------------------------------------------------------------------
duration.seconds=小于一分钟
duration.minute=大约一分钟
duration.minutes={0} 分钟
duration.hour=大约一小时
duration.hours={0} 小时
duration.day=一天
duration.days={0} 天
duration.month=大约一个月
duration.months={0} 月
duration.year=大约一年
duration.years={0} 年


#------------------------------------------------------------------------------
#
# COMPONENT VIEWER
#
#------------------------------------------------------------------------------
component_viewer.measure_section.unit_tests=单测

component_viewer.transition.covers=覆盖
component_viewer.transition.duplication=重复

component_viewer.tests.ordered_by=排序
component_viewer.tests.duration=持续时间
component_viewer.tests.test_name=名称
component_viewer.tests.status=状态

component_viewer.x_lines_are_covered=覆盖了 {0} 行
component_viewer.details=详情
component_viewer.show_raw_source=显示源文件
component_viewer.more_actions=更多操作
component_viewer.new_window=在新窗口打开
component_viewer.open_in_workspace=打开文件
component_viewer.open_in_workspace_X=打开 {0}
component_viewer.copy_permalink=复制永久链接
component_viewer.covered_lines=覆盖行
component_viewer.show_details=显示详情
component_viewer.file_measures=文件指标
component_viewer.show_all_measures=显示所有指标
component_viewer.no_component=组件已删除或不存在。
component_viewer.copy_path_to_clipboard=复制文件路径到粘贴板
component_viewer.action_menu=文件菜单

source_viewer.view_all_issues=查询该文件所有问题
source_viewer.expand_all_lines=显示所有代码
source_viewer.covered=单元测试已覆盖
source_viewer.not_covered=单元测试未覆盖
source_viewer.conditions=条件
source_viewer.line_X=行：{0}
source_viewer.click_for_scm_info=点击查看 SCM 信息
source_viewer.author_X=作者：{0}
source_viewer.click_to_copy_filepath=把文件路径复制至粘贴板

source_viewer.tooltip.duplicated_line=重复行。点击查看重复代码块。
source_viewer.tooltip.duplicated_block=重复代码块。点击查看详情。
source_viewer.tooltip.covered=单元测试完全覆盖。点击查看详情。
source_viewer.tooltip.covered.conditions=完全覆盖 ({0} 个条件)。
source_viewer.tooltip.partially-covered=单元测试部分覆盖。点击查看详情。
source_viewer.tooltip.partially-covered.conditions=部分覆盖 ({0}/{1} 条件)。
source_viewer.tooltip.uncovered=单元测试未覆盖。
source_viewer.tooltip.uncovered.conditions=未覆盖 ({0} 个条件)。
source_viewer.tooltip.no_information_about_tests=没有关于测试文件的更多信息。
source_viewer.tooltip.scm.commited_on=提交
source_viewer.tooltip.scm.revision=版本

source_viewer.issues_on_line.multiple_issues=此行有多个问题
source_viewer.issues_on_line.issue_of_type_X=此行有一个 {0}
source_viewer.issues_on_line.X_issues_of_type_Y=此行有 {0} {1}
source_viewer.issues_on_line.show=点击显示此行所有问题
source_viewer.issues_on_line.hide=点击隐藏此行所有问题

source_viewer.load_more_code=加载更多代码
source_viewer.loading_more_code=加载更多代码...

source_viewer.expand_above=展开上层
source_viewer.expand_below=展开下层

#------------------------------------------------------------------------------
#
# WORKSPACE
#
#------------------------------------------------------------------------------
workspace.minimize=最小化
workspace.full_window=放大至全屏
workspace.normal_size=缩小至正常大小
workspace.close=由打开文件中删除
workspace.no_rule=此规则已删除或不存在。

#------------------------------------------------------------------------------
#
# MARKETPLACE
#
#------------------------------------------------------------------------------
marketplace.page=应用市场
marketplace.page.description=发现并安装新功能
marketplace.page.description_best_edition=此版本包括 SonarQube-SonarLint 生态系统的所有功能。
marketplace.page.you_are_running.community=正在运行社区版。
marketplace.page.you_are_running.developer=正在运行开发版。
marketplace.page.you_are_running.enterprise=正在运行企业版。
marketplace.page.you_are_running.datacenter=正在运行数据中心版。
marketplace.page.plugins=插件
marketplace.page.plugins.description=应用市场中的插件不是由 SonarSource 提供或进行技术支持。请直接联系对应的维护人获取支持。
marketplace.page.plugins.description2=安装插件是一个手工操作，请参考 {link}。
marketplace.page.plugins.description2.link=文档
marketplace.plugin_list.no_plugins.all=没有可安装或更新的插件
marketplace.plugin_list.no_plugins.installed=未安装插件
marketplace.plugin_list.no_plugins.updates=没有需要更新的插件
marketplace.instance_needs_to_be_restarted_to={instance} 需要重启，来
marketplace.install_x_plugins=安装 {nb} 插件
marketplace.update_x_plugins=更新 {nb} 插件
marketplace.uninstall_x_plugins=卸载 {nb} 插件
marketplace.not_activated=更新中心未启用。
marketplace.all=全部
marketplace.installed=已安装
marketplace.updates_only=仅更新
marketplace.restart=重启
marketplace.revert=撤销
marketplace.install=安装
marketplace.upgrade_to_x=升级至 {0}
marketplace.downgrade_to_x=降级至 {0}
marketplace.installed=已更新
marketplace.installing=安装中...
marketplace.upgrade=升级
marketplace.downgrade=降级
marketplace.checking_license=检查协议...
marketplace._installed=已安装
marketplace.available_under_commercial_license=在商业版本下可用
marketplace.learn_more=了解更新
marketplace.request_free_trial=申请免费试用版
marketplace.homepage=首页
marketplace.issue_tracker=任务跟踪器
marketplace.licensed_under_x=授权协议 {license}
marketplace.developed_by_x=由 {organization} 开发
marketplace.install_pending=等待安装
marketplace.update_pending=等待更新
marketplace.uninstall_pending=等待卸载
marketplace.requires_restart=需要重启
marketplace.updates=更新
marketplace.update_status.COMPATIBLE=兼容
marketplace.update_status.INCOMPATIBLE=不兼容
marketplace.update_status.REQUIRES_SYSTEM_UPGRADE=需要系统升级
marketplace.update_status.DEPS_REQUIRE_SYSTEM_UPGRADE=某些依赖需要系统更新
marketplace.installing_this_plugin_will_also_install_x=安装此插件，将会同时安装：{0}
marketplace.update_to_x=更新至 {0}
marketplace.uninstall=卸载
marketplace.i_accept_the=我接受
marketplace.terms_and_conditions=条款和条件
marketplace.release_notes=发布日志
marketplace.how_to_setup_cluster_url=希望了解集群的更多配置。参考 {url} 中的文档。
marketplace.search=根据特性或分类搜索...

marketplace.risk_consent.title=安装插件
marketplace.risk_consent.description=安装非 SonarSource 提供的插件，需要自担风险。SonarSource 对这些插件的安装和使用都不承担责任。
marketplace.risk_consent.installation=确认风险后，你可以直接通过下面列表安装插件。
marketplace.risk_consent.action=我了解风险

plugin_risk_consent.title=安装插件
plugin_risk_consent.description=检测到一个插件。
plugin_risk_consent.description2=安装非 SonarSource 提供的插件，需要自担风险。SonarSource 对这些插件的安装和使用都不承担责任。
plugin_risk_consent.action=我了解风险

#------------------------------------------------------------------------------
#
# BACKGROUND TASKS
#
#------------------------------------------------------------------------------
component_navigation.status.failed=最后一次后台作业失败。
component_navigation.status.failed_X={type} 已失败。
component_navigation.status.failed.admin.link=最后一次后台作业失败。更多信息请查看 {url}。
component_navigation.status.failed_X.admin.link={type} 失败。更多信息请查看 {url}。
component_navigation.status.failed.admin.help=最后一次后台作业失败。更多信息请点击下面菜单，"{stacktrace}"。
component_navigation.status.failed_X.admin.help={type} 失败。更多信息请点击下面菜单，"{stacktrace}"。
component_navigation.status.failed_branch=项目 ({branch}) 最近一次后台作业失败了。
component_navigation.status.failed_branch_X=项目 ({branch}) 最后一次 {type} 失败了。
component_navigation.status.failed_branch.admin.link=项目 ({branch}) 最近一次后台作业失败了。更多信息参考 {url} 。
component_navigation.status.failed_branch_X.admin.link=项目 ({branch}) 最近一次 {type} 失败了。更多信息参考 {url} 。
component_navigation.status.failed_branch.admin.help=项目 ({branch}) 最近一次后台作业失败了。更多信息请点击下面菜单，"{stacktrace}"。
component_navigation.status.failed_branch_X.admin.help=项目 ({branch}) 最近一次 {type} 失败了。更多信息请点击下面菜单，"{stacktrace}"。
component_navigation.status.pending=有一个等待中的后台作业。
component_navigation.status.pending_X=有一个等待中的 {type}。
component_navigation.status.pending.admin.link=有一个等待中的后台作业。更多信息请查看 {url}。
component_navigation.status.pending_X.admin.link=有一个等待中的 {type}。更多信息请查看 {url}。
component_navigation.status.pending.admin.help=有一个等待中的后台作业。
component_navigation.status.pending_X.admin.help=有一个等待中的 {type}。
component_navigation.status.in_progress=有一个执行中的后台作业
component_navigation.status.in_progress_X=有一个执行中的 {type}。
component_navigation.status.in_progress.admin.link=有一个执行中的后台作业。更多信息请查看 {url}。
component_navigation.status.in_progress_X.admin.link=有一个执行中的 {type}。更多信息请查看 {url}。
component_navigation.status.in_progress.admin.help=有一个执行中的后台作业。
component_navigation.status.in_progress_X.admin.help=有一个执行中的 {type}。
component_navigation.status.last_blocked_due_to_bad_license_X=上次分析因为非法授权被阻塞了，现在授权已经正常了。请重新分析 {0}。

component_navigation.last_analysis_had_warnings=最近一次分析出现 {warnings}
component_navigation.x_warnings={warningsCount} {warningsCount, plural, one {警告} other {警告}}

component_navigation.pr_deco.error_detected_X=发现配置问题。SonarQube 实例无法进行拉取请求装饰。{action}
component_navigation.pr_deco.action.check_project_settings=请检查项目配置。
component_navigation.pr_deco.action.contact_project_admin=请联系系统管理员。

background_task.status.ALL=所有
background_task.status.PENDING=待定
background_task.status.IN_PROGRESS=执行中
background_task.status.SUCCESS=成功
background_task.status.FAILED=失败
background_task.status.CANCELED=取消
background_task.status.ALL_EXCEPT_PENDING=所有（不包含待定）

background_task.type.ALL=所有
background_task.type.REPORT=项目分析
background_task.type.DEV_REFRESH=开发者分析
background_task.type.DEV_PURGE=清除开发者
background_task.type.ISSUE_SYNC=重新加载项目数据
background_task.type.APP_REFRESH=重新计算
background_task.type.PROJECT_EXPORT=导出项目
background_task.type.PROJECT_IMPORT=导入项目
background_task.type.AUDIT_PURGE=清理审计日志
background_task.type.REPORT_SUBMIT=提交报告邮件

background_tasks.page=后台任务
background_tasks.page.description=服务器正在处理批量分析提交的报告。此页面可以监控等待执行的报告队列，同时可以访问过去分析的历史。

background_tasks.currents_filter.ALL=全部
background_tasks.currents_filter.ONLY_CURRENTS=只显示最新分析

background_tasks.date_filter.ALL=所有时间
background_tasks.date_filter.TODAY=今天
background_tasks.date_filter.CUSTOM=自定义

background_tasks.table.status=状态
background_tasks.table.task=任务
background_tasks.table.id=编号
background_tasks.table.submitted=提交
background_tasks.table.submitter=提交人
background_tasks.table.started=开始
background_tasks.table.finished=完成
background_tasks.table.duration=持续时间

background_tasks.filter_by_component_x=根据组件 "{0}" 过滤
background_tasks.cancel_task=取消任务
background_tasks.cancel_task.text=是否确认取消此待处理的任务？
background_tasks.cancel_all_tasks=取消所有待定任务
background_tasks.cancel_all_tasks.text=是否确认取消所有待处理的任务？
background_tasks.cancel_all_tasks.submit=全部取消
background_tasks.scanner_context=扫描环境
background_tasks.show_scanner_context=显示扫描环境
background_tasks.show_stacktrace=显示错误详情
background_tasks.show_warnings=显示警告
background_tasks.error_message=错误信息
background_tasks.error_stacktrace=错误详情
background_tasks.pending=待定
background_tasks.pending_time=等待时间
background_tasks.pending_time.description=最老的后台作业等待执行的时间。
background_tasks.failures=仍然失败

background_tasks.number_of_workers=工作线程数量：
background_tasks.number_of_workers.warning=垂直扩展服务器之前就配置更多工作线程，反而是降低性能。
background_tasks.change_number_of_workers=修改 CE 工作线程：
background_tasks.change_number_of_workers.hint=对于大型项目进行分析报告，增加计算引擎的工作线程可以让你充分利用多核服务器的计算引擎内存（垂直扩展）。
background_tasks.add_more_workers=增加工作线程加速分析
background_tasks.add_more_workers.text=使用企业版增加计算引擎工作线程的数量。
background_tasks.search_by_task_or_component=搜索任务或组件
background_tasks.failing_count=最近执行的失败的分析报告的项目数量


#------------------------------------------------------------------------------
#
# Project Dump
#
#------------------------------------------------------------------------------
project_dump.page=导入/导出
project_dump.page.description=三步把项目从一个 SonarQube 实例移动到另一个实例：导出项目，把生成的导出文件复制到目标服务器，在目标 SonarQube 实例的对应业务导入文件。
project_dump.page.description_without_import=导出项目问题，指标和指标历史，再导入到企业版或更高级的同版本配置的实例。导出文件会生成到本地文件系统。需要复制到需要导入的目标文件系统下。
project_dump.refresh=刷新
project_dump.see_details=查看详情
project_dump.export=导出
project_dump.do_export=导出
project_dump.can_not_export=无法导出此项目，因为尚未执行过分析。
project_dump.pending_export=导出已进入计划 {0}，等待执行。
project_dump.in_progress_export=导出执行中，开始于 {0}。
project_dump.failed_export=导出失败。请重试。
project_dump.latest_export_available=最新项目导出已生成至 {0}。对应目录：
project_dump.export_available=项目导出文件已生成。对应目录：
project_dump.export_form_description=把项目导出至文件系统。导出文件需要手工复制至目标服务器。
project_dump.import=导入
project_dump.do_import=导入
project_dump.import_success=项目成功导入至 {0}。
project_dump.can_not_import=项目无法导入，因为已经包含了一些数据。
project_dump.no_file_to_import=项目无法导入，因为找不到导出文件。
project_dump.pending_import=导入已进入计划 {0}，等待执行。
project_dump.in_progress_import=导人执行中，开始于 {0}。
project_dump.failed_import=导入失败。请重试。
project_dump.import_form_description=找到此项目的导出文件。可以点击下面按钮进行导入。
project_dump.import_form_description_disabled=项目无法导入。只有企业版支持此功能。

#------------------------------------------------------------------------------
#
# SYSTEM
#
#------------------------------------------------------------------------------
system.application_nodes_title=应用节点
system.are_you_sure_to_restart=确认重启服务器？
system.cluster_log_level.info=对所有应用服务器应用修复，除了搜索节点依赖。
system.copy_id_info=复制 ID 信息
system.current_health_of_x=当前健康状态 {0}
system.current_health.green=正常状态
system.current_health.yellow=启动中状态
system.current_health.red=下线状态
system.download_logs=下载日志
system.download_system_info=下载系统信息
system.download_x=下载 {0}
system.forcing_shutdown_not_recommended=不建议强制关闭，可能会中断正在执行的分析报告。
system.hide_intermediate_versions=隐藏中间版本
system.how_to_upgrade=如何升级？
system.latest_version=最新版本
system.latest_patch=补丁发布
system.lts_version=LTS 版本
system.log_level.warning=当前级别会影响性能。请确认在你调试完改回 INFO 级别。注意，当重启服务器后，级别会自动重置为 sonar.properties 中的配置。
system.log_level.warning.short=当前级别会影响性能，改回 INFO 级别。
system.log_level.info=不会修改搜索的配置。
system.logs_level=日志级别
system.new_version_available=发现新版本 SonarQube。
system.see_whats_new=了解最新更新。
system.release_notes=发布日志
system.released_x=发布 {0}
system.restart_in_progress=正在重启
system.restart_server=重启服务器
system.instance_restarting=正在重启 {instance}。已完成的链接： {link} 。
system.search_nodes_title=搜索节点
system.see_sonarqube_downloads=查看所有 SonarQube 下载
system.not_production_database_warning=server ID 仅用于内嵌数据库，需要谨慎考虑。建议为长久使用配置一个外部数据库，再申请许可证。
system.server_id=服务器 ID
system.set_log_level=设置日志级别
system.show_intermediate_versions=显示中间版本
system.system_upgrade=新更新发布
system.version=版本
system.version_is_availble=发现 {version}


#------------------------------------------------------------------------------
#
# OVERVIEW
#
#------------------------------------------------------------------------------
overview.failed_conditions=失败条件
overview.X_more_failed_conditions={0} 条更多失败条件
overview.X_conditions_failed={0} 条条件失败
overview.fix_failed_conditions_with_sonarlint=你可以在 IDE 中使用 {link} 修复问题以避免质量阈失败。此功能由连接模式提供。
overview.quality_gate=质量阈状态
overview.quality_gate.help=质量阈是一系列基于指标的布尔表达式。它可以帮助我们实时了解项目是否已经满足生产要求了。如果当前状态为未通过，可以参考哪个指标导致了问题，和需要达标的数值。
overview.quality_gate_failed_with_x={0} 个错误
overview.quality_gate_code_clean=代码没有问题！
overview.quality_gate_all_conditions_passed=所有条件都通过了。
overview.you_should_define_quality_gate=应该为此项目定义一个质量阈。
overview.quality_gate.ignored_conditions=因为代码太少，有些新代码中的质量阈条件会被忽略。
overview.quality_gate.ignored_conditions.tooltip=分析周期开始时，如果只添加或修改很少代码，就很难达到期望的代码覆盖或重复级别。为了避免质量阈失效，如果工作量不大时，只有新代码超过 20 行时，才会计算新代码重复读和覆盖率的质量阈条件。
overview.quality_gate.conditions_on_new_code=只会在新代码中检查质量域中定义的条件。参考项目分配的 {link} 了解更多信息。
overview.quality_profiles=质量配置
overview.new_code_period_x=新代码：{0}
overview.max_new_code_period_from_x=最大新代码：{0}
overview.started_x=起始于 {0}
overview.new_code=新代码
overview.overall_code=全部代码
overview.previous_analysis_x=最近分析 {0}
overview.started_on_x=始于 {0}
overview.previous_analysis_on_x=最近分析于 {0}
overview.on_new_code=新代码
overview.on_new_code_long=新代码中的条件
overview.see_list_of_x_y_issues=查看列表 {0} {1}
overview.see_more_details_on_x_of_y=查看 {0} 到 {1} 的更多信息
overview.see_more_details_on_x_y=查看 {0} {1} 的更多信息
overview.about_this_portfolio=关于这个视图
overview.about_this_project.APP=关于这个应用
overview.about_this_project.TRK=关于这个项目
overview.project_activity.APP=应用活动
overview.project_activity.TRK=项目活动
overview.project_activity.click_to_see=点击查看项目活动
overview.external_links=扩展链接
overview.project_key.APP=应用标识
overview.project_key.TRK=项目标识
overview.project_key.click_to_copy=把标识复制到粘贴板
overview.activity=活动
overview.activity.graph_shows_data_for_x=此处通常显示 {0} 的历史数据。点击下方“活动”连接显示更多信息。
overview.recent_activity=最近活动
overview.measures=指标
overview.measures.empty_explanation=第二次分析分支后，会出现新代码的指标。
overview.measures.empty_link=参考 {learn_more_link} 了解代码清洁的信息。
overview.measures.same_reference.explanation=此分支配置为引用分支。不会有新代码。
overview.measures.bad_reference.explanation=此分支无法与引用分支比较。通过 SCM 或分析报告了解原因。
overview.measures.bad_setting.link=可以通过 {setting_link} 配置修复。
overview.measures.security_hotspots_reviewed=审查

overview.project.no_lines_of_code=项目没有包含代码。
overview.project.empty=空项目。
overview.project.branch_X_no_lines_of_code=分支 "{0}" 没有代码行。
overview.project.branch_X_empty=分支 "{0}" 是空的。
overview.project.main_branch_no_lines_of_code=主分支没有代码行。
overview.project.main_branch_empty=项目的主分支为空。
overview.project.branch_needs_new_analysis=分支数据不完整。重新执行分析进行更新。
overview.project.last_analysis.date_time=上次分析启动时间 {0}
overview.project.next_steps.set_up_pr_deco_and_ci.admin=要使用更多 SonarQube 功能，{link_ci}，在 {link_project_settings} 中设置 DevOps 平台集成。
overview.project.next_steps.set_up_pr_deco_and_ci=要使用更多 SonarQube 功能，{link_ci}，询问项目管理员设置 DevOps 平台集成。
overview.project.next_steps.set_up_pr_deco.admin=要使用更多 SonarQube 功能，在 {link_project_settings} 中设置 DevOps 平台集成。
overview.project.next_steps.set_up_pr_deco=要使用更多 SonarQube 功能，询问项目管理员设置 DevOps 平台集成。
overview.project.next_steps.set_up_ci=要使用更多 SonarQube 功能，{link}
overview.project.next_steps.links.project_settings=配置设置
overview.project.next_steps.links.set_up_ci=使用喜欢的 CI 进行分析

overview.coverage_on=覆盖
overview.coverage_on_X_lines=覆盖率，代码 {count} 行
overview.coverage_on_X_new_lines=覆盖率，新代码 {count} 行
overview.duplications_on=重复
overview.duplications_on_X_lines=重复率，代码 {count} 行
overview.duplications_on_X_new_lines=重复率，新代码 {count} 行

overview.period.previous_version=自从 {0}

# Old periods, necessary to display project that haven't been analyzed with new setting (MMF-1579)
overview.period.previous_version_only_date=自从上个版本
overview.period.previous_analysis=自从上次分析
overview.period.days=最近 {0} 天
overview.period.version=自从 {0}
overview.period.date=自从 {0}
overview.period.manual_baseline=自从 {0}

# New periods (MMF-1579)
overview.period.number_of_days=最近 {0} 天
overview.period.specific_analysis=自从 {0}
overview.period.reference_branch=比较 {0}

overview.gate.ERROR=失败
overview.gate.WARN=警告
overview.gate.OK=通过
overview.gate.view.no_alert=此视图已通过质量阈。
overview.gate.view.warnings=此视图已达到下列质量阈的警告条件：{0}。
overview.gate.view.errors=此视图已达到下列质量阈的错误条件：{0}。

overview.domain.duplications=重复
overview.domain.size=大小

overview.complexity_tooltip.function={0} 函数的复杂度为 {1}
overview.complexity_tooltip.file={0} 文件的复杂度为 {1}

overview.deprecated_profile=质量配置使用了 {0} 已废弃的规则，需要更新。
overview.deleted_profile=自从上次分析，删除了 {0} 。
overview.link_to_x_profile_y=前往 {0} 的配置 "{1}"

overview.badges.get_badge.TRK=获取视图徽章
overview.badges.get_badge.VW=获取面板徽章
overview.badges.get_badge.APP=获取应用徽章
overview.badges.title=徽章
overview.badges.description.TRK=在 README 或 website 中显示项目指标状态。选择样式：
overview.badges.description.VW=在 README 或 website 中显示视图指标状态。选择样式：
overview.badges.description.APP=在 README 或 website 中显示引用指标状态。选择样式：
overview.badges.metric=指标
overview.badges.options.colors.white=白色
overview.badges.options.colors.black=黑色
overview.badges.options.colors.orange=橘色
overview.badges.options.formats.md=Markdown
overview.badges.options.formats.url=图片网址
overview.badges.measure.alt=标准徽章
overview.badges.measure.description.TRK=这个徽章自动显示你的项目指标的当前状态。
overview.badges.measure.description.VW=这个徽章自动显示你的视图指标的当前状态。
overview.badges.measure.description.APP=这个徽章自动显示你的应用指标的当前状态。
overview.badges.quality_gate.alt=SonarCloud 质量阈徽章
overview.badges.quality_gate.description=这个徽章动态显示项目的当前质量阈的状态。
overview.badges.quality_gate.description.APP=这个徽章动态显示应用的当前质量阈的状态。
overview.badges.quality_gate.description.TRK=这个徽章动态显示项目的当前质量阈的状态。
overview.badges.quality_gate.description.VW=这个徽章动态显示视图的当前质量阈状态。
overview.badges.leak_warning=项目徽章会暴露你的安全率和其他指标。确保只在授信环境使用项目徽章。
overview.badges.renew=重置令牌
overview.badges.renew.description=如果项目徽章安全令牌被泄漏到不安全环境，可以执行重置：


#------------------------------------------------------------------------------
#
# WS API
#
#------------------------------------------------------------------------------
api_documentation.deprecation_tooltip=服务废弃后，还会在第一个 L.T.S. 版本中保留，会在第二个版本中删除。
api_documentation.internal_tooltip=风险自付；不会通知内部服务的修改和删除。
api_documentation.page=Web 接口
api_documentation.show_deprecated=显示废弃 API
api_documentation.show_internal=显示内部 API
api_documentation.possible_values=可能值
api_documentation.default_values=默认值
api_documentation.example_values=示例值
api_documentation.max_values=最大值
api_documentation.min_value=最小值
api_documentation.max_value=最大值
api_documentation.min_length=最小长度
api_documentation.max_length=最大长度
api_documentation.internal=内部
api_documentation.deprecated=废弃
api_documentation.deprecated_since_x=废弃自 {0}
api_documentation.will_be_removed_in_x=即将删除 {0}
api_documentation.parameters=参数
api_documentation.response_example=响应示例
api_documentation.changelog=修改日志
api_documentation.search=根据名称搜索...


#------------------------------------------------------------------------------
#
# DOCUMENTATION PAGE
#
#------------------------------------------------------------------------------
documentation.page=文档
documentation.page_title.sonarqube=SonarQube 文档
documentation.on_this_page=当前页
documentation.skip_to_nav=跳至文档导航


#------------------------------------------------------------------------------
#
# CODE
#
#------------------------------------------------------------------------------
code.open_component_page=打开组件页
code.search_placeholder=搜索文件和子项目...
code.search_placeholder.portfolio=搜索项目和子组合...
code.parent_folder=上级目录


#------------------------------------------------------------------------------
#
# COMPONENT MEASURES
#
#------------------------------------------------------------------------------
component_measures.details_are_not_available=暂时无法使用评估指标的信息。
component_measures.domain_x_overview={0} 总览
component_measures.domain_overview=总览
component_measures.files=文件
component_measures.show_metric_history=显示此指标的历史
component_measures.tab.tree=树
component_measures.tab.list=列表
component_measures.tab.treemap=树图
component_measures.view_as=显示为
component_measures.legend.color_x=颜色：{0}
component_measures.legend.size_x=大小：{0}
component_measures.legend.worse_of_x_y={0} 和 {1} 中更差的
component_measures.legend.help_x=显示或隐藏 {0} 比率的数据。
component_measures.legend.only_first_500_files=只显示前面 500 个文件的数据
component_measures.no_history=没有历史数据。
component_measures.not_found=未找到请求的指标。
component_measures.empty=无指标。
component_measures.to_select_files=选择文件
component_measures.to_navigate=跳转
component_measures.to_navigate_files=下一个/上一个文件
component_measures.hidden_best_score_metrics=还有 {0} 个评分为 {1} 的隐藏组件。
component_measures.skip_to_filters=跳至指标搜索

component_measures.overview.project_overview.facet=项目总览
component_measures.overview.project_overview.title=风险
component_measures.overview.project_overview.description=快速了解操作风险。绿色之外的颜色表示风险：包含 Bug 或漏洞。右上方的图像表示长期看来存在风险。左下侧的绿色气泡表示质量最佳。
component_measures.overview.Reliability.description=了解 Bug 的操作风险。气泡越红，Bug 越严重。气泡大小表示 Bug 的规模，气泡竖直位置反应了定位 Bug 的时间。底部的小绿气泡表示质量最佳。
component_measures.overview.Security.description=了解漏洞的操作风险。气泡越红，漏洞越严重。气泡大小表示漏洞的规模，气泡竖直位置反应了定位漏洞的时间。底部的小绿气泡表示质量最佳。
component_measures.overview.Maintainability.description=了解代码怪味长期风险。气泡越红，技术债务比率越高。气泡大小表示怪味的规模，气泡竖直位置反应了覆盖的缺失程度。底部的小绿气泡表示质量最佳。
component_measures.overview.Coverage.description=了解缺失测试覆盖的长期风险。气泡大小表示未覆盖行数，气泡竖直位置反映了覆盖的缺失程度。底部的小气泡表示质量最佳。
component_measures.overview.Duplications.description=了解重复代码的长期风险。气泡大小表示重复层度，气泡竖直位置反应了重复行数。底部的小气泡表示质量最佳。
component_measures.overview.see_data_as_list=将图表数据展示为列表

component_measures.domain_facets.Reliability.help=这个区域对应的代码，会遇到更多期望外的问题。
component_measures.domain_facets.Maintainability.help=这个区域对应的代码，会发现比预期更难维护。
component_measures.domain_facets.Security.help=这个区域对应的代码，会有被黑客攻击的可能。
component_measures.domain_facets.SecurityReview.help=这个区域对应的潜在安全风险，包含热点和审查状态。
component_measures.domain_facets.Complexity.help=应用的控制流是简单还是复杂。圈复杂度可以计算出达到全面覆盖需要的最少测试用例。认知复杂度对应这个应用是否很难被理解。

component_measures.facet_category.new_code_category=新代码
component_measures.facet_category.overall_category=总览
component_measures.facet_category.overall_category.estimated=合并后评估
component_measures.facet_category.tests_category=测试
component_measures.bubble_chart.zoom_level=当前缩放登记。滚动图表进行放大或缩小，或点击重置。
component_measures.not_all_measures_are_shown=未包含所有项目和应用
component_measures.not_all_measures_are_shown.help=无权访问所有项目或应用。会继续基于所有项目和应用进行计算指标。

#------------------------------------------------------------------------------
#
# EMBEDED DOCS
#
#------------------------------------------------------------------------------
embed_docs.documentation=文档
embed_docs.get_help=获得帮助
embed_docs.news=产品新闻
embed_docs.stay_connected=保持联系
embed_docs.suggestion=页面建议

#------------------------------------------------------------------------------
#
# GLOBAL FOOTER
#
#------------------------------------------------------------------------------
footer.community=社区
footer.contact_us=联系我们
footer.documentation=文档
footer.help=帮助
footer.license=LGPL v3
footer.news=新闻
footer.plugins=插件
footer.pricing=定价
footer.privacy=隐私
footer.production_database_explanation=内嵌数据库无法扩展，也无法升级到新版本的 SonarQube，并且不能支持将你的数据迁移至其他数据库引擎。
footer.production_database_warning=内嵌数据库只能用于测试场景
footer.security=安全
footer.status=状态
footer.terms=成员
footer.twitter=Twitter
footer.version_x=版本 {0}
footer.web_api=Web 接口


#------------------------------------------------------------------------------
#
# ONBOARDING
#
#------------------------------------------------------------------------------
onboarding.alm.azure=Azure DevOps 服务器
onboarding.alm.bitbucket=Bitbucket 服务器
onboarding.alm.bitbucketcloud=Bitbucket Cloud
onboarding.alm.gitlab=GitLab

onboarding.project_analysis.header=分析你的项目
onboarding.project_analysis.description=我们已经在 SonarCloud 初始化了你的项目，现在已准备好进行分析！
onboarding.project_analysis.guide_to_integrate_pipelines=按照指南来集成 Piplines

onboarding.create_project.setup_manually=手工设置
onboarding.create_project.select_method=希望如何项目？
onboarding.create_project.select_method.manually=想要测试一下或有高级需求？手工创建项目。
onboarding.create_project.select_method.devops_platform=希望使用所有 SonarQube 功能（比如仓库导入，拉取请求装饰）？通过喜欢的 DevOps 平台创建项目。
onboarding.create_project.select_method.no_alm_yet.admin=我们推荐设置一个 DevOps 平台，这样可以使用更多 SonarQube 功能。
onboarding.create_project.select_method.manual=手工
onboarding.create_project.select_method.azure=来自 Azure DevOps 服务器
onboarding.create_project.select_method.bitbucket=来自 Bitbucket 服务器
onboarding.create_project.select_method.github=来自 GitHub
onboarding.create_project.select_method.gitlab=来自 GitLab
onboarding.create_project.alm_not_configured=当前未启用
onboarding.create_project.alm_not_configured.admin=未进行全局配置
onboarding.create_project.check_alm_supported=检查是否生效
onboarding.create_project.project_key=项目标识
onboarding.create_project.project_key.description=最多 400 个字符。字符，数字，连字符，下划线，点或冒号。
onboarding.create_project.project_key.error.empty=至少输入一个字符。
onboarding.create_project.project_key.error.too_long=长度过长。
onboarding.create_project.project_key.error.invalid_char=包含非法字符。
onboarding.create_project.project_key.error.only_digits=标识只包含数字。
onboarding.create_project.project_key.taken=项目标识已被占用。
onboarding.create_project.display_name=显示名
onboarding.create_project.display_name.error.empty=请填写显示名称。
onboarding.create_project.display_name.description=最多 500 个字符
onboarding.create_project.pr_decoration.information=手工创建的项目无法使用 SonarQube DevOps 平台集成功能，需要在项目配置中手工启用。
onboarding.create_project.repository_imported=已导入： {link}
onboarding.create_project.see_project=查看项目
onboarding.create_project.search_repositories_by_name=查找指定开头的仓库名称...
onboarding.create_project.search_projects_repositories=查找项目和仓库
onboarding.create_project.search_repositories=搜索仓库
onboarding.create_project.select_repositories=选择仓库
onboarding.create_project.select_all_repositories=选择所有可用仓库
onboarding.create_project.from_bbs=来自 BitBucket 服务器

onboarding.create_application.key.description=如果指定，会用作应用标识而不是根据应用名称生成。只能使用字母、数字、破折号和下划线。

onboarding.create_project.pat_form.title.azure=允许 SonarQube 访问并列出你在 Azure DevOps 服务器的仓库
onboarding.create_project.pat_form.title.bitbucket=授予访问资源库的权限
onboarding.create_project.pat_form.title.bitbucketcloud=未仓库赋予权限
onboarding.create_project.pat_form.title.gitlab=授予访问项目的权限
onboarding.create_project.pat_form.help.azure=SonarQube 需要个人访问令牌来访问并列出 Azure DevOps 服务器上的仓库。
onboarding.create_project.pat_form.help.bitbucket=SonarQube 需要个人访问令牌与 Bitbucket 服务器通讯。令牌用来访问和列出仓库。
onboarding.create_project.pat_form.help.bitbucketcloud=SonarQube 需要 app 密码来访问来自 Bitbucket Cloud 的仓库。
onboarding.create_project.pat_form.help.gitlab=SonarQube 需要个人访问令牌与 GitLab 通讯。令牌用来访问和列出项目。
onboarding.create_project.pat_form.pat_required=请输出个人访问令牌
onboarding.create_project.pat_form.list_repositories=列出仓库
onboarding.create_project.select_method=希望如何创建项目？
onboarding.create_project.too_many_alm_instances_X=要求只有一个 {0} 配置。
onboarding.create_project.wrong_binding_count=为了使用此功能，需要只配置一个 {alm} 实例，但是没有找到配置。手工进行项目配置，或联系系统管理员。
onboarding.create_project.wrong_binding_count.admin=为了使用此功能，需要只配置一个 {alm} 实例，可以通过 {url} 进行配置。
onboarding.create_project.azure.no_url.admin=Azure DevOps 实例配置缺少一个 URL。当前无法导入项目。你可以对实例进行配置 {url}。
onboarding.create_project.azure.no_url=Azure DevOps 实例配置缺少一个 URL。当前无法导入项目。请联系系统管理员。
onboarding.create_project.enter_pat=输入个人访问令牌
onboarding.create_project.enter_pat.bitbucketcloud=输入 app 密码
onboarding.create_project.enter_username=输入 Bitbucket 帐号
onboarding.create_project.pat_incorrect.azure=无法验证个人访问令牌。
onboarding.create_project.pat_incorrect.bitbucket=个人令牌校验失败。
onboarding.create_project.pat_incorrect.bitbucketcloud=app 密码错误。
onboarding.create_project.pat_incorrect.gitlab=个人令牌校验失败。请确认范围正确并且未过期。
onboarding.create_project.pat_help.title=如何创建个人访问令牌？
onboarding.create_project.pat_help.bitbucketcloud.title=如何创建 app 密码？

onboarding.create_project.pat_help.instructions.azure=创建并提供 Azure DevOps 服务器 {link}。需要选择 {scope} 范围，我们才能显示能够分析的仓库列表。
onboarding.create_project.pat_help.instructions.link.azure=个人访问令牌

onboarding.create_project.pat_help.instructions=点击下面链接，在 {alm} 中创建令牌，把它复制到个人访问令牌控件里。
onboarding.create_project.pat_help.bitbucketcloud.instructions=点击下面链接创建 app 密码，把它复制粘贴到 app 密码控件中。
onboarding.create_project.pat_help.bitbucket.instructions=点击一下连接，进入 {menu}，点击 {button} 创建令牌，然后复制粘贴到个人访问令牌字段。
onboarding.create_project.pat_help.bitbucket.instructions.menu=HTTP 访问令牌
onboarding.create_project.pat_help.bitbucket.instructions.button=创建令牌


onboarding.create_project.pat_help.instructions2.bitbucket=设置名称，比如 "SonarQube"，选择下面的权限：
onboarding.create_project.pat_help.instructions2.bitbucketcloud=设置一个名称，比如 "SonarQube"，选择以下权限：


onboarding.create_project.pat_help.instructions_username.bitbucketcloud.title=如何找到帐号？
onboarding.create_project.pat_help.instructions_username.bitbucketcloud=在 Bitbucket 配置，点击下面链接获取帐号
onboarding.create_project.pat_help.instructions_username.bitbucketcloud.link=个人配置

onboarding.create_project.pat_help.link=创建个人访问令牌
onboarding.create_project.pat_help.bitbucketcloud.link=添加 app 密码
onboarding.create_project.pat_help.bbs_permission_projects=项目：{perm}
onboarding.create_project.pat_help.bbs_permission_repos=仓库：{perm}
onboarding.create_project.pat_help.read_permission=读取

onboarding.create_project.pat_help.instructions2.gitlab=设置名称，比如 "SonarQube"，选择下面的权限：
onboarding.create_project.pat_help.gitlab.read_api_permission=read_api

onboarding.create_project.no_bbs_projects=从 Bitbucket 服务器中读取不到任何项目。联系系统管理员，或者 {link}。
onboarding.create_project.no_bbs_repos=找不到项目对应的仓库。联系系统管理员，或者 {link}。
onboarding.create_project.update_your_token=更新个人访问令牌
onboarding.create_project.no_bbs_repos.filter=找不到符合条件的仓库
onboarding.create_project.only_showing_X_first_repos=只显示前 {0} 个仓库。如果找不到期望的仓库，请使用上面的搜索条件。
onboarding.create_project.import_selected_repo=设置选择的仓库
onboarding.create_project.go_to_project=进入项目
onboarding.create_project.see_on_github=在 GitHub 上查看项目

onboarding.create_project.search_prompt=搜索项目
onboarding.create_project.set_up=设置
onboarding.create_project.azure.title=想要配置哪个 Azure DevOps 服务器仓库？
onboarding.create_project.azure.no_projects=无法从 Azure DevOps 服务器获取项目。请联系系统管理员，或 {link}。
onboarding.create_project.azure.search_results_for_project_X=搜索结果 "{0}"
onboarding.create_project.azure.no_repositories=无法从此项目获取仓库。请联系系统管理员，或 {link}。
onboarding.create_project.azure.no_results=找不到匹配的仓库。
onboarding.create_project.bitbucketcloud.title=希望设置哪个 Bitbucket Cloud 仓库？
onboarding.create_project.bitbucketcloud.no_projects=无法从 Bitbucket 获取项目。联系系统管理员，或 {link}。
onboarding.create_project.bitbucketcloud.link=前往 Bitbucket
onboarding.create_project.github.title=期望配置哪个 GitHub 仓库？
onboarding.create_project.github.choose_organization=选择组织
onboarding.create_project.github.warning.title=无法连接 GitHub
onboarding.create_project.github.warning.message=请联系管理员配置 GitHub 集成功能。
onboarding.create_project.github.warning.message_admin=请确认正确配置了 GitHub 实例，通过 {link} 由一个仓库创建新项目。
onboarding.create_project.github.warning.message_admin.link=ALM 集成配置
onboarding.create_project.github.no_orgs=无法通过 key 记载任何组织。请联系管理员。
onboarding.create_project.github.no_orgs_admin=无法加载任何组织。确认已经在组织中安装了 GitHub App，并检查 {link} 中的 GitHub 实例配置。
onboarding.create_project.gitlab.title=配置哪个 GitLab 项目？
onboarding.create_project.gitlab.no_projects=无法从 Gitlab 获取项目。请联系系统管理员，或 {link}。
onboarding.create_project.gitlab.link=参考 GitLab

onboarding.token.header=创建一个令牌
onboarding.token.text=此令牌用于执行分析时进行认证，如果这个令牌存在问题，可以随时撤销令牌。{link}
onboarding.token.text.PROJECT_ANALYSIS_TOKEN=项目令牌用于执行分析时进行认证，如果令牌存在问题，可以随时撤销令牌。{link}
onboarding.token.text.GLOBAL_ANALYSIS_TOKEN=全局令牌用于执行分析时进行认证，如果令牌存在问题，可以随时撤销令牌。{link}
onboarding.token.text.user_account=用户账号
onboarding.token.generate=创建
onboarding.token.generate.long=创建令牌
onboarding.token.generate.PROJECT_ANALYSIS_TOKEN=创建项目令牌
onboarding.token.generate.GLOBAL_ANALYSIS_TOKEN=创建全局令牌
onboarding.token.use_existing_token=使用已有令牌
onboarding.token.use_existing_token.label=已有令牌值
onboarding.token.use_existing_token.help=在输入框中粘贴已存在的令牌
onboarding.token.warning_project_token_scope=请注意此令牌只允许分析当前项目。如果希望使用一个令牌分析多个项目，需要通过 {link} 创建全局令牌。可以参考文档 {doc_link}。
onboarding.token.name.label=令牌名称
onboarding.token.name.placeholder=输入令牌名称
onboarding.token.name.help=输入项目令牌名称
onboarding.token.invalid_format=令牌名称格式有误。

onboarding.tutorial.env_variables=在 {field} 字段，输入 {value} {extra}
onboarding.tutorial.env_variables.field=数值
onboarding.tutorial.env_variables.token_generator.value=现存令牌，或新生成一个：

onboarding.analysis.header=分析你的项目
onboarding.analysis.auto_refresh_after_analysis.done=分析是否已经结束？
onboarding.analysis.auto_refresh_after_analysis.auto_refresh=如果分析成功，页面一会儿就会自动刷新。
onboarding.analysis.auto_refresh_after_analysis.set_up_pr_deco_and_ci.admin=可以为项目配置拉取请求装饰。可以参考教程使用喜欢的 CI 工具执行分析。
onboarding.analysis.auto_refresh_after_analysis.set_up_pr_deco_and_ci=可以咨询项目管理员设置拉取请求装饰。可以参考教程使用喜欢的 CI 工具执行分析。
onboarding.analysis.auto_refresh_after_analysis.check_these_links=等待分析结果的同时可以看一下这些文档：{link_branches}，{link_pr_analysis}。
onboarding.analysis.auto_refresh_after_analysis.check_these_links.pr_analysis=拉取请求分析
onboarding.analysis.auto_refresh_after_analysis.check_these_links.branches=分支分析

onboarding.build=使用什么构建技术？
onboarding.build.maven=Maven
onboarding.build.gradle=Gradle
onboarding.build.make=Make
onboarding.build.dotnet=.NET
onboarding.build.dotnet.win_core=Windows + .NET Core
onboarding.build.dotnet.win_msbuild=Windows + .NET Framework
onboarding.build.dotnet.linux_core=Linux + .NET Core
onboarding.build.cfamily=C，C++ 或 ObjC
onboarding.build.other=其他 (比如 JS，TS，Go，Python，PHP...)

onboarding.build.dotnet.variant=选择构建工具
onboarding.build.dotnet.variant.dotnet_core=.NET Core
onboarding.build.dotnet.variant.dotnet_framework=.NET Framework

onboarding.build.other.os=使用哪种操作系统？
onboarding.build.other.os.linux=Linux
onboarding.build.other.os.win=Windows
onboarding.build.other.os.mac=macOS

onboarding.analysis.docs=请访问 {link} 了解更多详情。
onboarding.analysis.build_wrapper.header.linux=下载解压 Linux 应用包
onboarding.analysis.build_wrapper.header.win=下载解压 Windows 应用包
onboarding.analysis.build_wrapper.header.mac=下载解压 macOS 应用包
onboarding.analysis.build_wrapper.text=把可执行文件目录添加到 {env_var} 环境变量
onboarding.analysis.build_wrapper.execute=把构建封装设置为命令前缀
onboarding.analysis.build_wrapper.execute_text=在项目目录执行以下命令。
onboarding.analysis.build_wrapper.execute_build_command=<构建命令>
onboarding.analysis.build_wrapper.docs=访问 {link} 获取构建封装的更多信息。
onboarding.analysis.build_wrapper.docs_link=官方文档


onboarding.analysis.java.maven.header=在你的电脑上使用 Maven 执行 SonarQube 扫描
onboarding.analysis.java.maven.text=使用 Maven 执行 SonarQube 分析是非常简单的。只需要在你的项目目录下执行如下命令。
onboarding.analysis.java.maven.docs_link=Maven 扫描器官方文档
onboarding.analysis.java.maven.text.custom=在项目目录下执行以下命令。

onboarding.analysis.java.gradle.header=在你的电脑上使用 Gradle 执行 SonarQube 扫描
onboarding.analysis.java.gradle.text.1=使用 Gradle 执行 SonarQube 分析是非常简单的。只需要在你的 <code>build.gradle</code> 文件中声明 <code>org.sonarqube</code> 插件：
onboarding.analysis.java.gradle.text.2=然后执行如下命令：
onboarding.analysis.java.gradle.latest_version=可以使用最新版本的 Gradle 插件 {link}。
onboarding.analysis.java.gradle.docs_link=Gradle 扫描器官方文档

onboarding.analysis.msbuild.header=下载并解压适用于 .NET 的扫描器
onboarding.analysis.msbuild.text=访问 {link} 下载最新版本，并将可执行文件的目录添加到 {code} 环境变量中
onboarding.analysis.msbuild.execute=执行 .NET 扫描器
onboarding.analysis.msbuild.execute.text=执行 {instance} 分析非常简单，只需要在你的项目目录执行以下命令。
onboarding.analysis.msbuild.docs_link=.NET 扫描器的官方文档

onboarding.analysis.sq_scanner.header.linux=下载并解压 Linux 平台的扫描器
onboarding.analysis.sq_scanner.header.win=下载并解压 Windows 平台的扫描器
onboarding.analysis.sq_scanner.header.mac=下载并解压 macOS 平台的扫描器
onboarding.analysis.sq_scanner.text=访问 {link} 下载最新版本，并将 {dir} 目录添加到 {env_var} 环境变量
onboarding.analysis.sq_scanner.execute=执行扫描器
onboarding.analysis.sq_scanner.execute.text=执行 {instance} 分析非常简单。只需要在你的项目目录下执行如下命令。
onboarding.analysis.sq_scanner.execute.text.custom=在项目目录下执行以下命令。
onboarding.analysis.sq_scanner.docs=请访问 {link} 了解更多信息。
onboarding.analysis.sq_scanner.docs_use_case=请访问 {link} 了解更多信息，并通过 {useCaseLink} 了解更多相关信息。
onboarding.analysis.sq_scanner.docs_link=扫描器官方文档
onboarding.analysis.sq_scanner.sonar_token_env.header=在 CI 设置中配置 SONAR_TOKEN 环境变量
onboarding.analysis.sq_scanner.sonar_token_env.var_name=添加一个环境变量
onboarding.analysis.sq_scanner.sonar_token_env.var_value=使用下面的值
onboarding.analysis.sqscanner.docs.gradle.title=Gradle 扫描器官方文档
onboarding.analysis.sqscanner.docs.gradle.example_project.title=基于 Gradle 的示例项目

onboarding.analysis.dotnetcore.global=扫描器 .NET Core 全局工具
onboarding.analysis.dotnetcore.global.text=作为先决条件，你需要使用以下命令全局安装 sonarscanner 工具：
onboarding.analysis.dotnetcore.global.text.path=请确保 dotnet 工具目录在 path 路径下，参考 dotnet 全局工具文档了解更多细节。

onboarding.tutorial.return_to_list=选择其他选项
onboarding.tutorial.ci_outro.all_set.title=都准备好了！
onboarding.tutorial.ci_outro.all_set.sentence={all_set} 已经准备好了提升代码的质量和安全性！
onboarding.tutorial.ci_outro.all_set.sentence.all_set=已经准备好了。
onboarding.tutorial.ci_outro.commit=提交并推送代码开始分析。
onboarding.tutorial.ci_outro.commit.why.gitlab=每次向分支的推送或合并请求都会触发 SonarQube 执行代码分析。我们会在 GitLab 直接装饰合并请求。
onboarding.tutorial.ci_outro.commit.why.github=每次向分支的推送或拉取请求都会触发 SonarQube 执行代码分析。我们会在 GitHub 直接装饰拉取请求。
onboarding.tutorial.ci_outro.commit.why.bitbucket=每次向分支的推送或拉取请求都会触发 SonarQube 执行代码分析。我们会在 Bitbucket 直接装饰拉取请求。
onboarding.tutorial.ci_outro.commit.why.bitbucketcloud=每次向分支的推送或拉取请求都会触发 SonarQube 执行代码分析。我们会在 Bitbucket Cloud 直接装饰拉取请求。
onboarding.tutorial.ci_outro.commit.why.azure=每次向分支的推送或拉取请求都会触发 SonarQube 执行代码分析。我们会在 Azure 直接装饰拉取请求。
onboarding.tutorial.ci_outro.commit.why.no_branches=每次向主分支的推送都会触发 SonarQube 执行代码分析。
onboarding.tutorial.ci_outro.refresh=当前页面刷新后会显示分析结果。
onboarding.tutorial.ci_outro.refresh.why=如果页面没有刷新，可以双击分析配置。
onboarding.tutorial.ci_outro.waiting_for_fist_analysis=等待第一次分析。。。
onboarding.tutorial.other.project_key.sentence=在仓库中创建 {file} 文件，粘贴如下代码：
onboarding.tutorial.cfamilly.compilation_database_info=如果在使用构建封装时遇到问题，可以试试 {link}
onboarding.tutorial.cfamilly.compilation_database_info.link=兼容数据库
onboarding.tutorial.cfamilly.speed_caching=也可以启用 {link} 来获取提速。
onboarding.tutorial.cfamilly.speed_caching.link=多线程和缓存
onboarding.tutorial.cfamily.examples_repositories_description=可以参考我们配置好 SonarQube 的 C 和 C++ 示例项目

onboarding.tutorial.choose_method=期望如何分析仓库？
onboarding.tutorial.choose_method.devops_platform.description=是否需要集成自己喜欢的 CI？请参考下面的教程。
onboarding.tutorial.choose_method.local.description=想要测试一下或有高级需求？可以本地分析项目。
onboarding.tutorial.choose_method.local=本地
onboarding.tutorial.choose_method.other-ci=其他 CI
onboarding.tutorial.choose_method.jenkins=使用 Jenkins
onboarding.tutorial.choose_method.github-actions=使用 GitHub Actions
onboarding.tutorial.choose_method.gitlab-ci=使用 GitLab CI
onboarding.tutorial.choose_method.azure-pipelines=使用 Azure 流水线
onboarding.tutorial.choose_method.bitbucket-pipelines=使用 Bitbucket 流水线


onboarding.tutorial.with.yaml.gradle=修改 {gradle} 文件，添加 {sq} 插件和如下配置：



onboarding.tutorial.with.bitbucket_pipelines.create_secret.title=创建仓库变量
onboarding.tutorial.with.bitbucket_pipelines.yaml.title=创建流水线构建配置
onboarding.tutorial.with.bitbucket_pipelines.variables.intro=在 Bitbucket 仓库，进入 {repository_variables} 创建两个新变量：
onboarding.tutorial.with.bitbucket_pipelines.variables.intro.link=仓库配置 > 仓库变量
onboarding.tutorial.with.bitbucket_pipelines.variables.name.sentence=在 {name} 控件，输入
onboarding.tutorial.with.bitbucket_pipelines.variables.name.sentence.name=名称
onboarding.tutorial.with.bitbucket_pipelines.variables.add.sentence=点击 {add}
onboarding.tutorial.with.bitbucket_pipelines.variables.add.sentence.add=新增
onboarding.tutorial.with.bitbucket_pipelines.variables.secured.sentence=确认选中 {secured}
onboarding.tutorial.with.bitbucket_pipelines.variables.secured.sentence.secured=安全

onboarding.tutorial.with.github_action.create_secret.title=创建 GitHub 秘钥
onboarding.tutorial.with.github_action.secret.intro=在 GitHub 仓库中，进入 {settings_secret}，创建两个新秘钥：
onboarding.tutorial.with.github_action.secret.intro.link=设置 > 秘钥
onboarding.tutorial.with.github_action.secret.name.sentence=在 {name} 字段，输入
onboarding.tutorial.with.github_action.secret.name.sentence.name=名称
onboarding.tutorial.with.github_action.secret.new.sentence=点击 {new_secret}
onboarding.tutorial.with.github_action.secret.new.sentence.new_secret=新仓库秘钥
onboarding.tutorial.with.github_action.secret.add.sentence=点击 {add_secret}
onboarding.tutorial.with.github_action.secret.add.sentence.add_secret=添加秘钥
onboarding.tutorial.with.github_action.yaml.title=创建工作流 YAML 文件
onboarding.tutorial.with.github_action.yaml.create_yml=创建或修改 {file} YAML 文件，使用如下内容：

onboarding.tutorial.with.gitlab_ci.title=使用 GitLab CI 分析项目
onboarding.tutorial.with.gitlab_ci.project_key.title=设置项目编码
onboarding.tutorial.with.gitlab_ci.project_key.maven.step2=下列内容加入 {file} 文件：
onboarding.tutorial.with.gitlab_ci.project_key.gradle.step2=下列内容加入 {file} 文件：
onboarding.tutorial.with.gitlab_ci.project_key.other.step2=在仓库中创建 {file} 文件，粘贴以下代码：
onboarding.tutorial.with.gitlab_ci.project_key.dotnet.step2=在仓库中创建 {file} 文件，粘贴以下代码：
onboarding.tutorial.with.gitlab_ci.project_key.cfamily.step2=在仓库中创建 {file} 文件，粘贴以下代码：

onboarding.tutorial.with.gitlab_ci.env_variables.title=添加环境变量
onboarding.tutorial.with.gitlab_ci.env_variables.description.link=配置 > CI/CD > 变量
onboarding.tutorial.with.gitlab_ci.env_variables.section.title=a. 定义 SonarQube 令牌环境变量
onboarding.tutorial.with.gitlab_ci.env_variables.section.description=在 GitLab 中，进入 {link} 添加下列变量，确认在项目中生效：
onboarding.tutorial.with.gitlab_ci.env_variables.edit.token.tooltip=使用已有令牌或创建新令牌。
onboarding.tutorial.with.gitlab_ci.env_variables.step1=键

onboarding.tutorial.with.gitlab_ci.env_variables.step3=取消 "项目变量" 复选框
onboarding.tutorial.with.gitlab_ci.env_variables.section.step4=选择 "掩码变量" 复选框
onboarding.tutorial.with.gitlab_ci.env_variables.section2.title=b. 定义 SonarQube 网址环境变量
onboarding.tutorial.with.gitlab_ci.env_variables.section2.description=在 {link} 添加新变量，确认在项目中生效：
onboarding.tutorial.with.gitlab_ci.env_variables.section2.step4=让 "掩码变量" 保持未选中
onboarding.tutorial.with.gitlab_ci.yml.title=创建或修改配置文件
onboarding.tutorial.with.gitlab_ci.yml.description=使用以下内容创建或更新你的 {filename} 文件。
onboarding.tutorial.with.gitlab_ci.yml.filename=.gitlab-ci.yml
onboarding.tutorial.with.gitlab_ci.yml.baseconfig=注意这是运行 SonarQube 分析的最小配置，用于主分分支和合并请求。
onboarding.tutorial.with.gitlab_ci.yml.baseconfig.no_branches=注意这是运行 SonarQube 分析的最小配置，用于主干分支。
onboarding.tutorial.with.gitlab_ci.yml.existing=如果已经配置了一个流水线并正在使用，你可以把这一步的例子添加到 yml 文件中。

onboarding.tutorial.with.jenkins.title=使用 Jenkins 分析项目
onboarding.tutorial.with.jenkins.alm_selection.title=选择 DevOps 平台
onboarding.tutorial.with.jenkins.prereqs.title=前置要求
onboarding.tutorial.with.jenkins.prereqs.intro.sentence=期望使用 Jenkins 分析项目，以下插件 {must_have}
onboarding.tutorial.with.jenkins.prereqs.intro.sentence.installed=已安装
onboarding.tutorial.with.jenkins.prereqs.intro.sentence.configured=已配置
onboarding.tutorial.with.jenkins.prereqs.plugins.branch_source.bitbucket=Bitbucket 分支源 Jenkins 插件 - 2.7 或更新版本
onboarding.tutorial.with.jenkins.prereqs.plugins.branch_source.bitbucketcloud=Bitbucket 分支源 Jenkins 插件 - 2.7 或更新版本
onboarding.tutorial.with.jenkins.prereqs.plugins.branch_source.github=Jenkins 的 GitHub 分支源插件 - 2.7.1 或更新版本
onboarding.tutorial.with.jenkins.prereqs.plugins.branch_source.gitlab=Jenkins 的 GitLab Branch Source 插件 - 1.5.3 或更新版本
onboarding.tutorial.with.jenkins.prereqs.plugins.gitlab_plugin=Jenkins 的 GitLab 插件 - 1.5.13 或更新版本
onboarding.tutorial.with.jenkins.prereqs.plugins.sonar_scanner=SonarQube 分析 Jenkins 插件 - 2.11 或更新版本
onboarding.tutorial.with.jenkins.prereqs.step_by_step_guide=可以参考 {link} 文档，这里按步骤介绍了如何在 Jenkins 安装和配置这些插件。
onboarding.tutorial.with.jenkins.prereqs.step_by_step_guide.link=分析前提条件
onboarding.tutorial.with.jenkins.prereqs.following_are_recommendations=建议按照以下步骤进行配置已获取最佳结果，你也可以根据需要进行定制。
onboarding.tutorial.with.jenkins.prereqs.done=配置分析
onboarding.tutorial.with.jenkins.multi_branch_pipeline.title=创建多分支管道作业
onboarding.tutorial.with.jenkins.multi_branch_pipeline.intro=创建多分支管道，自动分析所有分支和拉取请求。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step1.sentence=在 Jenkins 面板中，点击 {new_item} 创建一个 {type}。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step1.sentence.new_item=新项目
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step1.sentence.type=多分支管道作业

onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.sentence=在 {tab} 下，添加 Bitbucket 源，输入以下信息：
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.sentence.tab=分支源
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.sentence.source=Bitbucket
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.server.label=服务器
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.server.action=选择仓库中需要分析的实例。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.creds.label=凭证
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.creds.action=选择 Bitbucket 服务器凭证。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.owner.label=创建人
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.owner.action=输入项目编码。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.repo.label=仓库
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucket.repo.action=选择需要分析的仓库。

onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.sentence=在 {tab} 下，添加 {source} 源，输入如下信息：
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.sentence.tab=分支源
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.sentence.source=Bitbucket
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.server.label=服务器
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.server.action=确认选中 Bitbucket Cloud。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.creds.label=凭证
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.creds.action=选择 Bitbucket Cloud 凭证。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.owner.label=拥有者
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.owner.action=输入工作区 ID
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.repo.label=仓库
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.bitbucketcloud.repo.action=选择希望分析的仓库

onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.github.sentence=在 {tab} 下，添加 GitHub 源，输入以下信息：
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.github.sentence.tab=分支源
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.github.sentence.source=GitHub
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.github.creds.label=凭证
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.github.creds.action=选择或添加 GitHub 凭证。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.github.repo_url.label=仓库 HTTPS 网址
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.github.repo_url.action=输入仓库网址。

onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.gitlab.sentence=在 {tab} 下，添加 {source} 源，输入如下内容：
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.gitlab.sentence.tab=分支源
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.gitlab.sentence.source=GitLab 项目
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.gitlab.creds.label=获取凭证
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.gitlab.creds.action=选择或添加 GitLab 凭证
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.gitlab.owner.label=作者
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.gitlab.owner.action=输入用户或群组名称。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.gitlab.repo.label=项目
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.gitlab.repo.action=选择项目。

onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.label=行为

onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.branches_prs.action=排除 PR 的分支
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.branches_prs.label=发现分支
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.branches_mrs.action=排除 MR 的分支
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.branches_mrs.label=发现分支

onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.discover_prs.action=当前拉取请求版本
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.discover_prs.label=通过 origin 发现拉取请求
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.discover_mrs.action=当前合并请求版本
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.discover_mrs.label=通过 origin 发现合并请求

onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.ref_specs.label=指定 ref 规范
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.ref_specs.add_behaviour.sentence=默认，此行为不会启用。如果看不到此行为，点击 {add} 查看可用行为列表，选择 {ref_spec}。
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.ref_specs.add_behaviour.sentence.add=添加
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.ref_specs.add_behaviour.sentence.ref_spec=指定 ref 规范
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.ref_specs.set_pr_ref_specs.sentence=为了在拉取请求中正确计算新代码，扫描器需要目标分支的 refs。确认 {ref_spec} 会包含所有目标分支（默认值应该够了）。比如：
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.ref_specs.set_pr_ref_specs.sentence.ref_spec=ref 规范
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.ref_specs.set_mr_ref_specs.sentence=为了在合并请求中正确计算新代码，扫描器需要目标分支的 refs。确认 {ref_spec} 会包含所有目标分支（默认值应该够了）。比如：
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.behaviors.ref_specs.set_mr_ref_specs.sentence.ref_spec=ref 规范

onboarding.tutorial.with.jenkins.multi_branch_pipeline.step2.leave_defaults=保留其他配置使用默认值

onboarding.tutorial.with.jenkins.multi_branch_pipeline.step3.sentence=跳转到 {tab} 部分，设置以下参数：
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step3.sentence.tab=构建配置
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step3.mode.label=模式
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step3.mode.action=使用 Jenkinsfile
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step3.script_path.label=脚本路径
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step3.script_path.action=Jenkinsfile

onboarding.tutorial.with.jenkins.multi_branch_pipeline.step4.sentence=点击 {save}.
onboarding.tutorial.with.jenkins.multi_branch_pipeline.step4.sentence.save=保存

onboarding.tutorial.with.jenkins.pipeline.title=创建流水线作业
onboarding.tutorial.with.jenkins.pipeline.intro=创建自动分析项目的流水线。
onboarding.tutorial.with.jenkins.pipeline.step1.sentence=在 Jenkins 工作台，点击 {create_item} 创建一个 {type}。
onboarding.tutorial.with.jenkins.pipeline.step1.sentence.new_item=新项目
onboarding.tutorial.with.jenkins.pipeline.step1.sentence.type=流水线作业

onboarding.tutorial.with.jenkins.pipeline.step2.sentence=在 {tab} 下，选择 {option}。需要设置一个唯一的秘钥令牌。
onboarding.tutorial.with.jenkins.pipeline.step2.sentence.tab=构建触发器
onboarding.tutorial.with.jenkins.pipeline.step2.sentence.option=远程触发构建

onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.trigger.sentence=在 {tab} 下，选择 {option}。记下提供的 Webhook 网址。在 GitLab 配置 Webhook 需要使用。
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.trigger.sentence.tab=构建触发器
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.trigger.sentence.option=推送到 GitLab 时进行构建
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.pick_triggers.sentence=在 {triggers} 下，只选择 {push_events}.
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.pick_triggers.sentence.triggers=启用 GitLab 触发器
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.pick_triggers.sentence.push_events=推送事件
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.click_advanced.sentence=点击 {advanced}
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.click_advanced.sentence.advanced=高级...
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.secret_token.sentence=找到 {secret_token} 部分，点击 {generate}。记下秘钥令牌。在 GitLab 配置 Webhook 时需要使用。
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.secret_token.sentence.secret_token=秘钥令牌
onboarding.tutorial.with.jenkins.pipeline.gitlab.step2.secret_token.sentence.generate=生成

onboarding.tutorial.with.jenkins.pipeline.step3.sentence=在 {tab} 下，确认按照下面配置参数：
onboarding.tutorial.with.jenkins.pipeline.step3.sentence.tab=流水线
onboarding.tutorial.with.jenkins.pipeline.step3.definition.label=定义
onboarding.tutorial.with.jenkins.pipeline.step3.definition.action=SCM 中的流水线脚本
onboarding.tutorial.with.jenkins.pipeline.step3.scm.sentence={label} 配置 SCM。确认只构建主分支。比如，如果主分支为 "main"。在 {branches_to_build} 输入 "*/main"。
onboarding.tutorial.with.jenkins.pipeline.step3.scm.sentence.label=SCM:
onboarding.tutorial.with.jenkins.pipeline.step3.scm.sentence.branches_to_build=需要构建的分支
onboarding.tutorial.with.jenkins.pipeline.step3.script_path.label=脚本路径
onboarding.tutorial.with.jenkins.pipeline.step3.script_path.action=Jenkinsfile

onboarding.tutorial.with.jenkins.pipeline.step4.sentence=点击 {save}。
onboarding.tutorial.with.jenkins.pipeline.step4.sentence.save=保存


onboarding.tutorial.with.jenkins.webhook.bitbucket.title=创建一个 Bitbucket 服务器 Webhook
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.title=创建一个 Bitbucket Cloud Webhook
onboarding.tutorial.with.jenkins.webhook.github.title=创建一个 GitHub Webhook
onboarding.tutorial.with.jenkins.webhook.gitlab.title=创建一个 GitLab Webhook
onboarding.tutorial.with.jenkins.webhook.intro.sentence=在仓库中创建一个 Webhook，发送推送时就会触发 Jenkins 作业。查看是否配置过 Webhook？ {link}
onboarding.tutorial.with.jenkins.webhook.intro.link=跳过这一步。
onboarding.tutorial.with.jenkins.webhook.step1.sentence=访问 {link}，输入以下信息：
onboarding.tutorial.with.jenkins.webhook.bitbucket.step1.link=对应仓库的 Bitbucket 服务器 Webhook 创建页面
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step1.link=对应仓库的 Bitbucket Cloud Webhook 创建页面
onboarding.tutorial.with.jenkins.webhook.github.step1.link=对应仓库的 GitHub Webhook 创建页面
onboarding.tutorial.with.jenkins.webhook.gitlab.step1.link=对应仓库的 GitLab Webhook 创建页面
onboarding.tutorial.with.jenkins.webhook.step1.name.label=名称
onboarding.tutorial.with.jenkins.webhook.step1.name.action=输入一个唯一名称。
onboarding.tutorial.with.jenkins.webhook.bitbucket.step1.url.label=URL
onboarding.tutorial.with.jenkins.webhook.bitbucket.step1.url.action=输入以下 URL，替换对应令牌：
onboarding.tutorial.with.jenkins.webhook.bitbucket.step1.url.warning=需要在 Jenkins 配置中指定 Bitbucket 服务器 URL。注意结尾是否没写 "/"，或者有多余的 "/"。
onboarding.tutorial.with.jenkins.webhook.github.step1.url.label=URL
onboarding.tutorial.with.jenkins.webhook.github.step1.url.action=输入 Jenkins 实例网址，添加如下路径：
onboarding.tutorial.with.jenkins.webhook.gitlab.step1.url_with_branches.label=URL
onboarding.tutorial.with.jenkins.webhook.gitlab.step1.url_with_branches.action=如果以下网址，根据需要替换 *** 之间的值：
onboarding.tutorial.with.jenkins.webhook.gitlab.step1.url_no_branches.label=URL
onboarding.tutorial.with.jenkins.webhook.gitlab.step1.url_no_branches.action=输入前一步记下的 URL。
onboarding.tutorial.with.jenkins.webhook.gitlab.step1.secret_token.label=秘钥令牌
onboarding.tutorial.with.jenkins.webhook.gitlab.step1.secret_token.action=输入前一步记下的令牌。
onboarding.tutorial.with.jenkins.webhook.bitbucket.step2.sentence=对应 {events}，确认对以下选型进行检查：
onboarding.tutorial.with.jenkins.webhook.bitbucket.step2.sentence.events=事件
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step2.sentence=在 {triggers} 下，选择 {option} 确认选中了以下选项：
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step2.sentence.triggers=触发器
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step2.sentence.option=从触发器列表中选择
onboarding.tutorial.with.jenkins.webhook.github.step2.sentence=对应 {events} 选择 {option}，检查如下选项：
onboarding.tutorial.with.jenkins.webhook.github.step2.sentence.events=希望哪些事件触发 Webhook？
onboarding.tutorial.with.jenkins.webhook.github.step2.sentence.option=选择独立事件
onboarding.tutorial.with.jenkins.webhook.gitlab.step2.sentence=在 {trigger} 下检查如下内容：
onboarding.tutorial.with.jenkins.webhook.gitlab.step2.sentence.trigger=触发器
onboarding.tutorial.with.jenkins.webhook.bitbucket.step2.repo.label=仓库
onboarding.tutorial.with.jenkins.webhook.bitbucket.step2.repo.action=推送
onboarding.tutorial.with.jenkins.webhook.bitbucket.step2.pr.label=拉取请求
onboarding.tutorial.with.jenkins.webhook.bitbucket.step2.pr.action=打开
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step2.repo.label=仓库
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step2.repo.action=推送
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step2.pr.label=拉取请求
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step2.pr.action=创建
onboarding.tutorial.with.jenkins.webhook.github.step2.repo=推送
onboarding.tutorial.with.jenkins.webhook.github.step2.pr=拉取请求
onboarding.tutorial.with.jenkins.webhook.gitlab.step2.repo=推送事件
onboarding.tutorial.with.jenkins.webhook.gitlab.step2.mr=合并请求事件
onboarding.tutorial.with.jenkins.webhook.github.step3.sentence=点击 {add_webhook}.
onboarding.tutorial.with.jenkins.webhook.github.step3.sentence.add_webhook=添加 Webhook
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step3.sentence=点击 {save}。
onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.step3.sentence.save=保存
onboarding.tutorial.with.jenkins.webhook.bitbucket.step3.sentence=点击 {create}.
onboarding.tutorial.with.jenkins.webhook.bitbucket.step3.sentence.create=创建
onboarding.tutorial.with.jenkins.webhook.gitlab.step3.sentence=点击 {add_webhook}。
onboarding.tutorial.with.jenkins.webhook.gitlab.step3.sentence.add_webhook=添加 Webhook
onboarding.tutorial.with.jenkins.jenkinsfile.title=创建 Jenkinsfile
onboarding.tutorial.with.jenkins.jenkinsfile.jenkinsfile_step.sentence=在仓库中新建 {file} 文件，复制以下代码：
onboarding.tutorial.with.jenkins.jenkinsfile.maven.step3.replace.sentence=确认把 {default} 修改成 {in_jenkins} 实际使用的 Maven 名称。
onboarding.tutorial.with.jenkins.jenkinsfile.maven.step3.replace.sentence.default=默认 Maven
onboarding.tutorial.with.jenkins.jenkinsfile.maven.step3.replace.sentence.in_jenkins=使用 Jenkins
onboarding.tutorial.with.jenkins.jenkinsfile.maven.step3.help1.sentence=想要查看 Jenkins 中 Maven 工具的名称，访问 {path}。
onboarding.tutorial.with.jenkins.jenkinsfile.maven.step3.help1.sentence.path=管理 Jenkins > 全局工具配置
onboarding.tutorial.with.jenkins.jenkinsfile.maven.step3.help2.sentence=名称位于 {path} 部分，{name} 字段。
onboarding.tutorial.with.jenkins.jenkinsfile.maven.step3.help2.sentence.path=Maven > Maven 安装
onboarding.tutorial.with.jenkins.jenkinsfile.maven.step3.help2.sentence.name=名称
onboarding.tutorial.with.jenkins.jenkinsfile.gradle.step2.sentence=把以下内容添加至 {file} 文件：
onboarding.tutorial.with.jenkins.jenkinsfile.dotnet.build_agent=选择构建代理。

onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.title.sentence=前提：添加 {default_msbuild} 工具
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.title.sentence.default_msbuild=MSBuild
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.info=每个 Jenkins 实例只需要配置一次。
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.step1.sentence=在 Jenkins 中，确认安装好 {msbuild}。
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.step1.sentence.msbuild=MSBuild 插件
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.step2.sentence=进入 {path}.
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.step2.sentence.path=管理 Jenkins > 全局工具配置
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.step3.sentence=在 {msbuild} 下，点击 {add_msbuild}，设置一个 {name}，最后一步会用到。参考 {msbuild_plugin} 文档了解如何安装：
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.step3.sentence.msbuild=MSBuild
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.step3.sentence.msbuild_plugin=MSBuild 插件
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.step3.sentence.add_msbuild=添加 MSBuild
onboarding.tutorial.with.jenkins.dotnet.msbuild.prereqs.step3.sentence.name=名称


onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.title.sentence=前提：添加一个 {default_scanner} 工具
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.title.sentence.default_scanner=MSBuild 版本的 SonarScanner
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.info=每个 Jenkins 实例只需要安装一次，或者需要不同版本的扫描器。
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step1.sentence=在 Jenkins 里，进入 {path}。
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step1.sentence.path=管理 Jenkins > 全局工具配置
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step2.sentence=在 {default_scanner} 下，点击 {add_scanner_for_msbuild}
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step2.sentence.default_scanner=MSBuild 版本的 SonarScanner
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step2.sentence.add_scanner_for_msbuild=为 MSBuild 添加 SonarScanner
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step3.sentence=选择一个 {name}，最后一步需要使用：
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step3.sentence.name=名称
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step4.sentence=选择 {install_auto}
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step4.sentence.install_auto=自动安装
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step5.sentence=在 {install_from} 下选择项目需要的对应 .NET Core 扫描器。
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step5.sentence.install_from=从 GitHub 安装
onboarding.tutorial.with.jenkins.dotnet.scanner.prereqs.step5.sentence.install_auto=自动安装

onboarding.tutorial.with.jenkins.jenkinsfile.other.step3.replace.sentence=确认把 {default} 修改为 {in_jenkins} 实际使用的 SonarQube Scanner 工具对应的名称。
onboarding.tutorial.with.jenkins.jenkinsfile.other.step3.replace.sentence.default=SonarScanner
onboarding.tutorial.with.jenkins.jenkinsfile.other.step3.replace.sentence.in_jenkins=使用 Jenkins
onboarding.tutorial.with.jenkins.jenkinsfile.other.step3.help1.sentence=想要查看 Jenkins 中 SonarQube Scanner 工具的名称，访问 {path}。
onboarding.tutorial.with.jenkins.jenkinsfile.other.step3.help1.sentence.path=管理 Jenkins > 全局工具配置
onboarding.tutorial.with.jenkins.jenkinsfile.other.step3.help2.sentence=名称位于 {path} 部分，{name} 字段。
onboarding.tutorial.with.jenkins.jenkinsfile.other.step3.help2.sentence.path=SonarQube Scanner > SonarQube Scanner 安装
onboarding.tutorial.with.jenkins.jenkinsfile.other.step3.help2.sentence.name=名称
onboarding.tutorial.with.jenkins.jenkinsfile.cfamilly.agent_setup=假设 Jenkins 代理已经安装了构建项目所需的工具。


onboarding.tutorial.with.azure_pipelines.os=客户端的宿主是什么？
onboarding.tutorial.with.azure_pipelines.title=使用 Azure DevOps 流水线分析项目
onboarding.tutorial.with.azure_pipelines.ExtensionInstallation.title=为 Azure DevOps 服务器安装 SonarQube 扩展
onboarding.tutorial.with.azure_pipelines.ExtensionInstallation.sentence=进入 Azure DevOps 服务器实例，进入 Visual Studio 市场，点击 {button} 按钮安装 {link}。
onboarding.tutorial.with.azure_pipelines.ExtensionInstallation.sentence.link=SonarQube 扩展
onboarding.tutorial.with.azure_pipelines.ExtensionInstallation.sentence.button=免费获取
onboarding.tutorial.with.azure_pipelines.ServiceEndpoint.title=添加一个 SonarQube 服务终端
onboarding.tutorial.with.azure_pipelines.ServiceEndpoint.step1.sentence=进入 Azure DevOps 服务器，进入 {menu}
onboarding.tutorial.with.azure_pipelines.ServiceEndpoint.step1.sentence.menu=项目配置 > 服务连接
onboarding.tutorial.with.azure_pipelines.ServiceEndpoint.step2.sentence=添加新服务连接类型 {type}
onboarding.tutorial.with.azure_pipelines.ServiceEndpoint.step2.sentence.type=SonarQube
onboarding.tutorial.with.azure_pipelines.ServiceEndpoint.step3.sentence=输入好记的连接名称
onboarding.tutorial.with.azure_pipelines.ServiceEndpoint.step4.sentence=输入 SonarQube 服务器 url：{url} {button}
onboarding.tutorial.with.azure_pipelines.ServiceEndpoint.step5.sentence=输入建好的令牌，或新生成一个令牌
onboarding.tutorial.with.azure_pipelines.ServiceEndpoint.step6.sentence=创建服务链接
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.title=配置分支分析
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.info=下面的步骤假设正在使用 Azure 流水线经典编辑器。参考 {doc_link} 中的 yaml 相关配置。
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.info.doc_link=Azure DevOps 集成页面

onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp.sentence=使用 Azure DevOps，创建或修改 {pipeline} 为代理启用构建封装。
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp.script.sentence=为代理添加 {task} 任务，下载解压构建封装。
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp.win.sentence.task=PowerShell 脚本
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp.nix.sentence.task=Bash 脚本
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp.win.sentence.inline=内联
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_wrapper.ccpp.nix.sentence.inline=内联
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.ccpp.sentence=在构建任务 {before} 添加新 {task} 任务
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare_additional.ccpp=在 {advanced} 部分的 {additional}，添加设置输出目录的新属性，构建封装会用于输出结果：{property} {button}
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare_additional.ccpp.additional=更多参数
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare_additional.ccpp.advanced=高级
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build.ccpp.sentence=添加或修改 {task} 任务。执行分析时，应该通过命令行进行构建，这样就可以使用构建封装处理。
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build.ccpp.sentence.task=构建命令行
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_script.ccpp.sentence=运行 {button_wrapper} 可执行文件。传递参数 (1) 作为输出目录配置到前面的任务，(2) 通过命令执行一次完整的项目构建 (不能使用增量构建)。示例：
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.build_script.ccpp.sentence.build_wrapper=构建封装
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.run.ccpp.sentence=在构建任务 {after} 添加新 {task} 任务。要在前面的任务完成后立即运行，不需要在执行分析之前对运行环境进行修改。
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.sentence=在 Azure DevOps，创建或编辑 {pipeline} 并创建 {task} 任务 {before} 构建任务
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.sentence.pipeline=构建流水线
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.sentence.task=准备分析配置
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.sentence.before=然后
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.endpoint.sentence=选择第 2 步中创建的 {endpoint}
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.endpoint.sentence.endpoint=SonarQube 服务器终端
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.run_analysis=在 {section} 下面，选择 {run_analysis_value}
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.run_analysis.section=选择执行分析的方式
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.run_analysis.values.dotnet=集成 MSBuild
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.run_analysis.values.maven=集成 Maven 或 Gradle
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.run_analysis.values.gradle=集成 Maven 或 Gradle
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.run_analysis.values.cfamily=使用独立扫描器
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.prepare.run_analysis.values.other=集成独立的分析器
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.manual.sentence=选择 {mode} 模式
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.manual.sentence.mode=手工配置
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.run.sentence=添加 {task} 任务 {after} 构建任务
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.run.sentence.task=执行代码分析
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.run.sentence.after=使用之前的
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.run.key.sentence=在项目标识控件中，输入 {key} {button}
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.run.key.sentence.project_key=项目标识
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.advanced_properties.sentence=展开 {section} 替换 {properties} 使用下面配置
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.advanced_properties.sentence.section=高级章节
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.advanced_properties.sentence.properties=附加配置
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java_installer.title=添加新 Java 工具安装任务
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java_installer.sentence=进入 {field}，选择 {value}
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java_installer.java_version=JDK 版本
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java_installer.or_higher=(及以上)
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java_installer.java_architecture=JDK 架构
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java_installer.java_source=JDK 源码
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java_installer.pre-installed=预安装
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java=编辑或创建新 {0} 任务
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java.settings.sentence=在 {section} 下，检查 {option}
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java.settings.sentence.section=代码分析
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.java.settings.sentence.option=执行 SonarQube 或 SonarCloud 分析
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.publish_qg.sentence=添加 {task} 任务，把 SonarQube 质量阈结果发布到你的构建流水线简介中
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.publish_qg.info.sentence1=这个任务可能会增加你的构建时间，因为流水线会等待 SonarQube 执行分析报告。强烈推荐，但是属于可选项。
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.publish_qg.sentence.task=公共质量阈结果
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.continous_integration.sentence=在流水线标签下，选中 {continuous_integration} 选择所有需要自动执行 SonarQube 分析的分支
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.continous_integration.sentence.tab=触发器
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.continous_integration.sentence.continuous_integration=启用持续集成
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.continous_integration.no_branches.sentence=在流水线的 {tab} 标签下，选中 {continuous_integration} 选择主干分支
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.continous_integration.no_branches.sentence.tab=触发器
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.continous_integration.no_branches.sentence.continuous_integration=启用持续集成
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.branch_protection=如果希望拉取请求会自动分析，并在质量阈失败时不自动执行合并，可以参考 {link}。
onboarding.tutorial.with.azure_pipelines.BranchAnalysis.branch_protection.link=文档

onboarding.tutorial.no_scan_rights=无权分析此项目。请联系项目管理员。
#------------------------------------------------------------------------------
#
# BRANCHES
#
#------------------------------------------------------------------------------
branches.branch=分支
branches.main_branch=主分支
branches.pr=PR
branches.see_the_pr=查看 PR

#------------------------------------------------------------------------------
#
# BRANCH-LIKE NAVIGATION
#
#------------------------------------------------------------------------------
branch_like_navigation.manage=管理分支和拉取请求
branch_like_navigation.search_for_branch_like=搜索分支或拉取请求...
branch_like_navigation.pull_requests=拉取请求
branch_like_navigation.orphan_pull_requests=孤儿拉取请求
branch_like_navigation.orphan_pull_requests.tooltip=当拉取请求的基线被删除了，拉取请求就变为了孤儿。
branch_like_navigation.for_merge_into_x_from_y=从 {branch} 合并入 {target}
branch_like_navigation.no_branch_support.title=充分利用 SonarQube 的分支分析
branch_like_navigation.no_branch_support.title.pr=充分利用 SonarQube 的分支和 PR 分析
branch_like_navigation.no_branch_support.title.mr=充分利用 SonarQube 的分支和 MR 分析
branch_like_navigation.no_branch_support.content=开发者版可以独立分析项目的每个分支。
branch_like_navigation.no_branch_support.content_x.pr=开发者版本可以分析所有拉取请求并获取对应结果 {0}。你也可以在 SonarQube 中单独分析每个 PR 来观察发布分支的质量。
branch_like_navigation.no_branch_support.content_x.mr=开发者版本可以分析所有合并请求并获取对应结果 {0}。你也可以在 SonarQube 中单独分析每个 MR 来观察发布分支的质量。
branch_like_navigation.only_one_branch.title=了解如何在 SonarQube 中分析分支
branch_like_navigation.only_one_branch.content=快速设置分支分析，为每个分支和拉取请求进行独立分析。
branch_like_navigation.only_one_branch.documentation=分支文档
branch_like_navigation.only_one_branch.pr_analysis=拉取请求分析
branch_like_navigation.tutorial_for_ci=显示如何设置 CI

#------------------------------------------------------------------------------
#
# APPLICATIONS
#
#------------------------------------------------------------------------------
application.cannot_access_all_child_projects1=浏览项目，需要在应用中访问所有项目的权限。
application.cannot_access_all_child_projects2=请联系项目管理员。

#------------------------------------------------------------------------------
#
# PORTFOLIOS
#
#------------------------------------------------------------------------------
portfolio.has_always_been_x=一直为 {rating}
portfolio.was_x_y=为 {rating} {date}
portfolio.x_in_y={projects} 在 {rating}
portfolio.project_branch=项目分支
portfolio.project_branches=项目分支
portfolio.has_qg_status=质量阈状态
portfolio.have_qg_status=质量阈状态
portfolio.empty=视图为空。
portfolio.no_lines_of_code=视图中的所有项目都是空的。
portfolio.not_computed=视图尚未计算。
portfolio.app.empty=空应用。
portfolio.app.no_lines_of_code=应用中的所有项目都是空的。
portfolio.metric_trend=指标趋势
portfolio.lowest_rated_project_branches=评级最低项目分支
portfolio.health_factors=视图健康度因数
portfolio.activity_link=活动
portfolio.measures_link=指标
portfolio.language_breakdown_link=语言分解
portfolio.breakdown=视图分解
portfolio.number_of_projects=项目数量
portfolio.number_of_lines=代码行数

portfolio.metric_domain.vulnerabilities=安全漏洞
portfolio.metric_domain.security_hotspots=安全热点审核

#------------------------------------------------------------------------------
#
# METRIC DOMAINS HELP TEXT
#
#------------------------------------------------------------------------------

portfolio.metric_domain.releasability.help=视图中通过质量阈的项目等级
portfolio.metric_domain.reliability.help=视图中所有项目的平均可靠性等级
portfolio.metric_domain.vulnerabilities.help=视图中所有项目的平均安全等级
portfolio.metric_domain.security_hotspots.help=每千行代码需要审核或正在审核的安全热点比率。
portfolio.metric_domain.maintainability.help=视图中所有项目平均可维护性等级。

#------------------------------------------------------------------------------
#
# ENCRYPTION
#
#------------------------------------------------------------------------------
encryption.form_intro=已注册秘钥。可以对下面表单的任何参数进行加密：
encryption.form_note=可以修改秘钥，但是所有加密的属性都会更新。{moreInformationLink}
encryption.encrypted_value=加密数据
encryption.generate_secret_key=生成秘钥
encryption.generate_new_secret_key=生成新密码
encryption.encrypt=加密
encryption.secret_key_description=需要密钥才能加密属性。{moreInformationLink}
encryption.secret_key=秘钥
encryption.how_to_use=如何使用
encryption.how_to_use.content1=把秘钥存储在服务器的 {secret_file} 。如果想修改文件位置，可以修改 {propreties_file} 中的 {property} 属性。
encryption.how_to_use.content2=需要限制这个文件的权限，只允许拥有者拥有只读权限。
encryption.how_to_use.content3=如果配置 {property} 发生了变化，需要重启服务。
encryption.how_to_use.content4=如果想要加密属性，生成加密后的值，替换存储的原始值（配置文件，命令行）。


#------------------------------------------------------------------------------
#
# USERS
#
#------------------------------------------------------------------------------
users.page=用户
users.page.description=创建管理个人用户
users.deactivate=禁用
users.deactivate_user=禁用用户
users.deactivate_user.confirmation=确认禁用 "{0} ({1})"？
users.delete_user=删除用户个人信息
users.delete_user.help=删除个人信息后，用户帐户将无法重新激活。{link}
users.delete_user.help.link=了解更多
users.delete_user.documentation=认证
users.create_user=创建用户
users.update_user=更新用户
users.cannot_update_delegated_user=无法更新此用户的姓名和邮箱，因为他是由外部账号供应商控制的。
users.minimum_x_characters=最少 {0} 个字符
users.email=邮箱
users.last_connection=最后连接
users.update_groups=更新群组
users.update_tokens=更新令牌
users.add=添加用户
users.remove=删除用户
users.search_description=根据登录账号或姓名搜索用户
users.update=更新用户
users.tokens=令牌
users.user_X_tokens={user} 的令牌
users.tokens.sure=确认？
users.tokens.sure_X=是否确认回收令牌 {token}？
users.tokens.revoke=回收
users.tokens.revoke_token=回收令牌
users.no_tokens=无令牌
users.generate=生成
users.tokens.PROJECT_ANALYSIS_TOKEN=项目分析令牌
users.tokens.PROJECT_ANALYSIS_TOKEN.short=项目
users.tokens.GLOBAL_ANALYSIS_TOKEN=全局分析令牌
users.tokens.GLOBAL_ANALYSIS_TOKEN.short=全局
users.tokens.USER_TOKEN=用户令牌
users.tokens.USER_TOKEN.short=用户
users.tokens.generate=通用令牌
users.tokens.name=名称
users.tokens.enter_name=输入令牌名称
users.tokens.type=类型
users.tokens.select_type=选择令牌类型
users.tokens.project=项目
users.tokens.select_project=选择项目
users.tokens.expires_in=过期时间
users.tokens.expiration.30=30 天
users.tokens.expiration.90=90 天
users.tokens.expiration.365=1 年
users.tokens.expiration.0=永不过期
users.tokens.new_token_created=创建了新令牌 "{0}"。请立即复制，不会再显示第二次！
users.generate_new_token=生成新令牌
users.new_token=新令牌
users.change_admin_password.instance_is_at_risk=保护你的 SonarQube 实例
users.change_admin_password.header=正在使用默认的管理员凭证
users.change_admin_password.description=你的 SonarQube 还在使用默认管理员凭证。你必须修改 "admin" 账户的密码，以保证 SonarQube 实例的安全。
users.change_admin_password.form.header=修改 'admin' 用户的密码
users.change_admin_password.form.password='admin' 用户的新密码
users.change_admin_password.form.confirm=确认 'admin' 用户的密码
users.change_admin_password.form.cannot_use_default_password=必须使用与默认密码不同的新密码。
users.change_admin_password.form.success=成功修改 admin 用户的密码。
users.change_admin_password.form.continue_to_app=继续使用 SonarQube

#------------------------------------------------------------------------------
#
# GROUPS
#
#------------------------------------------------------------------------------
user_groups.page=群组
user_groups.page.description=创建和管理用户群组。
user_groups.anyone.description=任何浏览应用的人（登录用户或游客）都属于这个群组。
groups.delete_group=删除群组
groups.delete_group.confirmation=确认删除 "{0}"？
groups.create_group=创建群组
groups.update_group=更新群组
groups.anyone=任何人


#------------------------------------------------------------------------------
#
# MAINTENANCE
#
#------------------------------------------------------------------------------
maintenance.page=维护
maintenance.upgrade_failed=升级失败
maintenance.upgrade_failed.text=无法连接数据库，请检查数据库状态和 JDBC 配置。
maintenance.migration_not_supported=不支持迁移
maintenance.migration_not_supported.text=嵌入式数据库不支持迁移。
maintenance.upgrade_database=升级数据库
maintenance.upgrade_database.1=数据库升级可能花费几分钟时间。
maintenance.upgrade_database.2=升级前必须备份数据。
maintenance.upgrade_database.3=一定更要按照 SonarQube 升级指南进行操作。
maintenance.upgrade=升级
maintenance.database_migration=数据库迁移
maintenance.database_is_up_to_date=数据库已过期
maintenance.is_down={instance} 已停机
maintenance.sonarqube_is_down.text=遇到一些问题。请联系系统管理员。
maintenance.try_again=重试
maintenance.is_under_maintenance={instance} 正在维护
maintenance.sonarqube_is_under_maintenance.1=等待过程中，你可以将 {link} 安装到你的 IDE。
maintenance.sonarqube_is_under_maintenance_link.1=SonarLint
maintenance.sonarqube_is_under_maintenance.2=如果你是系统管理员，但是不知道这条信息的含义，请阅读 {link}。
maintenance.sonarqube_is_under_maintenance_link.2=升级指南
maintenance.is_starting={instance} 正在启动
maintenance.is_up={instance} 已启动
maintenance.all_systems_opetational=所有系统都已启动。
maintenance.is_offline={instance} 已离线
maintenance.sonarqube_is_offline.text=SonarQube 无法连接，请联系系统管理员。

#------------------------------------------------------------------------------
#
# INDEXATION
#
#------------------------------------------------------------------------------
indexation.in_progress=SonarQube 正在重新加载项目数据。执行完成前有些项目可能无法使用。
indexation.progression={0}% 完成。
indexation.progression_with_error={0}% 完成，包含 {link}。
indexation.progression_with_error.link=任务失败
indexation.completed=所有项目数据都已重新加载
indexation.completed_with_error=SonarQube 已完成项目数据的重新加载。一些 {link} 导致一些项目还不可用。
indexation.completed_with_error.link=任务失败
indexation.admin_link=参考 {link} 获取更多信息。
indexation.page_unavailable.title.issues=问题页面暂时不可用
indexation.page_unavailable.title.portfolios=视图页面暂时不可用
indexation.page_unavailable.title={componentQualifier} {componentName} 暂时不可用
indexation.page_unavailable.description=数据重新加载后此页面将恢复可用，它将因为 SonarQube 实例中的项目和问题数量的多少而等待一段时间。
indexation.page_unavailable.description.additional_information=可以在这段时间中继续分析项目。


#------------------------------------------------------------------------------
#
# HOMEPAGE
#
#------------------------------------------------------------------------------
homepage.current=此为首页。任何时候点击左上角的 Logo 即可到达。
homepage.current.is_default=此页为主页。任何时候都可以点击左上方图标跳转到这里。
homepage.check=将当前页面设置为自己的首页



#------------------------------------------------------------------------------
#
# FAVORITE
#
#------------------------------------------------------------------------------
favorite.action.TRK.add=收藏项目
favorite.action.TRK.remove=取消收藏项目
favorite.action.VW.add=收藏视图
favorite.action.VW.remove=取消收藏视图
favorite.action.SVW.add=收藏子视图
favorite.action.SVW.remove=取消收藏子视图
favorite.action.APP.add=收藏应用
favorite.action.APP.remove=取消收藏应用
favorite.action.TRK.add_x=收藏项目 {0}
favorite.action.TRK.remove_x=取消收藏项目 {0}
favorite.action.VW.add_x=收藏视图 {0}
favorite.action.VW.remove_x=取消收藏视图 {0}
favorite.action.SVW.add_x=收藏子视图 {0}
favorite.action.SVW.remove_x=取消收藏子视图 {0}
favorite.action.APP.add_x=收藏应用 {0}
favorite.action.APP.remove_x=取消收藏应用 {0}


#------------------------------------------------------------------------------
#
# WEBHOOKS
#
#------------------------------------------------------------------------------
webhooks.page=Webhook
webhooks.create=创建 Webhook
webhooks.delete=删除 Webhook
webhooks.delete.confirm=确认删除 Webhook "{0}"？
webhooks.description=Webhook 在任务分析完成后提醒外部服务。一个包含 JSON 负载的 HTTP POST 请求会发送给每个设置的 URL。参考 {url}。
webhooks.deliveries.show=显示当前信息
webhooks.deliveries_for_x=当前 {0} 条信息
webhooks.delivery.duration_x=持续：{0}
webhooks.delivery.payload=负载：
webhooks.delivery.response_x=响应：{0}
webhooks.delivery.server_unreachable=服务器无法访问
webhooks.documentation_link=Webhook 文档
webhooks.last_execution=最后信息
webhooks.last_execution.none=没有信息
webhooks.latest_delivery_for_x=最后 {0} 条信息
webhooks.maximum_reached=Webhook 个数超过最大限制。你可以更新或删除已有的 Webhook。
webhooks.name=名称
webhooks.name.required=请填写名称。
webhooks.no_result=未定义 Webhook
webhooks.update=更新 Webhook
webhooks.secret=密码
webhooks.secret_header=密码？
webhooks.secret.bad_format=密码必须小于 200 个字符
webhooks.secret.description=如果提供了密码，会用来生成 16 进制（小写）HMAC 摘要，对应值会包含在 'X-Sonar-Webhook-HMAC-SHA256' 头部。
webhooks.url=URL
webhooks.url.bad_format=URL 格式错误。
webhooks.url.bad_protocol=URL 必须以 "http://" 或 "https://" 开始。
webhooks.url.description=接收 Webhook 负载内容的服务器地址，比如："http://my_server/foo"。如果要使用 HTTP Basic 认证，推荐使用 HTTPS 防御中间人攻击。比如："https://myLogin:myPassword@my_server/foo"
webhooks.url.required=URL 是必填项。


#------------------------------------------------------------------------------
#
# COMPONENT REPORT
#
#------------------------------------------------------------------------------
component_report.report={0} PDF 报告
component_report.download=下载 {0} PDF 报告
component_report.no_email_to_subscribe=邮件订阅需要输入一个邮件地址。
component_report.subscribe_x=订阅 {0} 报告
component_report.unsubscribe_x=取消订阅 {0} 报告
component_report.unsubscribe=取消订阅报告
component_report.unsubscribe.description=如果不想收到邮件报告，可以点击下面按钮取消订阅。
component_report.subscribe_x_success=订阅成功。你会收到 {1} 的 {0} 报告邮件。
component_report.unsubscribe_x_success=订阅成功取消。你不会再收到 {1} 的 {0} 报告邮件。
component_report.unsubscribe_success=订阅成功取消。你不会再收到报告邮件。
